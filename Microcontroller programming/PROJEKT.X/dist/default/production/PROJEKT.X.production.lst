

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun May 10 14:33:14 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F46K22 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     _ANSELAbits	set	3896
    84  0000                     _ANSELE	set	3900
    85  0000                     _CCPTMRS0bits	set	3913
    86  0000                     _ANSELC	set	3898
    87  0000                     _ANSELA	set	3896
    88  0000                     _ANSELDbits	set	3899
    89  0000                     _TXREG1	set	4013
    90  0000                     _LATCbits	set	3979
    91  0000                     _LATDbits	set	3980
    92  0000                     _RCREG1	set	4014
    93  0000                     _ADRESL	set	4035
    94  0000                     _ADRESH	set	4036
    95  0000                     _ADCON0bits	set	4034
    96  0000                     _ADCON2bits	set	4032
    97  0000                     _T2CONbits	set	4026
    98  0000                     _CCPR1L	set	4030
    99  0000                     _CCP1CONbits	set	4029
   100  0000                     _PR2	set	4027
   101  0000                     _PSTR1CONbits	set	4025
   102  0000                     _TRISD	set	3989
   103  0000                     _TXSTA1bits	set	4012
   104  0000                     _RCSTA1bits	set	4011
   105  0000                     _SPBRG1	set	4015
   106  0000                     _PORTCbits	set	3970
   107  0000                     _PORTAbits	set	3968
   108  0000                     _TRISCbits	set	3988
   109  0000                     _SSP2STATbits	set	3949
   110  0000                     _SSP2BUF	set	3951
   111  0000                     _SSP2CON2bits	set	3947
   112  0000                     _SSP2ADD	set	3950
   113  0000                     _SSP2CON1bits	set	3948
   114  0000                     _LATAbits	set	3977
   115  0000                     _TRISAbits	set	3986
   116  0000                     _TRISDbits	set	3989
   117  0000                     _TX1IF	set	31988
   118  0000                     _GODONE	set	32273
   119  0000                     _RC1IF	set	31989
   120  0000                     _ADIE	set	31982
   121  0000                     _ADIF	set	31990
   122  0000                     _TMR2ON	set	32210
   123  0000                     _TMR2IF	set	31985
   124  0000                     _RC1IE	set	31981
   125  0000                     _GIE	set	32663
   126  0000                     _PEIE	set	32662
   127  0000                     _SSP2IF	set	32039
   128                           
   129                           	psect	mediumconst
   130  00FB12                     __pmediumconst:
   131                           	opt callstack 0
   132  00FB12  00                 	db	0
   133  00FB13                     STR_21:
   134  00FB13  45                 	db	69	;'E'
   135  00FB14  6E                 	db	110	;'n'
   136  00FB15  74                 	db	116	;'t'
   137  00FB16  65                 	db	101	;'e'
   138  00FB17  72                 	db	114	;'r'
   139  00FB18  20                 	db	32
   140  00FB19  6F                 	db	111	;'o'
   141  00FB1A  6E                 	db	110	;'n'
   142  00FB1B  6C                 	db	108	;'l'
   143  00FB1C  79                 	db	121	;'y'
   144  00FB1D  20                 	db	32
   145  00FB1E  76                 	db	118	;'v'
   146  00FB1F  61                 	db	97	;'a'
   147  00FB20  6C                 	db	108	;'l'
   148  00FB21  69                 	db	105	;'i'
   149  00FB22  64                 	db	100	;'d'
   150  00FB23  20                 	db	32
   151  00FB24  63                 	db	99	;'c'
   152  00FB25  68                 	db	104	;'h'
   153  00FB26  61                 	db	97	;'a'
   154  00FB27  72                 	db	114	;'r'
   155  00FB28  61                 	db	97	;'a'
   156  00FB29  63                 	db	99	;'c'
   157  00FB2A  74                 	db	116	;'t'
   158  00FB2B  65                 	db	101	;'e'
   159  00FB2C  72                 	db	114	;'r'
   160  00FB2D  73                 	db	115	;'s'
   161  00FB2E  20                 	db	32
   162  00FB2F  3A                 	db	58	;':'
   163  00FB30  29                 	db	41
   164  00FB31  0A                 	db	10
   165  00FB32  0A                 	db	10
   166  00FB33  0A                 	db	10
   167  00FB34  00                 	db	0
   168  00FB35                     STR_68:
   169  00FB35  44                 	db	68	;'D'
   170  00FB36  75                 	db	117	;'u'
   171  00FB37  74                 	db	116	;'t'
   172  00FB38  79                 	db	121	;'y'
   173  00FB39  20                 	db	32
   174  00FB3A  3D                 	db	61	;'='
   175  00FB3B  20                 	db	32
   176  00FB3C  25                 	db	37
   177  00FB3D  64                 	db	100	;'d'
   178  00FB3E  20                 	db	32
   179  00FB3F  20                 	db	32
   180  00FB40  20                 	db	32
   181  00FB41  20                 	db	32
   182  00FB42  20                 	db	32
   183  00FB43  20                 	db	32
   184  00FB44  20                 	db	32
   185  00FB45  20                 	db	32
   186  00FB46  20                 	db	32
   187  00FB47  20                 	db	32
   188  00FB48  20                 	db	32
   189  00FB49  20                 	db	32
   190  00FB4A  20                 	db	32
   191  00FB4B  00                 	db	0
   192  00FB4C                     STR_91:
   193  00FB4C  25                 	db	37
   194  00FB4D  63                 	db	99	;'c'
   195  00FB4E  6F                 	db	111	;'o'
   196  00FB4F  20                 	db	32
   197  00FB50  20                 	db	32
   198  00FB51  20                 	db	32
   199  00FB52  20                 	db	32
   200  00FB53  20                 	db	32
   201  00FB54  20                 	db	32
   202  00FB55  20                 	db	32
   203  00FB56  20                 	db	32
   204  00FB57  20                 	db	32
   205  00FB58  20                 	db	32
   206  00FB59  20                 	db	32
   207  00FB5A  20                 	db	32
   208  00FB5B  20                 	db	32
   209  00FB5C  25                 	db	37
   210  00FB5D  63                 	db	99	;'c'
   211  00FB5E  00                 	db	0
   212  00FB5F                     STR_92:
   213  00FB5F  25                 	db	37
   214  00FB60  63                 	db	99	;'c'
   215  00FB61  20                 	db	32
   216  00FB62  6F                 	db	111	;'o'
   217  00FB63  20                 	db	32
   218  00FB64  20                 	db	32
   219  00FB65  20                 	db	32
   220  00FB66  20                 	db	32
   221  00FB67  20                 	db	32
   222  00FB68  20                 	db	32
   223  00FB69  20                 	db	32
   224  00FB6A  20                 	db	32
   225  00FB6B  20                 	db	32
   226  00FB6C  20                 	db	32
   227  00FB6D  20                 	db	32
   228  00FB6E  20                 	db	32
   229  00FB6F  25                 	db	37
   230  00FB70  63                 	db	99	;'c'
   231  00FB71  00                 	db	0
   232  00FB72                     STR_93:
   233  00FB72  25                 	db	37
   234  00FB73  63                 	db	99	;'c'
   235  00FB74  20                 	db	32
   236  00FB75  20                 	db	32
   237  00FB76  6F                 	db	111	;'o'
   238  00FB77  20                 	db	32
   239  00FB78  20                 	db	32
   240  00FB79  20                 	db	32
   241  00FB7A  20                 	db	32
   242  00FB7B  20                 	db	32
   243  00FB7C  20                 	db	32
   244  00FB7D  20                 	db	32
   245  00FB7E  20                 	db	32
   246  00FB7F  20                 	db	32
   247  00FB80  20                 	db	32
   248  00FB81  20                 	db	32
   249  00FB82  25                 	db	37
   250  00FB83  63                 	db	99	;'c'
   251  00FB84  00                 	db	0
   252  00FB85                     STR_94:
   253  00FB85  25                 	db	37
   254  00FB86  63                 	db	99	;'c'
   255  00FB87  20                 	db	32
   256  00FB88  20                 	db	32
   257  00FB89  20                 	db	32
   258  00FB8A  6F                 	db	111	;'o'
   259  00FB8B  20                 	db	32
   260  00FB8C  20                 	db	32
   261  00FB8D  20                 	db	32
   262  00FB8E  20                 	db	32
   263  00FB8F  20                 	db	32
   264  00FB90  20                 	db	32
   265  00FB91  20                 	db	32
   266  00FB92  20                 	db	32
   267  00FB93  20                 	db	32
   268  00FB94  20                 	db	32
   269  00FB95  25                 	db	37
   270  00FB96  63                 	db	99	;'c'
   271  00FB97  00                 	db	0
   272  00FB98                     STR_95:
   273  00FB98  25                 	db	37
   274  00FB99  63                 	db	99	;'c'
   275  00FB9A  20                 	db	32
   276  00FB9B  20                 	db	32
   277  00FB9C  20                 	db	32
   278  00FB9D  20                 	db	32
   279  00FB9E  6F                 	db	111	;'o'
   280  00FB9F  20                 	db	32
   281  00FBA0  20                 	db	32
   282  00FBA1  20                 	db	32
   283  00FBA2  20                 	db	32
   284  00FBA3  20                 	db	32
   285  00FBA4  20                 	db	32
   286  00FBA5  20                 	db	32
   287  00FBA6  20                 	db	32
   288  00FBA7  20                 	db	32
   289  00FBA8  25                 	db	37
   290  00FBA9  63                 	db	99	;'c'
   291  00FBAA  00                 	db	0
   292  00FBAB                     STR_96:
   293  00FBAB  25                 	db	37
   294  00FBAC  63                 	db	99	;'c'
   295  00FBAD  20                 	db	32
   296  00FBAE  20                 	db	32
   297  00FBAF  20                 	db	32
   298  00FBB0  20                 	db	32
   299  00FBB1  20                 	db	32
   300  00FBB2  6F                 	db	111	;'o'
   301  00FBB3  20                 	db	32
   302  00FBB4  20                 	db	32
   303  00FBB5  20                 	db	32
   304  00FBB6  20                 	db	32
   305  00FBB7  20                 	db	32
   306  00FBB8  20                 	db	32
   307  00FBB9  20                 	db	32
   308  00FBBA  20                 	db	32
   309  00FBBB  25                 	db	37
   310  00FBBC  63                 	db	99	;'c'
   311  00FBBD  00                 	db	0
   312  00FBBE                     STR_97:
   313  00FBBE  25                 	db	37
   314  00FBBF  63                 	db	99	;'c'
   315  00FBC0  20                 	db	32
   316  00FBC1  20                 	db	32
   317  00FBC2  20                 	db	32
   318  00FBC3  20                 	db	32
   319  00FBC4  20                 	db	32
   320  00FBC5  20                 	db	32
   321  00FBC6  6F                 	db	111	;'o'
   322  00FBC7  20                 	db	32
   323  00FBC8  20                 	db	32
   324  00FBC9  20                 	db	32
   325  00FBCA  20                 	db	32
   326  00FBCB  20                 	db	32
   327  00FBCC  20                 	db	32
   328  00FBCD  20                 	db	32
   329  00FBCE  25                 	db	37
   330  00FBCF  63                 	db	99	;'c'
   331  00FBD0  00                 	db	0
   332  00FBD1                     STR_98:
   333  00FBD1  25                 	db	37
   334  00FBD2  63                 	db	99	;'c'
   335  00FBD3  20                 	db	32
   336  00FBD4  20                 	db	32
   337  00FBD5  20                 	db	32
   338  00FBD6  20                 	db	32
   339  00FBD7  20                 	db	32
   340  00FBD8  20                 	db	32
   341  00FBD9  20                 	db	32
   342  00FBDA  6F                 	db	111	;'o'
   343  00FBDB  20                 	db	32
   344  00FBDC  20                 	db	32
   345  00FBDD  20                 	db	32
   346  00FBDE  20                 	db	32
   347  00FBDF  20                 	db	32
   348  00FBE0  20                 	db	32
   349  00FBE1  25                 	db	37
   350  00FBE2  63                 	db	99	;'c'
   351  00FBE3  00                 	db	0
   352  00FBE4                     STR_99:
   353  00FBE4  25                 	db	37
   354  00FBE5  63                 	db	99	;'c'
   355  00FBE6  20                 	db	32
   356  00FBE7  20                 	db	32
   357  00FBE8  20                 	db	32
   358  00FBE9  20                 	db	32
   359  00FBEA  20                 	db	32
   360  00FBEB  20                 	db	32
   361  00FBEC  20                 	db	32
   362  00FBED  20                 	db	32
   363  00FBEE  6F                 	db	111	;'o'
   364  00FBEF  20                 	db	32
   365  00FBF0  20                 	db	32
   366  00FBF1  20                 	db	32
   367  00FBF2  20                 	db	32
   368  00FBF3  20                 	db	32
   369  00FBF4  25                 	db	37
   370  00FBF5  63                 	db	99	;'c'
   371  00FBF6  00                 	db	0
   372  00FBF7                     STR_100:
   373  00FBF7  25                 	db	37
   374  00FBF8  63                 	db	99	;'c'
   375  00FBF9  20                 	db	32
   376  00FBFA  20                 	db	32
   377  00FBFB  20                 	db	32
   378  00FBFC  20                 	db	32
   379  00FBFD  20                 	db	32
   380  00FBFE  20                 	db	32
   381  00FBFF  20                 	db	32
   382  00FC00  20                 	db	32
   383  00FC01  20                 	db	32
   384  00FC02  6F                 	db	111	;'o'
   385  00FC03  20                 	db	32
   386  00FC04  20                 	db	32
   387  00FC05  20                 	db	32
   388  00FC06  20                 	db	32
   389  00FC07  25                 	db	37
   390  00FC08  63                 	db	99	;'c'
   391  00FC09  00                 	db	0
   392  00FC0A                     STR_101:
   393  00FC0A  25                 	db	37
   394  00FC0B  63                 	db	99	;'c'
   395  00FC0C  20                 	db	32
   396  00FC0D  20                 	db	32
   397  00FC0E  20                 	db	32
   398  00FC0F  20                 	db	32
   399  00FC10  20                 	db	32
   400  00FC11  20                 	db	32
   401  00FC12  20                 	db	32
   402  00FC13  20                 	db	32
   403  00FC14  20                 	db	32
   404  00FC15  20                 	db	32
   405  00FC16  6F                 	db	111	;'o'
   406  00FC17  20                 	db	32
   407  00FC18  20                 	db	32
   408  00FC19  20                 	db	32
   409  00FC1A  25                 	db	37
   410  00FC1B  63                 	db	99	;'c'
   411  00FC1C  00                 	db	0
   412  00FC1D                     STR_102:
   413  00FC1D  25                 	db	37
   414  00FC1E  63                 	db	99	;'c'
   415  00FC1F  20                 	db	32
   416  00FC20  20                 	db	32
   417  00FC21  20                 	db	32
   418  00FC22  20                 	db	32
   419  00FC23  20                 	db	32
   420  00FC24  20                 	db	32
   421  00FC25  20                 	db	32
   422  00FC26  20                 	db	32
   423  00FC27  20                 	db	32
   424  00FC28  20                 	db	32
   425  00FC29  20                 	db	32
   426  00FC2A  6F                 	db	111	;'o'
   427  00FC2B  20                 	db	32
   428  00FC2C  20                 	db	32
   429  00FC2D  25                 	db	37
   430  00FC2E  63                 	db	99	;'c'
   431  00FC2F  00                 	db	0
   432  00FC30                     STR_103:
   433  00FC30  25                 	db	37
   434  00FC31  63                 	db	99	;'c'
   435  00FC32  20                 	db	32
   436  00FC33  20                 	db	32
   437  00FC34  20                 	db	32
   438  00FC35  20                 	db	32
   439  00FC36  20                 	db	32
   440  00FC37  20                 	db	32
   441  00FC38  20                 	db	32
   442  00FC39  20                 	db	32
   443  00FC3A  20                 	db	32
   444  00FC3B  20                 	db	32
   445  00FC3C  20                 	db	32
   446  00FC3D  20                 	db	32
   447  00FC3E  6F                 	db	111	;'o'
   448  00FC3F  20                 	db	32
   449  00FC40  25                 	db	37
   450  00FC41  63                 	db	99	;'c'
   451  00FC42  00                 	db	0
   452  00FC43                     STR_104:
   453  00FC43  25                 	db	37
   454  00FC44  63                 	db	99	;'c'
   455  00FC45  20                 	db	32
   456  00FC46  20                 	db	32
   457  00FC47  20                 	db	32
   458  00FC48  20                 	db	32
   459  00FC49  20                 	db	32
   460  00FC4A  20                 	db	32
   461  00FC4B  20                 	db	32
   462  00FC4C  20                 	db	32
   463  00FC4D  20                 	db	32
   464  00FC4E  20                 	db	32
   465  00FC4F  20                 	db	32
   466  00FC50  20                 	db	32
   467  00FC51  20                 	db	32
   468  00FC52  6F                 	db	111	;'o'
   469  00FC53  25                 	db	37
   470  00FC54  63                 	db	99	;'c'
   471  00FC55  00                 	db	0
   472  00FC56                     STR_73:
   473  00FC56  56                 	db	86	;'V'
   474  00FC57  41                 	db	65	;'A'
   475  00FC58  4C                 	db	76	;'L'
   476  00FC59  55                 	db	85	;'U'
   477  00FC5A  45                 	db	69	;'E'
   478  00FC5B  20                 	db	32
   479  00FC5C  3D                 	db	61	;'='
   480  00FC5D  20                 	db	32
   481  00FC5E  25                 	db	37
   482  00FC5F  64                 	db	100	;'d'
   483  00FC60  20                 	db	32
   484  00FC61  20                 	db	32
   485  00FC62  20                 	db	32
   486  00FC63  20                 	db	32
   487  00FC64  20                 	db	32
   488  00FC65  20                 	db	32
   489  00FC66  20                 	db	32
   490  00FC67  00                 	db	0
   491  00FC68                     STR_74:
   492  00FC68  4F                 	db	79	;'O'
   493  00FC69  20                 	db	32
   494  00FC6A  20                 	db	32
   495  00FC6B  20                 	db	32
   496  00FC6C  20                 	db	32
   497  00FC6D  20                 	db	32
   498  00FC6E  20                 	db	32
   499  00FC6F  20                 	db	32
   500  00FC70  20                 	db	32
   501  00FC71  20                 	db	32
   502  00FC72  20                 	db	32
   503  00FC73  20                 	db	32
   504  00FC74  20                 	db	32
   505  00FC75  20                 	db	32
   506  00FC76  20                 	db	32
   507  00FC77  20                 	db	32
   508  00FC78  00                 	db	0
   509  00FC79                     STR_75:
   510  00FC79  4F                 	db	79	;'O'
   511  00FC7A  4F                 	db	79	;'O'
   512  00FC7B  20                 	db	32
   513  00FC7C  20                 	db	32
   514  00FC7D  20                 	db	32
   515  00FC7E  20                 	db	32
   516  00FC7F  20                 	db	32
   517  00FC80  20                 	db	32
   518  00FC81  20                 	db	32
   519  00FC82  20                 	db	32
   520  00FC83  20                 	db	32
   521  00FC84  20                 	db	32
   522  00FC85  20                 	db	32
   523  00FC86  20                 	db	32
   524  00FC87  20                 	db	32
   525  00FC88  20                 	db	32
   526  00FC89  00                 	db	0
   527  00FC8A                     STR_76:
   528  00FC8A  4F                 	db	79	;'O'
   529  00FC8B  4F                 	db	79	;'O'
   530  00FC8C  4F                 	db	79	;'O'
   531  00FC8D  20                 	db	32
   532  00FC8E  20                 	db	32
   533  00FC8F  20                 	db	32
   534  00FC90  20                 	db	32
   535  00FC91  20                 	db	32
   536  00FC92  20                 	db	32
   537  00FC93  20                 	db	32
   538  00FC94  20                 	db	32
   539  00FC95  20                 	db	32
   540  00FC96  20                 	db	32
   541  00FC97  20                 	db	32
   542  00FC98  20                 	db	32
   543  00FC99  20                 	db	32
   544  00FC9A  00                 	db	0
   545  00FC9B                     STR_77:
   546  00FC9B  4F                 	db	79	;'O'
   547  00FC9C  4F                 	db	79	;'O'
   548  00FC9D  4F                 	db	79	;'O'
   549  00FC9E  4F                 	db	79	;'O'
   550  00FC9F  20                 	db	32
   551  00FCA0  20                 	db	32
   552  00FCA1  20                 	db	32
   553  00FCA2  20                 	db	32
   554  00FCA3  20                 	db	32
   555  00FCA4  20                 	db	32
   556  00FCA5  20                 	db	32
   557  00FCA6  20                 	db	32
   558  00FCA7  20                 	db	32
   559  00FCA8  20                 	db	32
   560  00FCA9  20                 	db	32
   561  00FCAA  20                 	db	32
   562  00FCAB  00                 	db	0
   563  00FCAC                     STR_78:
   564  00FCAC  4F                 	db	79	;'O'
   565  00FCAD  4F                 	db	79	;'O'
   566  00FCAE  4F                 	db	79	;'O'
   567  00FCAF  4F                 	db	79	;'O'
   568  00FCB0  4F                 	db	79	;'O'
   569  00FCB1  20                 	db	32
   570  00FCB2  20                 	db	32
   571  00FCB3  20                 	db	32
   572  00FCB4  20                 	db	32
   573  00FCB5  20                 	db	32
   574  00FCB6  20                 	db	32
   575  00FCB7  20                 	db	32
   576  00FCB8  20                 	db	32
   577  00FCB9  20                 	db	32
   578  00FCBA  20                 	db	32
   579  00FCBB  20                 	db	32
   580  00FCBC  00                 	db	0
   581  00FCBD                     STR_79:
   582  00FCBD  4F                 	db	79	;'O'
   583  00FCBE  4F                 	db	79	;'O'
   584  00FCBF  4F                 	db	79	;'O'
   585  00FCC0  4F                 	db	79	;'O'
   586  00FCC1  4F                 	db	79	;'O'
   587  00FCC2  4F                 	db	79	;'O'
   588  00FCC3  20                 	db	32
   589  00FCC4  20                 	db	32
   590  00FCC5  20                 	db	32
   591  00FCC6  20                 	db	32
   592  00FCC7  20                 	db	32
   593  00FCC8  20                 	db	32
   594  00FCC9  20                 	db	32
   595  00FCCA  20                 	db	32
   596  00FCCB  20                 	db	32
   597  00FCCC  20                 	db	32
   598  00FCCD  00                 	db	0
   599  00FCCE                     STR_80:
   600  00FCCE  4F                 	db	79	;'O'
   601  00FCCF  4F                 	db	79	;'O'
   602  00FCD0  4F                 	db	79	;'O'
   603  00FCD1  4F                 	db	79	;'O'
   604  00FCD2  4F                 	db	79	;'O'
   605  00FCD3  4F                 	db	79	;'O'
   606  00FCD4  4F                 	db	79	;'O'
   607  00FCD5  20                 	db	32
   608  00FCD6  20                 	db	32
   609  00FCD7  20                 	db	32
   610  00FCD8  20                 	db	32
   611  00FCD9  20                 	db	32
   612  00FCDA  20                 	db	32
   613  00FCDB  20                 	db	32
   614  00FCDC  20                 	db	32
   615  00FCDD  20                 	db	32
   616  00FCDE  00                 	db	0
   617  00FCDF                     STR_81:
   618  00FCDF  4F                 	db	79	;'O'
   619  00FCE0  4F                 	db	79	;'O'
   620  00FCE1  4F                 	db	79	;'O'
   621  00FCE2  4F                 	db	79	;'O'
   622  00FCE3  4F                 	db	79	;'O'
   623  00FCE4  4F                 	db	79	;'O'
   624  00FCE5  4F                 	db	79	;'O'
   625  00FCE6  4F                 	db	79	;'O'
   626  00FCE7  20                 	db	32
   627  00FCE8  20                 	db	32
   628  00FCE9  20                 	db	32
   629  00FCEA  20                 	db	32
   630  00FCEB  20                 	db	32
   631  00FCEC  20                 	db	32
   632  00FCED  20                 	db	32
   633  00FCEE  20                 	db	32
   634  00FCEF  00                 	db	0
   635  00FCF0                     STR_82:
   636  00FCF0  4F                 	db	79	;'O'
   637  00FCF1  4F                 	db	79	;'O'
   638  00FCF2  4F                 	db	79	;'O'
   639  00FCF3  4F                 	db	79	;'O'
   640  00FCF4  4F                 	db	79	;'O'
   641  00FCF5  4F                 	db	79	;'O'
   642  00FCF6  4F                 	db	79	;'O'
   643  00FCF7  4F                 	db	79	;'O'
   644  00FCF8  4F                 	db	79	;'O'
   645  00FCF9  20                 	db	32
   646  00FCFA  20                 	db	32
   647  00FCFB  20                 	db	32
   648  00FCFC  20                 	db	32
   649  00FCFD  20                 	db	32
   650  00FCFE  20                 	db	32
   651  00FCFF  20                 	db	32
   652  00FD00  00                 	db	0
   653  00FD01                     STR_83:
   654  00FD01  4F                 	db	79	;'O'
   655  00FD02  4F                 	db	79	;'O'
   656  00FD03  4F                 	db	79	;'O'
   657  00FD04  4F                 	db	79	;'O'
   658  00FD05  4F                 	db	79	;'O'
   659  00FD06  4F                 	db	79	;'O'
   660  00FD07  4F                 	db	79	;'O'
   661  00FD08  4F                 	db	79	;'O'
   662  00FD09  4F                 	db	79	;'O'
   663  00FD0A  4F                 	db	79	;'O'
   664  00FD0B  20                 	db	32
   665  00FD0C  20                 	db	32
   666  00FD0D  20                 	db	32
   667  00FD0E  20                 	db	32
   668  00FD0F  20                 	db	32
   669  00FD10  20                 	db	32
   670  00FD11  00                 	db	0
   671  00FD12                     STR_14:
   672  00FD12  20                 	db	32
   673  00FD13  20                 	db	32
   674  00FD14  42                 	db	66	;'B'
   675  00FD15  61                 	db	97	;'a'
   676  00FD16  72                 	db	114	;'r'
   677  00FD17  67                 	db	103	;'g'
   678  00FD18  72                 	db	114	;'r'
   679  00FD19  61                 	db	97	;'a'
   680  00FD1A  70                 	db	112	;'p'
   681  00FD1B  68                 	db	104	;'h'
   682  00FD1C  20                 	db	32
   683  00FD1D  20                 	db	32
   684  00FD1E  20                 	db	32
   685  00FD1F  20                 	db	32
   686  00FD20  20                 	db	32
   687  00FD21  20                 	db	32
   688  00FD22  00                 	db	0
   689  00FD23                     STR_16:
   690  00FD23  2A                 	db	42
   691  00FD24  20                 	db	32
   692  00FD25  42                 	db	66	;'B'
   693  00FD26  61                 	db	97	;'a'
   694  00FD27  72                 	db	114	;'r'
   695  00FD28  67                 	db	103	;'g'
   696  00FD29  72                 	db	114	;'r'
   697  00FD2A  61                 	db	97	;'a'
   698  00FD2B  70                 	db	112	;'p'
   699  00FD2C  68                 	db	104	;'h'
   700  00FD2D  20                 	db	32
   701  00FD2E  20                 	db	32
   702  00FD2F  20                 	db	32
   703  00FD30  20                 	db	32
   704  00FD31  20                 	db	32
   705  00FD32  20                 	db	32
   706  00FD33  00                 	db	0
   707  00FD34                     STR_84:
   708  00FD34  4F                 	db	79	;'O'
   709  00FD35  4F                 	db	79	;'O'
   710  00FD36  4F                 	db	79	;'O'
   711  00FD37  4F                 	db	79	;'O'
   712  00FD38  4F                 	db	79	;'O'
   713  00FD39  4F                 	db	79	;'O'
   714  00FD3A  4F                 	db	79	;'O'
   715  00FD3B  4F                 	db	79	;'O'
   716  00FD3C  4F                 	db	79	;'O'
   717  00FD3D  4F                 	db	79	;'O'
   718  00FD3E  4F                 	db	79	;'O'
   719  00FD3F  20                 	db	32
   720  00FD40  20                 	db	32
   721  00FD41  20                 	db	32
   722  00FD42  20                 	db	32
   723  00FD43  20                 	db	32
   724  00FD44  00                 	db	0
   725  00FD45                     STR_6:
   726  00FD45  20                 	db	32
   727  00FD46  20                 	db	32
   728  00FD47  4D                 	db	77	;'M'
   729  00FD48  6F                 	db	111	;'o'
   730  00FD49  72                 	db	114	;'r'
   731  00FD4A  73                 	db	115	;'s'
   732  00FD4B  65                 	db	101	;'e'
   733  00FD4C  6F                 	db	111	;'o'
   734  00FD4D  76                 	db	118	;'v'
   735  00FD4E  6B                 	db	107	;'k'
   736  00FD4F  61                 	db	97	;'a'
   737  00FD50  20                 	db	32
   738  00FD51  20                 	db	32
   739  00FD52  20                 	db	32
   740  00FD53  20                 	db	32
   741  00FD54  20                 	db	32
   742  00FD55  00                 	db	0
   743  00FD56                     STR_8:
   744  00FD56  2A                 	db	42
   745  00FD57  20                 	db	32
   746  00FD58  4D                 	db	77	;'M'
   747  00FD59  6F                 	db	111	;'o'
   748  00FD5A  72                 	db	114	;'r'
   749  00FD5B  73                 	db	115	;'s'
   750  00FD5C  65                 	db	101	;'e'
   751  00FD5D  6F                 	db	111	;'o'
   752  00FD5E  76                 	db	118	;'v'
   753  00FD5F  6B                 	db	107	;'k'
   754  00FD60  61                 	db	97	;'a'
   755  00FD61  20                 	db	32
   756  00FD62  20                 	db	32
   757  00FD63  20                 	db	32
   758  00FD64  20                 	db	32
   759  00FD65  20                 	db	32
   760  00FD66  00                 	db	0
   761  00FD67                     STR_67:
   762  00FD67  50                 	db	80	;'P'
   763  00FD68  4D                 	db	77	;'M'
   764  00FD69  57                 	db	87	;'W'
   765  00FD6A  20                 	db	32
   766  00FD6B  43                 	db	67	;'C'
   767  00FD6C  6F                 	db	111	;'o'
   768  00FD6D  6E                 	db	110	;'n'
   769  00FD6E  74                 	db	116	;'t'
   770  00FD6F  72                 	db	114	;'r'
   771  00FD70  6F                 	db	111	;'o'
   772  00FD71  6C                 	db	108	;'l'
   773  00FD72  20                 	db	32
   774  00FD73  20                 	db	32
   775  00FD74  20                 	db	32
   776  00FD75  20                 	db	32
   777  00FD76  20                 	db	32
   778  00FD77  00                 	db	0
   779  00FD78                     STR_10:
   780  00FD78  20                 	db	32
   781  00FD79  20                 	db	32
   782  00FD7A  50                 	db	80	;'P'
   783  00FD7B  57                 	db	87	;'W'
   784  00FD7C  4D                 	db	77	;'M'
   785  00FD7D  20                 	db	32
   786  00FD7E  6D                 	db	109	;'m'
   787  00FD7F  6F                 	db	111	;'o'
   788  00FD80  74                 	db	116	;'t'
   789  00FD81  6F                 	db	111	;'o'
   790  00FD82  72                 	db	114	;'r'
   791  00FD83  20                 	db	32
   792  00FD84  20                 	db	32
   793  00FD85  20                 	db	32
   794  00FD86  20                 	db	32
   795  00FD87  20                 	db	32
   796  00FD88  00                 	db	0
   797  00FD89                     STR_12:
   798  00FD89  2A                 	db	42
   799  00FD8A  20                 	db	32
   800  00FD8B  50                 	db	80	;'P'
   801  00FD8C  57                 	db	87	;'W'
   802  00FD8D  4D                 	db	77	;'M'
   803  00FD8E  20                 	db	32
   804  00FD8F  6D                 	db	109	;'m'
   805  00FD90  6F                 	db	111	;'o'
   806  00FD91  74                 	db	116	;'t'
   807  00FD92  6F                 	db	111	;'o'
   808  00FD93  72                 	db	114	;'r'
   809  00FD94  20                 	db	32
   810  00FD95  20                 	db	32
   811  00FD96  20                 	db	32
   812  00FD97  20                 	db	32
   813  00FD98  20                 	db	32
   814  00FD99  00                 	db	0
   815  00FD9A                     STR_3:
   816  00FD9A  20                 	db	32
   817  00FD9B  20                 	db	32
   818  00FD9C  4D                 	db	77	;'M'
   819  00FD9D  6F                 	db	111	;'o'
   820  00FD9E  64                 	db	100	;'d'
   821  00FD9F  65                 	db	101	;'e'
   822  00FDA0  6C                 	db	108	;'l'
   823  00FDA1  20                 	db	32
   824  00FDA2  32                 	db	50	;'2'
   825  00FDA3  30                 	db	48	;'0'
   826  00FDA4  30                 	db	48	;'0'
   827  00FDA5  30                 	db	48	;'0'
   828  00FDA6  20                 	db	32
   829  00FDA7  20                 	db	32
   830  00FDA8  20                 	db	32
   831  00FDA9  20                 	db	32
   832  00FDAA  00                 	db	0
   833  00FDAB                     STR_1:
   834  00FDAB  2A                 	db	42
   835  00FDAC  20                 	db	32
   836  00FDAD  4D                 	db	77	;'M'
   837  00FDAE  6F                 	db	111	;'o'
   838  00FDAF  64                 	db	100	;'d'
   839  00FDB0  65                 	db	101	;'e'
   840  00FDB1  6C                 	db	108	;'l'
   841  00FDB2  20                 	db	32
   842  00FDB3  32                 	db	50	;'2'
   843  00FDB4  30                 	db	48	;'0'
   844  00FDB5  30                 	db	48	;'0'
   845  00FDB6  30                 	db	48	;'0'
   846  00FDB7  20                 	db	32
   847  00FDB8  20                 	db	32
   848  00FDB9  20                 	db	32
   849  00FDBA  20                 	db	32
   850  00FDBB  00                 	db	0
   851  00FDBC                     STR_2:
   852  00FDBC  20                 	db	32
   853  00FDBD  20                 	db	32
   854  00FDBE  4D                 	db	77	;'M'
   855  00FDBF  6F                 	db	111	;'o'
   856  00FDC0  64                 	db	100	;'d'
   857  00FDC1  65                 	db	101	;'e'
   858  00FDC2  6C                 	db	108	;'l'
   859  00FDC3  20                 	db	32
   860  00FDC4  33                 	db	51	;'3'
   861  00FDC5  30                 	db	48	;'0'
   862  00FDC6  30                 	db	48	;'0'
   863  00FDC7  30                 	db	48	;'0'
   864  00FDC8  20                 	db	32
   865  00FDC9  20                 	db	32
   866  00FDCA  20                 	db	32
   867  00FDCB  20                 	db	32
   868  00FDCC  00                 	db	0
   869  00FDCD                     STR_4:
   870  00FDCD  2A                 	db	42
   871  00FDCE  20                 	db	32
   872  00FDCF  4D                 	db	77	;'M'
   873  00FDD0  6F                 	db	111	;'o'
   874  00FDD1  64                 	db	100	;'d'
   875  00FDD2  65                 	db	101	;'e'
   876  00FDD3  6C                 	db	108	;'l'
   877  00FDD4  20                 	db	32
   878  00FDD5  33                 	db	51	;'3'
   879  00FDD6  30                 	db	48	;'0'
   880  00FDD7  30                 	db	48	;'0'
   881  00FDD8  30                 	db	48	;'0'
   882  00FDD9  20                 	db	32
   883  00FDDA  20                 	db	32
   884  00FDDB  20                 	db	32
   885  00FDDC  20                 	db	32
   886  00FDDD  00                 	db	0
   887  00FDDE                     STR_85:
   888  00FDDE  4F                 	db	79	;'O'
   889  00FDDF  4F                 	db	79	;'O'
   890  00FDE0  4F                 	db	79	;'O'
   891  00FDE1  4F                 	db	79	;'O'
   892  00FDE2  4F                 	db	79	;'O'
   893  00FDE3  4F                 	db	79	;'O'
   894  00FDE4  4F                 	db	79	;'O'
   895  00FDE5  4F                 	db	79	;'O'
   896  00FDE6  4F                 	db	79	;'O'
   897  00FDE7  4F                 	db	79	;'O'
   898  00FDE8  4F                 	db	79	;'O'
   899  00FDE9  4F                 	db	79	;'O'
   900  00FDEA  20                 	db	32
   901  00FDEB  20                 	db	32
   902  00FDEC  20                 	db	32
   903  00FDED  20                 	db	32
   904  00FDEE  00                 	db	0
   905  00FDEF                     STR_69:
   906  00FDEF  4B                 	db	75	;'K'
   907  00FDF0  6E                 	db	110	;'n'
   908  00FDF1  69                 	db	105	;'i'
   909  00FDF2  67                 	db	103	;'g'
   910  00FDF3  68                 	db	104	;'h'
   911  00FDF4  74                 	db	116	;'t'
   912  00FDF5  20                 	db	32
   913  00FDF6  52                 	db	82	;'R'
   914  00FDF7  69                 	db	105	;'i'
   915  00FDF8  64                 	db	100	;'d'
   916  00FDF9  65                 	db	101	;'e'
   917  00FDFA  72                 	db	114	;'r'
   918  00FDFB  20                 	db	32
   919  00FDFC  20                 	db	32
   920  00FDFD  20                 	db	32
   921  00FDFE  20                 	db	32
   922  00FDFF  00                 	db	0
   923  00FE00                     STR_105:
   924  00FE00  20                 	db	32
   925  00FE01  20                 	db	32
   926  00FE02  20                 	db	32
   927  00FE03  47                 	db	71	;'G'
   928  00FE04  41                 	db	65	;'A'
   929  00FE05  4D                 	db	77	;'M'
   930  00FE06  45                 	db	69	;'E'
   931  00FE07  20                 	db	32
   932  00FE08  4F                 	db	79	;'O'
   933  00FE09  56                 	db	86	;'V'
   934  00FE0A  45                 	db	69	;'E'
   935  00FE0B  52                 	db	82	;'R'
   936  00FE0C  21                 	db	33
   937  00FE0D  20                 	db	32
   938  00FE0E  20                 	db	32
   939  00FE0F  20                 	db	32
   940  00FE10  00                 	db	0
   941  00FE11                     STR_70:
   942  00FE11  4F                 	db	79	;'O'
   943  00FE12  6E                 	db	110	;'n'
   944  00FE13  20                 	db	32
   945  00FE14  74                 	db	116	;'t'
   946  00FE15  68                 	db	104	;'h'
   947  00FE16  65                 	db	101	;'e'
   948  00FE17  20                 	db	32
   949  00FE18  77                 	db	119	;'w'
   950  00FE19  61                 	db	97	;'a'
   951  00FE1A  79                 	db	121	;'y'
   952  00FE1B  2E                 	db	46
   953  00FE1C  2E                 	db	46
   954  00FE1D  2E                 	db	46
   955  00FE1E  20                 	db	32
   956  00FE1F  20                 	db	32
   957  00FE20  20                 	db	32
   958  00FE21  00                 	db	0
   959  00FE22                     STR_86:
   960  00FE22  4F                 	db	79	;'O'
   961  00FE23  4F                 	db	79	;'O'
   962  00FE24  4F                 	db	79	;'O'
   963  00FE25  4F                 	db	79	;'O'
   964  00FE26  4F                 	db	79	;'O'
   965  00FE27  4F                 	db	79	;'O'
   966  00FE28  4F                 	db	79	;'O'
   967  00FE29  4F                 	db	79	;'O'
   968  00FE2A  4F                 	db	79	;'O'
   969  00FE2B  4F                 	db	79	;'O'
   970  00FE2C  4F                 	db	79	;'O'
   971  00FE2D  4F                 	db	79	;'O'
   972  00FE2E  4F                 	db	79	;'O'
   973  00FE2F  20                 	db	32
   974  00FE30  20                 	db	32
   975  00FE31  20                 	db	32
   976  00FE32  00                 	db	0
   977  00FE33                     STR_23:
   978  00FE33  74                 	db	116	;'t'
   979  00FE34  72                 	db	114	;'r'
   980  00FE35  61                 	db	97	;'a'
   981  00FE36  6E                 	db	110	;'n'
   982  00FE37  73                 	db	115	;'s'
   983  00FE38  6C                 	db	108	;'l'
   984  00FE39  61                 	db	97	;'a'
   985  00FE3A  74                 	db	116	;'t'
   986  00FE3B  69                 	db	105	;'i'
   987  00FE3C  6E                 	db	110	;'n'
   988  00FE3D  67                 	db	103	;'g'
   989  00FE3E  2E                 	db	46
   990  00FE3F  2E                 	db	46
   991  00FE40  2E                 	db	46
   992  00FE41  20                 	db	32
   993  00FE42  20                 	db	32
   994  00FE43  00                 	db	0
   995  00FE44                     STR_87:
   996  00FE44  4F                 	db	79	;'O'
   997  00FE45  4F                 	db	79	;'O'
   998  00FE46  4F                 	db	79	;'O'
   999  00FE47  4F                 	db	79	;'O'
  1000  00FE48  4F                 	db	79	;'O'
  1001  00FE49  4F                 	db	79	;'O'
  1002  00FE4A  4F                 	db	79	;'O'
  1003  00FE4B  4F                 	db	79	;'O'
  1004  00FE4C  4F                 	db	79	;'O'
  1005  00FE4D  4F                 	db	79	;'O'
  1006  00FE4E  4F                 	db	79	;'O'
  1007  00FE4F  4F                 	db	79	;'O'
  1008  00FE50  4F                 	db	79	;'O'
  1009  00FE51  4F                 	db	79	;'O'
  1010  00FE52  20                 	db	32
  1011  00FE53  20                 	db	32
  1012  00FE54  00                 	db	0
  1013  00FE55                     STR_7:
  1014  00FE55  20                 	db	32
  1015  00FE56  20                 	db	32
  1016  00FE57  4B                 	db	75	;'K'
  1017  00FE58  6E                 	db	110	;'n'
  1018  00FE59  69                 	db	105	;'i'
  1019  00FE5A  67                 	db	103	;'g'
  1020  00FE5B  68                 	db	104	;'h'
  1021  00FE5C  74                 	db	116	;'t'
  1022  00FE5D  20                 	db	32
  1023  00FE5E  52                 	db	82	;'R'
  1024  00FE5F  69                 	db	105	;'i'
  1025  00FE60  64                 	db	100	;'d'
  1026  00FE61  65                 	db	101	;'e'
  1027  00FE62  72                 	db	114	;'r'
  1028  00FE63  20                 	db	32
  1029  00FE64  20                 	db	32
  1030  00FE65  00                 	db	0
  1031  00FE66                     STR_5:
  1032  00FE66  2A                 	db	42
  1033  00FE67  20                 	db	32
  1034  00FE68  4B                 	db	75	;'K'
  1035  00FE69  6E                 	db	110	;'n'
  1036  00FE6A  69                 	db	105	;'i'
  1037  00FE6B  67                 	db	103	;'g'
  1038  00FE6C  68                 	db	104	;'h'
  1039  00FE6D  74                 	db	116	;'t'
  1040  00FE6E  20                 	db	32
  1041  00FE6F  52                 	db	82	;'R'
  1042  00FE70  69                 	db	105	;'i'
  1043  00FE71  64                 	db	100	;'d'
  1044  00FE72  65                 	db	101	;'e'
  1045  00FE73  72                 	db	114	;'r'
  1046  00FE74  20                 	db	32
  1047  00FE75  20                 	db	32
  1048  00FE76  00                 	db	0
  1049  00FE77                     STR_88:
  1050  00FE77  4F                 	db	79	;'O'
  1051  00FE78  4F                 	db	79	;'O'
  1052  00FE79  4F                 	db	79	;'O'
  1053  00FE7A  4F                 	db	79	;'O'
  1054  00FE7B  4F                 	db	79	;'O'
  1055  00FE7C  4F                 	db	79	;'O'
  1056  00FE7D  4F                 	db	79	;'O'
  1057  00FE7E  4F                 	db	79	;'O'
  1058  00FE7F  4F                 	db	79	;'O'
  1059  00FE80  4F                 	db	79	;'O'
  1060  00FE81  4F                 	db	79	;'O'
  1061  00FE82  4F                 	db	79	;'O'
  1062  00FE83  4F                 	db	79	;'O'
  1063  00FE84  4F                 	db	79	;'O'
  1064  00FE85  4F                 	db	79	;'O'
  1065  00FE86  20                 	db	32
  1066  00FE87  00                 	db	0
  1067  00FE88                     STR_90:
  1068  00FE88  50                 	db	80	;'P'
  1069  00FE89  31                 	db	49	;'1'
  1070  00FE8A  20                 	db	32
  1071  00FE8B  2A                 	db	42
  1072  00FE8C  2A                 	db	42
  1073  00FE8D  2A                 	db	42
  1074  00FE8E  20                 	db	32
  1075  00FE8F  20                 	db	32
  1076  00FE90  20                 	db	32
  1077  00FE91  20                 	db	32
  1078  00FE92  2A                 	db	42
  1079  00FE93  2A                 	db	42
  1080  00FE94  2A                 	db	42
  1081  00FE95  20                 	db	32
  1082  00FE96  50                 	db	80	;'P'
  1083  00FE97  32                 	db	50	;'2'
  1084  00FE98  00                 	db	0
  1085  00FE99                     STR_89:
  1086  00FE99  4F                 	db	79	;'O'
  1087  00FE9A  4F                 	db	79	;'O'
  1088  00FE9B  4F                 	db	79	;'O'
  1089  00FE9C  4F                 	db	79	;'O'
  1090  00FE9D  4F                 	db	79	;'O'
  1091  00FE9E  4F                 	db	79	;'O'
  1092  00FE9F  4F                 	db	79	;'O'
  1093  00FEA0  4F                 	db	79	;'O'
  1094  00FEA1  4F                 	db	79	;'O'
  1095  00FEA2  4F                 	db	79	;'O'
  1096  00FEA3  4F                 	db	79	;'O'
  1097  00FEA4  4F                 	db	79	;'O'
  1098  00FEA5  4F                 	db	79	;'O'
  1099  00FEA6  4F                 	db	79	;'O'
  1100  00FEA7  4F                 	db	79	;'O'
  1101  00FEA8  4F                 	db	79	;'O'
  1102  00FEA9  00                 	db	0
  1103  00FEAA                     STR_18:
  1104  00FEAA  20                 	db	32
  1105  00FEAB  20                 	db	32
  1106  00FEAC  50                 	db	80	;'P'
  1107  00FEAD  6F                 	db	111	;'o'
  1108  00FEAE  6E                 	db	110	;'n'
  1109  00FEAF  67                 	db	103	;'g'
  1110  00FEB0  2D                 	db	45
  1111  00FEB1  32                 	db	50	;'2'
  1112  00FEB2  20                 	db	32
  1113  00FEB3  50                 	db	80	;'P'
  1114  00FEB4  4C                 	db	76	;'L'
  1115  00FEB5  41                 	db	65	;'A'
  1116  00FEB6  59                 	db	89	;'Y'
  1117  00FEB7  45                 	db	69	;'E'
  1118  00FEB8  52                 	db	82	;'R'
  1119  00FEB9  53                 	db	83	;'S'
  1120  00FEBA  00                 	db	0
  1121  00FEBB                     STR_20:
  1122  00FEBB  2A                 	db	42
  1123  00FEBC  20                 	db	32
  1124  00FEBD  50                 	db	80	;'P'
  1125  00FEBE  6F                 	db	111	;'o'
  1126  00FEBF  6E                 	db	110	;'n'
  1127  00FEC0  67                 	db	103	;'g'
  1128  00FEC1  2D                 	db	45
  1129  00FEC2  32                 	db	50	;'2'
  1130  00FEC3  20                 	db	32
  1131  00FEC4  50                 	db	80	;'P'
  1132  00FEC5  4C                 	db	76	;'L'
  1133  00FEC6  41                 	db	65	;'A'
  1134  00FEC7  59                 	db	89	;'Y'
  1135  00FEC8  45                 	db	69	;'E'
  1136  00FEC9  52                 	db	82	;'R'
  1137  00FECA  53                 	db	83	;'S'
  1138  00FECB  00                 	db	0
  1139  00FECC                     STR_22:
  1140  00FECC  4D                 	db	77	;'M'
  1141  00FECD  6F                 	db	111	;'o'
  1142  00FECE  72                 	db	114	;'r'
  1143  00FECF  73                 	db	115	;'s'
  1144  00FED0  65                 	db	101	;'e'
  1145  00FED1  20                 	db	32
  1146  00FED2  74                 	db	116	;'t'
  1147  00FED3  72                 	db	114	;'r'
  1148  00FED4  61                 	db	97	;'a'
  1149  00FED5  6E                 	db	110	;'n'
  1150  00FED6  73                 	db	115	;'s'
  1151  00FED7  6C                 	db	108	;'l'
  1152  00FED8  61                 	db	97	;'a'
  1153  00FED9  74                 	db	116	;'t'
  1154  00FEDA  6F                 	db	111	;'o'
  1155  00FEDB  72                 	db	114	;'r'
  1156  00FEDC  00                 	db	0
  1157  00FEDD                     STR_61:
  1158  00FEDD  20                 	db	32
  1159  00FEDE  2E                 	db	46
  1160  00FEDF  20                 	db	32
  1161  00FEE0  2D                 	db	45
  1162  00FEE1  20                 	db	32
  1163  00FEE2  2E                 	db	46
  1164  00FEE3  20                 	db	32
  1165  00FEE4  2D                 	db	45
  1166  00FEE5  20                 	db	32
  1167  00FEE6  2E                 	db	46
  1168  00FEE7  20                 	db	32
  1169  00FEE8  2D                 	db	45
  1170  00FEE9  20                 	db	32
  1171  00FEEA  2E                 	db	46
  1172  00FEEB  20                 	db	32
  1173  00FEEC  7C                 	db	124
  1174  00FEED  00                 	db	0
  1175  00FEEE                     STR_106:
  1176  00FEEE  20                 	db	32
  1177  00FEEF  50                 	db	80	;'P'
  1178  00FEF0  4C                 	db	76	;'L'
  1179  00FEF1  41                 	db	65	;'A'
  1180  00FEF2  59                 	db	89	;'Y'
  1181  00FEF3  45                 	db	69	;'E'
  1182  00FEF4  52                 	db	82	;'R'
  1183  00FEF5  20                 	db	32
  1184  00FEF6  31                 	db	49	;'1'
  1185  00FEF7  20                 	db	32
  1186  00FEF8  57                 	db	87	;'W'
  1187  00FEF9  49                 	db	73	;'I'
  1188  00FEFA  4E                 	db	78	;'N'
  1189  00FEFB  53                 	db	83	;'S'
  1190  00FEFC  20                 	db	32
  1191  00FEFD  00                 	db	0
  1192  00FEFE                     STR_109:
  1193  00FEFE  20                 	db	32
  1194  00FEFF  50                 	db	80	;'P'
  1195  00FF00  4C                 	db	76	;'L'
  1196  00FF01  41                 	db	65	;'A'
  1197  00FF02  59                 	db	89	;'Y'
  1198  00FF03  45                 	db	69	;'E'
  1199  00FF04  52                 	db	82	;'R'
  1200  00FF05  20                 	db	32
  1201  00FF06  32                 	db	50	;'2'
  1202  00FF07  20                 	db	32
  1203  00FF08  57                 	db	87	;'W'
  1204  00FF09  49                 	db	73	;'I'
  1205  00FF0A  4E                 	db	78	;'N'
  1206  00FF0B  53                 	db	83	;'S'
  1207  00FF0C  20                 	db	32
  1208  00FF0D  00                 	db	0
  1209  00FF0E                     STR_62:
  1210  00FF0E  20                 	db	32
  1211  00FF0F  2D                 	db	45
  1212  00FF10  20                 	db	32
  1213  00FF11  2D                 	db	45
  1214  00FF12  20                 	db	32
  1215  00FF13  2E                 	db	46
  1216  00FF14  20                 	db	32
  1217  00FF15  2E                 	db	46
  1218  00FF16  20                 	db	32
  1219  00FF17  2D                 	db	45
  1220  00FF18  20                 	db	32
  1221  00FF19  2D                 	db	45
  1222  00FF1A  20                 	db	32
  1223  00FF1B  7C                 	db	124
  1224  00FF1C  00                 	db	0
  1225  00FF1D                     STR_64:
  1226  00FF1D  20                 	db	32
  1227  00FF1E  2E                 	db	46
  1228  00FF1F  20                 	db	32
  1229  00FF20  2E                 	db	46
  1230  00FF21  20                 	db	32
  1231  00FF22  2D                 	db	45
  1232  00FF23  20                 	db	32
  1233  00FF24  2D                 	db	45
  1234  00FF25  20                 	db	32
  1235  00FF26  2E                 	db	46
  1236  00FF27  20                 	db	32
  1237  00FF28  2E                 	db	46
  1238  00FF29  20                 	db	32
  1239  00FF2A  7C                 	db	124
  1240  00FF2B  00                 	db	0
  1241  00FF2C                     STR_51:
  1242  00FF2C  20                 	db	32
  1243  00FF2D  2D                 	db	45
  1244  00FF2E  20                 	db	32
  1245  00FF2F  2D                 	db	45
  1246  00FF30  20                 	db	32
  1247  00FF31  2D                 	db	45
  1248  00FF32  20                 	db	32
  1249  00FF33  2D                 	db	45
  1250  00FF34  20                 	db	32
  1251  00FF35  2D                 	db	45
  1252  00FF36  20                 	db	32
  1253  00FF37  7C                 	db	124
  1254  00FF38  00                 	db	0
  1255  00FF39                     STR_52:
  1256  00FF39  20                 	db	32
  1257  00FF3A  2E                 	db	46
  1258  00FF3B  20                 	db	32
  1259  00FF3C  2D                 	db	45
  1260  00FF3D  20                 	db	32
  1261  00FF3E  2D                 	db	45
  1262  00FF3F  20                 	db	32
  1263  00FF40  2D                 	db	45
  1264  00FF41  20                 	db	32
  1265  00FF42  2D                 	db	45
  1266  00FF43  20                 	db	32
  1267  00FF44  7C                 	db	124
  1268  00FF45  00                 	db	0
  1269  00FF46                     STR_53:
  1270  00FF46  20                 	db	32
  1271  00FF47  2E                 	db	46
  1272  00FF48  20                 	db	32
  1273  00FF49  2E                 	db	46
  1274  00FF4A  20                 	db	32
  1275  00FF4B  2D                 	db	45
  1276  00FF4C  20                 	db	32
  1277  00FF4D  2D                 	db	45
  1278  00FF4E  20                 	db	32
  1279  00FF4F  2D                 	db	45
  1280  00FF50  20                 	db	32
  1281  00FF51  7C                 	db	124
  1282  00FF52  00                 	db	0
  1283  00FF53                     STR_54:
  1284  00FF53  20                 	db	32
  1285  00FF54  2E                 	db	46
  1286  00FF55  20                 	db	32
  1287  00FF56  2E                 	db	46
  1288  00FF57  20                 	db	32
  1289  00FF58  2E                 	db	46
  1290  00FF59  20                 	db	32
  1291  00FF5A  2D                 	db	45
  1292  00FF5B  20                 	db	32
  1293  00FF5C  2D                 	db	45
  1294  00FF5D  20                 	db	32
  1295  00FF5E  7C                 	db	124
  1296  00FF5F  00                 	db	0
  1297  00FF60                     STR_63:
  1298  00FF60  20                 	db	32
  1299  00FF61  2D                 	db	45
  1300  00FF62  20                 	db	32
  1301  00FF63  2D                 	db	45
  1302  00FF64  20                 	db	32
  1303  00FF65  2E                 	db	46
  1304  00FF66  20                 	db	32
  1305  00FF67  2E                 	db	46
  1306  00FF68  20                 	db	32
  1307  00FF69  2D                 	db	45
  1308  00FF6A  20                 	db	32
  1309  00FF6B  7C                 	db	124
  1310  00FF6C  00                 	db	0
  1311  00FF6D                     STR_55:
  1312  00FF6D  20                 	db	32
  1313  00FF6E  2E                 	db	46
  1314  00FF6F  20                 	db	32
  1315  00FF70  2E                 	db	46
  1316  00FF71  20                 	db	32
  1317  00FF72  2E                 	db	46
  1318  00FF73  20                 	db	32
  1319  00FF74  2E                 	db	46
  1320  00FF75  20                 	db	32
  1321  00FF76  2D                 	db	45
  1322  00FF77  20                 	db	32
  1323  00FF78  7C                 	db	124
  1324  00FF79  00                 	db	0
  1325  00FF7A                     STR_60:
  1326  00FF7A  20                 	db	32
  1327  00FF7B  2D                 	db	45
  1328  00FF7C  20                 	db	32
  1329  00FF7D  2D                 	db	45
  1330  00FF7E  20                 	db	32
  1331  00FF7F  2D                 	db	45
  1332  00FF80  20                 	db	32
  1333  00FF81  2D                 	db	45
  1334  00FF82  20                 	db	32
  1335  00FF83  2E                 	db	46
  1336  00FF84  20                 	db	32
  1337  00FF85  7C                 	db	124
  1338  00FF86  00                 	db	0
  1339  00FF87                     STR_59:
  1340  00FF87  20                 	db	32
  1341  00FF88  2D                 	db	45
  1342  00FF89  20                 	db	32
  1343  00FF8A  2D                 	db	45
  1344  00FF8B  20                 	db	32
  1345  00FF8C  2D                 	db	45
  1346  00FF8D  20                 	db	32
  1347  00FF8E  2E                 	db	46
  1348  00FF8F  20                 	db	32
  1349  00FF90  2E                 	db	46
  1350  00FF91  20                 	db	32
  1351  00FF92  7C                 	db	124
  1352  00FF93  00                 	db	0
  1353  00FF94                     STR_58:
  1354  00FF94  20                 	db	32
  1355  00FF95  2D                 	db	45
  1356  00FF96  20                 	db	32
  1357  00FF97  2D                 	db	45
  1358  00FF98  20                 	db	32
  1359  00FF99  2E                 	db	46
  1360  00FF9A  20                 	db	32
  1361  00FF9B  2E                 	db	46
  1362  00FF9C  20                 	db	32
  1363  00FF9D  2E                 	db	46
  1364  00FF9E  20                 	db	32
  1365  00FF9F  7C                 	db	124
  1366  00FFA0  00                 	db	0
  1367  00FFA1                     STR_57:
  1368  00FFA1  20                 	db	32
  1369  00FFA2  2D                 	db	45
  1370  00FFA3  20                 	db	32
  1371  00FFA4  2E                 	db	46
  1372  00FFA5  20                 	db	32
  1373  00FFA6  2E                 	db	46
  1374  00FFA7  20                 	db	32
  1375  00FFA8  2E                 	db	46
  1376  00FFA9  20                 	db	32
  1377  00FFAA  2E                 	db	46
  1378  00FFAB  20                 	db	32
  1379  00FFAC  7C                 	db	124
  1380  00FFAD  00                 	db	0
  1381  00FFAE                     STR_56:
  1382  00FFAE  20                 	db	32
  1383  00FFAF  2E                 	db	46
  1384  00FFB0  20                 	db	32
  1385  00FFB1  2E                 	db	46
  1386  00FFB2  20                 	db	32
  1387  00FFB3  2E                 	db	46
  1388  00FFB4  20                 	db	32
  1389  00FFB5  2E                 	db	46
  1390  00FFB6  20                 	db	32
  1391  00FFB7  2E                 	db	46
  1392  00FFB8  20                 	db	32
  1393  00FFB9  7C                 	db	124
  1394  00FFBA  00                 	db	0
  1395  00FFBB                     STR_24:
  1396  00FFBB  0A                 	db	10
  1397  00FFBC  50                 	db	80	;'P'
  1398  00FFBD  52                 	db	82	;'R'
  1399  00FFBE  45                 	db	69	;'E'
  1400  00FFBF  4B                 	db	75	;'K'
  1401  00FFC0  4C                 	db	76	;'L'
  1402  00FFC1  41                 	db	65	;'A'
  1403  00FFC2  44                 	db	68	;'D'
  1404  00FFC3  3A                 	db	58	;':'
  1405  00FFC4  20                 	db	32
  1406  00FFC5  20                 	db	32
  1407  00FFC6  00                 	db	0
  1408  00FFC7                     STR_49:
  1409  00FFC7  20                 	db	32
  1410  00FFC8  2D                 	db	45
  1411  00FFC9  20                 	db	32
  1412  00FFCA  2E                 	db	46
  1413  00FFCB  20                 	db	32
  1414  00FFCC  2D                 	db	45
  1415  00FFCD  20                 	db	32
  1416  00FFCE  2D                 	db	45
  1417  00FFCF  20                 	db	32
  1418  00FFD0  7C                 	db	124
  1419  00FFD1  00                 	db	0
  1420  00FFD2                     STR_41:
  1421  00FFD2  20                 	db	32
  1422  00FFD3  2D                 	db	45
  1423  00FFD4  20                 	db	32
  1424  00FFD5  2D                 	db	45
  1425  00FFD6  20                 	db	32
  1426  00FFD7  2E                 	db	46
  1427  00FFD8  20                 	db	32
  1428  00FFD9  2D                 	db	45
  1429  00FFDA  20                 	db	32
  1430  00FFDB  7C                 	db	124
  1431  00FFDC  00                 	db	0
  1432  00FFDD                     STR_40:
  1433  00FFDD  20                 	db	32
  1434  00FFDE  2E                 	db	46
  1435  00FFDF  20                 	db	32
  1436  00FFE0  2D                 	db	45
  1437  00FFE1  20                 	db	32
  1438  00FFE2  2D                 	db	45
  1439  00FFE3  20                 	db	32
  1440  00FFE4  2E                 	db	46
  1441  00FFE5  20                 	db	32
  1442  00FFE6  7C                 	db	124
  1443  00FFE7  00                 	db	0
  1444  00FFE8                     STR_30:
  1445  00FFE8  20                 	db	32
  1446  00FFE9  2E                 	db	46
  1447  00FFEA  20                 	db	32
  1448  00FFEB  2E                 	db	46
  1449  00FFEC  20                 	db	32
  1450  00FFED  2D                 	db	45
  1451  00FFEE  20                 	db	32
  1452  00FFEF  2E                 	db	46
  1453  00FFF0  20                 	db	32
  1454  00FFF1  7C                 	db	124
  1455  00FFF2  00                 	db	0
  1456  00FFF3                     STR_36:
  1457  00FFF3  20                 	db	32
  1458  00FFF4  2E                 	db	46
  1459  00FFF5  20                 	db	32
  1460  00FFF6  2D                 	db	45
  1461  00FFF7  20                 	db	32
  1462  00FFF8  2E                 	db	46
  1463  00FFF9  20                 	db	32
  1464  00FFFA  2E                 	db	46
  1465  00FFFB  20                 	db	32
  1466  00FFFC  7C                 	db	124
  1467  00FFFD  00                 	db	0
  1468  0000                     
  1469                           ; #config settings
  1470  00FFFE  00                 	db	0	; dummy byte at the end
  1471  0000                     
  1472                           	psect	cinit
  1473  003178                     __pcinit:
  1474                           	opt callstack 0
  1475  003178                     start_initialization:
  1476                           	opt callstack 0
  1477  003178                     __initialization:
  1478                           	opt callstack 0
  1479                           
  1480                           ; Clear objects allocated to BANK1 (99 bytes)
  1481  003178  EE01  F000         	lfsr	0,__pbssBANK1
  1482  00317C  0E63               	movlw	99
  1483  00317E                     clear_0:
  1484  00317E  6AEE               	clrf	postinc0,c
  1485  003180  06E8               	decf	wreg,f,c
  1486  003182  E1FD               	bnz	clear_0
  1487                           
  1488                           ; Clear objects allocated to BANK0 (43 bytes)
  1489  003184  EE00  F0D2         	lfsr	0,__pbssBANK0
  1490  003188  0E2B               	movlw	43
  1491  00318A                     clear_1:
  1492  00318A  6AEE               	clrf	postinc0,c
  1493  00318C  06E8               	decf	wreg,f,c
  1494  00318E  E1FD               	bnz	clear_1
  1495                           
  1496                           ; Clear objects allocated to COMRAM (4 bytes)
  1497  003190  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1498  003192  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1499  003194  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1500  003196  6A56               	clrf	__pbssCOMRAM& (0+255),c
  1501  003198                     end_of_initialization:
  1502                           	opt callstack 0
  1503  003198                     __end_of__initialization:
  1504                           	opt callstack 0
  1505  003198  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1506  00319A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1507  00319C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1508  00319E  6EF8               	movwf	tblptru,c
  1509  0031A0  0100               	movlb	0
  1510  0031A2  EF97  F00C         	goto	_main	;jump to C main() function
  1511                           
  1512                           	psect	bssCOMRAM
  1513  000056                     __pbssCOMRAM:
  1514                           	opt callstack 0
  1515  000056                     _width:
  1516                           	opt callstack 0
  1517  000056                     	ds	2
  1518  000058                     _flags:
  1519                           	opt callstack 0
  1520  000058                     	ds	2
  1521                           
  1522                           	psect	bssBANK0
  1523  0000D2                     __pbssBANK0:
  1524                           	opt callstack 0
  1525  0000D2                     _n:
  1526                           	opt callstack 0
  1527  0000D2                     	ds	3
  1528  0000D5                     _nout:
  1529                           	opt callstack 0
  1530  0000D5                     	ds	2
  1531  0000D7                     _prec:
  1532                           	opt callstack 0
  1533  0000D7                     	ds	2
  1534  0000D9                     _pot1:
  1535                           	opt callstack 0
  1536  0000D9                     	ds	2
  1537  0000DB                     _nadpis2:
  1538                           	opt callstack 0
  1539  0000DB                     	ds	17
  1540  0000EC                     _nadpis1:
  1541                           	opt callstack 0
  1542  0000EC                     	ds	17
  1543                           
  1544                           	psect	bssBANK1
  1545  000100                     __pbssBANK1:
  1546                           	opt callstack 0
  1547  000100                     _zapis:
  1548                           	opt callstack 0
  1549  000100                     	ds	50
  1550  000132                     _dbuf:
  1551                           	opt callstack 0
  1552  000132                     	ds	32
  1553  000152                     _text:
  1554                           	opt callstack 0
  1555  000152                     	ds	17
  1556                           
  1557                           	psect	cstackBANK1
  1558  000163                     __pcstackBANK1:
  1559                           	opt callstack 0
  1560  000163                     main@k_r:
  1561                           	opt callstack 0
  1562                           
  1563                           ; 17 bytes @ 0x0
  1564  000163                     	ds	17
  1565  000174                     main@pong:
  1566                           	opt callstack 0
  1567                           
  1568                           ; 17 bytes @ 0x11
  1569  000174                     	ds	17
  1570  000185                     main@mor:
  1571                           	opt callstack 0
  1572                           
  1573                           ; 17 bytes @ 0x22
  1574  000185                     	ds	17
  1575  000196                     main@pwm:
  1576                           	opt callstack 0
  1577                           
  1578                           ; 17 bytes @ 0x33
  1579  000196                     	ds	17
  1580  0001A7                     main@barg:
  1581                           	opt callstack 0
  1582                           
  1583                           ; 17 bytes @ 0x44
  1584  0001A7                     	ds	17
  1585  0001B8                     main@m:
  1586                           	opt callstack 0
  1587                           
  1588                           ; 2 bytes @ 0x55
  1589  0001B8                     	ds	2
  1590                           
  1591                           	psect	cstackBANK0
  1592  000060                     __pcstackBANK0:
  1593                           	opt callstack 0
  1594  000060                     ?_vfprintf:
  1595                           	opt callstack 0
  1596  000060                     vfprintf@fp:
  1597                           	opt callstack 0
  1598                           
  1599                           ; 2 bytes @ 0x0
  1600  000060                     	ds	2
  1601  000062                     vfprintf@fmt:
  1602                           	opt callstack 0
  1603                           
  1604                           ; 2 bytes @ 0x2
  1605  000062                     	ds	2
  1606  000064                     vfprintf@ap:
  1607                           	opt callstack 0
  1608                           
  1609                           ; 2 bytes @ 0x4
  1610  000064                     	ds	2
  1611  000066                     vfprintf@cfmt:
  1612                           	opt callstack 0
  1613                           
  1614                           ; 2 bytes @ 0x6
  1615  000066                     	ds	2
  1616  000068                     ?_sprintf:
  1617                           	opt callstack 0
  1618  000068                     ?_printf:
  1619                           	opt callstack 0
  1620  000068                     sprintf@s:
  1621                           	opt callstack 0
  1622  000068                     printf@fmt:
  1623                           	opt callstack 0
  1624                           
  1625                           ; 2 bytes @ 0x8
  1626  000068                     	ds	2
  1627  00006A                     sprintf@fmt:
  1628                           	opt callstack 0
  1629                           
  1630                           ; 2 bytes @ 0xA
  1631  00006A                     	ds	2
  1632  00006C                     printf@ap:
  1633                           	opt callstack 0
  1634                           
  1635                           ; 2 bytes @ 0xC
  1636  00006C                     	ds	6
  1637  000072                     sprintf@ap:
  1638                           	opt callstack 0
  1639                           
  1640                           ; 2 bytes @ 0x12
  1641  000072                     	ds	2
  1642  000074                     sprintf@f:
  1643                           	opt callstack 0
  1644                           
  1645                           ; 6 bytes @ 0x14
  1646  000074                     	ds	6
  1647  00007A                     ??_Knight_rider_2000:
  1648  00007A                     ??_Knight_rider_3000:
  1649  00007A                     ??_Morseovka:
  1650  00007A                     ??_PWM_motor_led:
  1651  00007A                     ??_Bargraph:
  1652  00007A                     ??_Pong:
  1653                           
  1654                           ; 1 bytes @ 0x1A
  1655  00007A                     	ds	2
  1656  00007C                     PWM_motor_led@strida:
  1657                           	opt callstack 0
  1658  00007C                     Knight_rider_3000@i:
  1659                           	opt callstack 0
  1660  00007C                     Knight_rider_2000@r:
  1661                           	opt callstack 0
  1662  00007C                     Bargraph@text:
  1663                           	opt callstack 0
  1664  00007C                     Pong@gameover:
  1665                           	opt callstack 0
  1666                           
  1667                           ; 17 bytes @ 0x1C
  1668  00007C                     	ds	2
  1669  00007E                     Knight_rider_3000@j:
  1670                           	opt callstack 0
  1671  00007E                     Knight_rider_2000@i:
  1672                           	opt callstack 0
  1673                           
  1674                           ; 2 bytes @ 0x1E
  1675  00007E                     	ds	1
  1676  00007F                     Morseovka@i:
  1677                           	opt callstack 0
  1678                           
  1679                           ; 2 bytes @ 0x1F
  1680  00007F                     	ds	1
  1681  000080                     Knight_rider_2000@j:
  1682                           	opt callstack 0
  1683                           
  1684                           ; 2 bytes @ 0x20
  1685  000080                     	ds	2
  1686  000082                     ??_kr_init:
  1687                           
  1688                           ; 1 bytes @ 0x22
  1689  000082                     	ds	2
  1690  000084                     kr_init@k_r:
  1691                           	opt callstack 0
  1692                           
  1693                           ; 17 bytes @ 0x24
  1694  000084                     	ds	9
  1695  00008D                     Bargraph@graph:
  1696                           	opt callstack 0
  1697  00008D                     Pong@vitez:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 17 bytes @ 0x2D
  1701  00008D                     	ds	8
  1702  000095                     kr_init@mor:
  1703                           	opt callstack 0
  1704                           
  1705                           ; 17 bytes @ 0x35
  1706  000095                     	ds	9
  1707  00009E                     Pong@zivoty:
  1708                           	opt callstack 0
  1709                           
  1710                           ; 17 bytes @ 0x3E
  1711  00009E                     	ds	8
  1712  0000A6                     kr_init@kr:
  1713                           	opt callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x46
  1716  0000A6                     	ds	9
  1717  0000AF                     Pong@P1:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x4F
  1721  0000AF                     	ds	2
  1722  0000B1                     Pong@P2:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 2 bytes @ 0x51
  1726  0000B1                     	ds	2
  1727  0000B3                     Pong@n:
  1728                           	opt callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x53
  1731  0000B3                     	ds	2
  1732  0000B5                     Pong@micek:
  1733                           	opt callstack 0
  1734                           
  1735                           ; 17 bytes @ 0x55
  1736  0000B5                     	ds	17
  1737  0000C6                     Pong@t:
  1738                           	opt callstack 0
  1739                           
  1740                           ; 2 bytes @ 0x66
  1741  0000C6                     	ds	2
  1742  0000C8                     Pong@r:
  1743                           	opt callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x68
  1746  0000C8                     	ds	2
  1747  0000CA                     Pong@i:
  1748                           	opt callstack 0
  1749                           
  1750                           ; 2 bytes @ 0x6A
  1751  0000CA                     	ds	2
  1752  0000CC                     Pong@j:
  1753                           	opt callstack 0
  1754                           
  1755                           ; 2 bytes @ 0x6C
  1756  0000CC                     	ds	2
  1757  0000CE                     Pong@z:
  1758                           	opt callstack 0
  1759                           
  1760                           ; 2 bytes @ 0x6E
  1761  0000CE                     	ds	2
  1762  0000D0                     ??_main:
  1763                           
  1764                           ; 1 bytes @ 0x70
  1765  0000D0                     	ds	2
  1766                           
  1767                           	psect	cstackCOMRAM
  1768  000001                     __pcstackCOMRAM:
  1769                           	opt callstack 0
  1770  000001                     ??_ISR:
  1771  000001                     
  1772                           ; 1 bytes @ 0x0
  1773  000001                     	ds	4
  1774  000005                     ?_strlen:
  1775                           	opt callstack 0
  1776  000005                     ?___aodiv:
  1777                           	opt callstack 0
  1778  000005                     ?___aomod:
  1779                           	opt callstack 0
  1780  000005                     LCD_Send@data:
  1781                           	opt callstack 0
  1782  000005                     putch@data:
  1783                           	opt callstack 0
  1784  000005                     strlen@s:
  1785                           	opt callstack 0
  1786  000005                     ___aodiv@dividend:
  1787                           	opt callstack 0
  1788  000005                     ___aomod@dividend:
  1789                           	opt callstack 0
  1790                           
  1791                           ; 8 bytes @ 0x4
  1792  000005                     	ds	1
  1793  000006                     ??_LCD_Init:
  1794  000006                     LCD_ShowString@textData:
  1795                           	opt callstack 0
  1796  000006                     fputc@c:
  1797                           	opt callstack 0
  1798                           
  1799                           ; 2 bytes @ 0x5
  1800  000006                     	ds	1
  1801  000007                     strlen@a:
  1802                           	opt callstack 0
  1803                           
  1804                           ; 2 bytes @ 0x6
  1805  000007                     	ds	1
  1806  000008                     LCD_ShowString@lineNum:
  1807                           	opt callstack 0
  1808  000008                     fputc@fp:
  1809                           	opt callstack 0
  1810                           
  1811                           ; 2 bytes @ 0x7
  1812  000008                     	ds	1
  1813  000009                     LCD_ShowString@i:
  1814                           	opt callstack 0
  1815                           
  1816                           ; 1 bytes @ 0x8
  1817  000009                     	ds	1
  1818  00000A                     ??_fputc:
  1819                           
  1820                           ; 1 bytes @ 0x9
  1821  00000A                     	ds	3
  1822  00000D                     ___aodiv@divisor:
  1823                           	opt callstack 0
  1824  00000D                     ___aomod@divisor:
  1825                           	opt callstack 0
  1826                           
  1827                           ; 8 bytes @ 0xC
  1828  00000D                     	ds	2
  1829  00000F                     fputs@s:
  1830                           	opt callstack 0
  1831                           
  1832                           ; 2 bytes @ 0xE
  1833  00000F                     	ds	2
  1834  000011                     fputs@fp:
  1835                           	opt callstack 0
  1836                           
  1837                           ; 2 bytes @ 0x10
  1838  000011                     	ds	2
  1839  000013                     fputs@c:
  1840                           	opt callstack 0
  1841                           
  1842                           ; 1 bytes @ 0x12
  1843  000013                     	ds	1
  1844  000014                     fputs@i:
  1845                           	opt callstack 0
  1846                           
  1847                           ; 2 bytes @ 0x13
  1848  000014                     	ds	1
  1849  000015                     ___aodiv@counter:
  1850                           	opt callstack 0
  1851  000015                     ___aomod@counter:
  1852                           	opt callstack 0
  1853                           
  1854                           ; 1 bytes @ 0x14
  1855  000015                     	ds	1
  1856  000016                     ?_pad:
  1857                           	opt callstack 0
  1858  000016                     ___aodiv@sign:
  1859                           	opt callstack 0
  1860  000016                     ___aomod@sign:
  1861                           	opt callstack 0
  1862  000016                     pad@fp:
  1863                           	opt callstack 0
  1864                           
  1865                           ; 2 bytes @ 0x15
  1866  000016                     	ds	1
  1867  000017                     ?_abs:
  1868                           	opt callstack 0
  1869  000017                     abs@a:
  1870                           	opt callstack 0
  1871  000017                     ___aodiv@quotient:
  1872                           	opt callstack 0
  1873                           
  1874                           ; 8 bytes @ 0x16
  1875  000017                     	ds	1
  1876  000018                     pad@buf:
  1877                           	opt callstack 0
  1878                           
  1879                           ; 2 bytes @ 0x17
  1880  000018                     	ds	1
  1881  000019                     ??_abs:
  1882                           
  1883                           ; 1 bytes @ 0x18
  1884  000019                     	ds	1
  1885  00001A                     pad@p:
  1886                           	opt callstack 0
  1887                           
  1888                           ; 2 bytes @ 0x19
  1889  00001A                     	ds	2
  1890  00001C                     ??_pad:
  1891                           
  1892                           ; 1 bytes @ 0x1B
  1893  00001C                     	ds	1
  1894  00001D                     pad@i:
  1895                           	opt callstack 0
  1896                           
  1897                           ; 2 bytes @ 0x1C
  1898  00001D                     	ds	2
  1899  00001F                     pad@w:
  1900                           	opt callstack 0
  1901                           
  1902                           ; 2 bytes @ 0x1E
  1903  00001F                     	ds	2
  1904  000021                     ?_ctoa:
  1905                           	opt callstack 0
  1906  000021                     ?_dtoa:
  1907                           	opt callstack 0
  1908  000021                     ctoa@fp:
  1909                           	opt callstack 0
  1910  000021                     dtoa@fp:
  1911                           	opt callstack 0
  1912                           
  1913                           ; 2 bytes @ 0x20
  1914  000021                     	ds	2
  1915  000023                     ctoa@c:
  1916                           	opt callstack 0
  1917  000023                     dtoa@d:
  1918                           	opt callstack 0
  1919                           
  1920                           ; 8 bytes @ 0x22
  1921  000023                     	ds	1
  1922  000024                     ctoa@w:
  1923                           	opt callstack 0
  1924                           
  1925                           ; 2 bytes @ 0x23
  1926  000024                     	ds	7
  1927  00002B                     ??_dtoa:
  1928                           
  1929                           ; 1 bytes @ 0x2A
  1930  00002B                     	ds	8
  1931  000033                     _dtoa$1781:
  1932                           	opt callstack 0
  1933                           
  1934                           ; 2 bytes @ 0x32
  1935  000033                     	ds	2
  1936  000035                     dtoa@p:
  1937                           	opt callstack 0
  1938                           
  1939                           ; 2 bytes @ 0x34
  1940  000035                     	ds	2
  1941  000037                     dtoa@w:
  1942                           	opt callstack 0
  1943                           
  1944                           ; 2 bytes @ 0x36
  1945  000037                     	ds	2
  1946  000039                     dtoa@s:
  1947                           	opt callstack 0
  1948                           
  1949                           ; 2 bytes @ 0x38
  1950  000039                     	ds	2
  1951  00003B                     dtoa@n:
  1952                           	opt callstack 0
  1953                           
  1954                           ; 8 bytes @ 0x3A
  1955  00003B                     	ds	8
  1956  000043                     dtoa@i:
  1957                           	opt callstack 0
  1958                           
  1959                           ; 2 bytes @ 0x42
  1960  000043                     	ds	2
  1961  000045                     ?_vfpfcnvrt:
  1962                           	opt callstack 0
  1963  000045                     vfpfcnvrt@fp:
  1964                           	opt callstack 0
  1965                           
  1966                           ; 2 bytes @ 0x44
  1967  000045                     	ds	2
  1968  000047                     vfpfcnvrt@fmt:
  1969                           	opt callstack 0
  1970                           
  1971                           ; 2 bytes @ 0x46
  1972  000047                     	ds	2
  1973  000049                     vfpfcnvrt@ap:
  1974                           	opt callstack 0
  1975                           
  1976                           ; 2 bytes @ 0x48
  1977  000049                     	ds	2
  1978  00004B                     ??_vfpfcnvrt:
  1979                           
  1980                           ; 1 bytes @ 0x4A
  1981  00004B                     	ds	2
  1982  00004D                     vfpfcnvrt@ll:
  1983                           	opt callstack 0
  1984                           
  1985                           ; 8 bytes @ 0x4C
  1986  00004D                     	ds	8
  1987  000055                     vfpfcnvrt@c:
  1988                           	opt callstack 0
  1989                           
  1990                           ; 1 bytes @ 0x54
  1991  000055                     	ds	1
  1992  000056                     
  1993                           ; 1 bytes @ 0x55
  1994 ;;
  1995 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1996 ;;
  1997 ;; *************** function _main *****************
  1998 ;; Defined at:
  1999 ;;		line 225 in file "Projekt.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  barg           17   68[BANK1 ] unsigned char [17]
  2004 ;;  pwm            17   51[BANK1 ] unsigned char [17]
  2005 ;;  mor            17   34[BANK1 ] unsigned char [17]
  2006 ;;  pong           17   17[BANK1 ] unsigned char [17]
  2007 ;;  k_r            17    0[BANK1 ] unsigned char [17]
  2008 ;;  m               2   85[BANK1 ] int 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Locals:         0       0      87       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Totals:         0       2      87       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;Total ram usage:       89 bytes
  2023 ;; Hardware stack levels required when called:   11
  2024 ;; This function calls:
  2025 ;;		_Bargraph
  2026 ;;		_LCD_Clear
  2027 ;;		_LCD_ShowString
  2028 ;;		_Morseovka
  2029 ;;		_PWM_motor_led
  2030 ;;		_Pong
  2031 ;;		_init
  2032 ;;		_kr_init
  2033 ;;		_sprintf
  2034 ;; This function is called by:
  2035 ;;		Startup code after reset
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text0
  2040  00192E                     __ptext0:
  2041                           	opt callstack 0
  2042  00192E                     _main:
  2043                           	opt callstack 20
  2044  00192E                     
  2045                           ;Projekt.c: 226:     init();
  2046  00192E  EC2B  F019         	call	_init	;wreg free
  2047  001932                     
  2048                           ;Projekt.c: 228:     char k_r[17];;Projekt.c: 229:     char mor[17];;Projekt.c: 230:    
      +                           char pwm[17];;Projekt.c: 231:     char barg[17];;Projekt.c: 232:     char pong[17];;Pro
      +                          jekt.c: 233:     int m=1;
  2049  001932  0E00               	movlw	0
  2050  001934  0101               	movlb	1	; () banked
  2051  001936  6FB9               	movwf	(main@m+1)& (0+255),b
  2052  001938  0E01               	movlw	1
  2053  00193A  6FB8               	movwf	main@m& (0+255),b
  2054  00193C                     l5995:
  2055                           
  2056                           ;Projekt.c: 236:         LCD_Clear();
  2057  00193C  ECA1  F018         	call	_LCD_Clear	;wreg free
  2058  001940                     
  2059                           ;Projekt.c: 237:         if (PORTAbits.RA4){
  2060  001940  A880               	btfss	128,4,c	;volatile
  2061  001942  EFA5  F00C         	goto	u4021
  2062  001946  EFA7  F00C         	goto	u4020
  2063  00194A                     u4021:
  2064  00194A  EFBC  F00C         	goto	l6005
  2065  00194E                     u4020:
  2066  00194E                     
  2067                           ;Projekt.c: 238:             m++;
  2068  00194E  0101               	movlb	1	; () banked
  2069  001950  4BB8               	infsnz	main@m& (0+255),f,b
  2070  001952  2BB9               	incf	(main@m+1)& (0+255),f,b
  2071  001954                     
  2072                           ; BSR set to: 1
  2073                           ;Projekt.c: 239:             if (m>8){
  2074  001954  BFB9               	btfsc	(main@m+1)& (0+255),7,b
  2075  001956  EFB6  F00C         	goto	u4031
  2076  00195A  51B9               	movf	(main@m+1)& (0+255),w,b
  2077  00195C  E109               	bnz	u4030
  2078  00195E  0E09               	movlw	9
  2079  001960  5DB8               	subwf	main@m& (0+255),w,b
  2080  001962  A0D8               	btfss	status,0,c
  2081  001964  EFB6  F00C         	goto	u4031
  2082  001968  EFB8  F00C         	goto	u4030
  2083  00196C                     u4031:
  2084  00196C  EFBC  F00C         	goto	l6005
  2085  001970                     u4030:
  2086  001970                     
  2087                           ; BSR set to: 1
  2088                           ;Projekt.c: 240:                 m=8;
  2089  001970  0E00               	movlw	0
  2090  001972  6FB9               	movwf	(main@m+1)& (0+255),b
  2091  001974  0E08               	movlw	8
  2092  001976  6FB8               	movwf	main@m& (0+255),b
  2093  001978                     l6005:
  2094                           
  2095                           ;Projekt.c: 243:          if (PORTCbits.RC0){
  2096  001978  A082               	btfss	130,0,c	;volatile
  2097  00197A  EFC1  F00C         	goto	u4041
  2098  00197E  EFC3  F00C         	goto	u4040
  2099  001982                     u4041:
  2100  001982  EF51  F00E         	goto	l6097
  2101  001986                     u4040:
  2102  001986                     
  2103                           ;Projekt.c: 244:             m--;
  2104  001986  0101               	movlb	1	; () banked
  2105  001988  07B8               	decf	main@m& (0+255),f,b
  2106  00198A  A0D8               	btfss	status,0,c
  2107  00198C  07B9               	decf	(main@m+1)& (0+255),f,b
  2108  00198E                     
  2109                           ; BSR set to: 1
  2110                           ;Projekt.c: 245:             if (m<1){
  2111  00198E  BFB9               	btfsc	(main@m+1)& (0+255),7,b
  2112  001990  EFD4  F00C         	goto	u4050
  2113  001994  51B9               	movf	(main@m+1)& (0+255),w,b
  2114  001996  E106               	bnz	u4051
  2115  001998  05B8               	decf	main@m& (0+255),w,b
  2116  00199A  B0D8               	btfsc	status,0,c
  2117  00199C  EFD2  F00C         	goto	u4051
  2118  0019A0  EFD4  F00C         	goto	u4050
  2119  0019A4                     u4051:
  2120  0019A4  EF51  F00E         	goto	l6097
  2121  0019A8                     u4050:
  2122  0019A8                     
  2123                           ; BSR set to: 1
  2124                           ;Projekt.c: 246:                 m=1;
  2125  0019A8  0E00               	movlw	0
  2126  0019AA  6FB9               	movwf	(main@m+1)& (0+255),b
  2127  0019AC  0E01               	movlw	1
  2128  0019AE  6FB8               	movwf	main@m& (0+255),b
  2129  0019B0  EF51  F00E         	goto	l6097
  2130  0019B4                     l6013:
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;Projekt.c: 252:             sprintf(k_r,"* Knight Rider  ");
  2134  0019B4  0E63               	movlw	low main@k_r
  2135  0019B6  6F68               	movwf	sprintf@s& (0+255),b
  2136  0019B8  0E01               	movlw	high main@k_r
  2137  0019BA  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2138  0019BC  0E66               	movlw	low STR_5
  2139  0019BE  6F6A               	movwf	sprintf@fmt& (0+255),b
  2140  0019C0  0EFE               	movlw	high STR_5
  2141  0019C2  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2142  0019C4  EC1B  F018         	call	_sprintf	;wreg free
  2143  0019C8                     
  2144                           ;Projekt.c: 253:             LCD_ShowString(1,k_r);
  2145  0019C8  0E63               	movlw	low main@k_r
  2146  0019CA  6E06               	movwf	LCD_ShowString@textData^0,c
  2147  0019CC  0E01               	movlw	high main@k_r
  2148  0019CE  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2149  0019D0  0E01               	movlw	1
  2150  0019D2  EC3D  F017         	call	_LCD_ShowString
  2151  0019D6                     
  2152                           ;Projekt.c: 254:             sprintf(mor,"  Morseovka     ");
  2153  0019D6  0E85               	movlw	low main@mor
  2154  0019D8  0100               	movlb	0	; () banked
  2155  0019DA  6F68               	movwf	sprintf@s& (0+255),b
  2156  0019DC  0E01               	movlw	high main@mor
  2157  0019DE  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2158  0019E0  0E45               	movlw	low STR_6
  2159  0019E2  6F6A               	movwf	sprintf@fmt& (0+255),b
  2160  0019E4  0EFD               	movlw	high STR_6
  2161  0019E6  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2162  0019E8  EC1B  F018         	call	_sprintf	;wreg free
  2163                           
  2164                           ;Projekt.c: 255:             LCD_ShowString(2,mor);
  2165  0019EC  0E85               	movlw	low main@mor
  2166  0019EE  6E06               	movwf	LCD_ShowString@textData^0,c
  2167  0019F0  0E01               	movlw	high main@mor
  2168  0019F2  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2169  0019F4  0E02               	movlw	2
  2170  0019F6  EC3D  F017         	call	_LCD_ShowString
  2171  0019FA                     
  2172                           ;Projekt.c: 256:             if (PORTAbits.RA3){
  2173  0019FA  A680               	btfss	128,3,c	;volatile
  2174  0019FC  EF02  F00D         	goto	u4061
  2175  001A00  EF04  F00D         	goto	u4060
  2176  001A04                     u4061:
  2177  001A04  EF80  F00E         	goto	l231
  2178  001A08                     u4060:
  2179  001A08                     
  2180                           ;Projekt.c: 257:                 _delay((unsigned long)((250)*(32E6/4000.0)));
  2181  001A08  0E0B               	movlw	11
  2182  001A0A  0100               	movlb	0	; () banked
  2183  001A0C  6FD1               	movwf	(??_main+1)& (0+255),b
  2184  001A0E  0E26               	movlw	38
  2185  001A10  6FD0               	movwf	??_main& (0+255),b
  2186  001A12  0E5D               	movlw	93
  2187  001A14                     u4157:
  2188  001A14  2EE8               	decfsz	wreg,f,c
  2189  001A16  D7FE               	bra	u4157
  2190  001A18  2FD0               	decfsz	??_main& (0+255),f,b
  2191  001A1A  D7FC               	bra	u4157
  2192  001A1C  2FD1               	decfsz	(??_main+1)& (0+255),f,b
  2193  001A1E  D7FA               	bra	u4157
  2194  001A20  D000               	nop2	
  2195  001A22                     
  2196                           ;Projekt.c: 258:                 kr_init();
  2197  001A22  EC39  F014         	call	_kr_init	;wreg free
  2198  001A26  EF80  F00E         	goto	l231
  2199  001A2A                     l6025:
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;Projekt.c: 263:             sprintf(k_r,"  Knight Rider  ");
  2203  001A2A  0E63               	movlw	low main@k_r
  2204  001A2C  6F68               	movwf	sprintf@s& (0+255),b
  2205  001A2E  0E01               	movlw	high main@k_r
  2206  001A30  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2207  001A32  0E55               	movlw	low STR_7
  2208  001A34  6F6A               	movwf	sprintf@fmt& (0+255),b
  2209  001A36  0EFE               	movlw	high STR_7
  2210  001A38  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2211  001A3A  EC1B  F018         	call	_sprintf	;wreg free
  2212  001A3E                     
  2213                           ;Projekt.c: 264:             LCD_ShowString(1,k_r);
  2214  001A3E  0E63               	movlw	low main@k_r
  2215  001A40  6E06               	movwf	LCD_ShowString@textData^0,c
  2216  001A42  0E01               	movlw	high main@k_r
  2217  001A44  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2218  001A46  0E01               	movlw	1
  2219  001A48  EC3D  F017         	call	_LCD_ShowString
  2220  001A4C                     
  2221                           ;Projekt.c: 265:             sprintf(mor,"* Morseovka     ");
  2222  001A4C  0E85               	movlw	low main@mor
  2223  001A4E  0100               	movlb	0	; () banked
  2224  001A50  6F68               	movwf	sprintf@s& (0+255),b
  2225  001A52  0E01               	movlw	high main@mor
  2226  001A54  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2227  001A56  0E56               	movlw	low STR_8
  2228  001A58  6F6A               	movwf	sprintf@fmt& (0+255),b
  2229  001A5A  0EFD               	movlw	high STR_8
  2230  001A5C  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2231  001A5E  EC1B  F018         	call	_sprintf	;wreg free
  2232                           
  2233                           ;Projekt.c: 266:             LCD_ShowString(2,mor);
  2234  001A62  0E85               	movlw	low main@mor
  2235  001A64  6E06               	movwf	LCD_ShowString@textData^0,c
  2236  001A66  0E01               	movlw	high main@mor
  2237  001A68  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2238  001A6A  0E02               	movlw	2
  2239  001A6C  EC3D  F017         	call	_LCD_ShowString
  2240  001A70                     
  2241                           ;Projekt.c: 267:             if (PORTAbits.RA3){
  2242  001A70  A680               	btfss	128,3,c	;volatile
  2243  001A72  EF3D  F00D         	goto	u4071
  2244  001A76  EF3F  F00D         	goto	u4070
  2245  001A7A                     u4071:
  2246  001A7A  EF80  F00E         	goto	l231
  2247  001A7E                     u4070:
  2248  001A7E                     l6033:
  2249                           
  2250                           ;Projekt.c: 268:                 Morseovka();
  2251  001A7E  ECEF  F006         	call	_Morseovka	;wreg free
  2252  001A82  EF80  F00E         	goto	l231
  2253  001A86                     l6035:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;Projekt.c: 272:             sprintf(mor,"* Morseovka     ");
  2257  001A86  0E85               	movlw	low main@mor
  2258  001A88  6F68               	movwf	sprintf@s& (0+255),b
  2259  001A8A  0E01               	movlw	high main@mor
  2260  001A8C  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2261  001A8E  0E56               	movlw	low STR_8
  2262  001A90  6F6A               	movwf	sprintf@fmt& (0+255),b
  2263  001A92  0EFD               	movlw	high STR_8
  2264  001A94  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2265  001A96  EC1B  F018         	call	_sprintf	;wreg free
  2266  001A9A                     
  2267                           ;Projekt.c: 273:             LCD_ShowString(1,mor);
  2268  001A9A  0E85               	movlw	low main@mor
  2269  001A9C  6E06               	movwf	LCD_ShowString@textData^0,c
  2270  001A9E  0E01               	movlw	high main@mor
  2271  001AA0  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2272  001AA2  0E01               	movlw	1
  2273  001AA4  EC3D  F017         	call	_LCD_ShowString
  2274  001AA8                     
  2275                           ;Projekt.c: 274:             sprintf(pwm,"  PWM motor     ");
  2276  001AA8  0E96               	movlw	low main@pwm
  2277  001AAA  0100               	movlb	0	; () banked
  2278  001AAC  6F68               	movwf	sprintf@s& (0+255),b
  2279  001AAE  0E01               	movlw	high main@pwm
  2280  001AB0  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2281  001AB2  0E78               	movlw	low STR_10
  2282  001AB4  6F6A               	movwf	sprintf@fmt& (0+255),b
  2283  001AB6  0EFD               	movlw	high STR_10
  2284  001AB8  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2285  001ABA  EC1B  F018         	call	_sprintf	;wreg free
  2286                           
  2287                           ;Projekt.c: 275:             LCD_ShowString(2,pwm);
  2288  001ABE  0E96               	movlw	low main@pwm
  2289  001AC0  6E06               	movwf	LCD_ShowString@textData^0,c
  2290  001AC2  0E01               	movlw	high main@pwm
  2291  001AC4  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2292  001AC6  0E02               	movlw	2
  2293  001AC8  EC3D  F017         	call	_LCD_ShowString
  2294  001ACC                     
  2295                           ;Projekt.c: 276:             if (PORTAbits.RA3){
  2296  001ACC  A680               	btfss	128,3,c	;volatile
  2297  001ACE  EF6B  F00D         	goto	u4081
  2298  001AD2  EF6D  F00D         	goto	u4080
  2299  001AD6                     u4081:
  2300  001AD6  EF80  F00E         	goto	l231
  2301  001ADA                     u4080:
  2302  001ADA  EF3F  F00D         	goto	l6033
  2303  001ADE                     l6045:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;Projekt.c: 281:             sprintf(mor,"  Morseovka     ");
  2307  001ADE  0E85               	movlw	low main@mor
  2308  001AE0  6F68               	movwf	sprintf@s& (0+255),b
  2309  001AE2  0E01               	movlw	high main@mor
  2310  001AE4  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2311  001AE6  0E45               	movlw	low STR_6
  2312  001AE8  6F6A               	movwf	sprintf@fmt& (0+255),b
  2313  001AEA  0EFD               	movlw	high STR_6
  2314  001AEC  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2315  001AEE  EC1B  F018         	call	_sprintf	;wreg free
  2316  001AF2                     
  2317                           ;Projekt.c: 282:             LCD_ShowString(1,mor);
  2318  001AF2  0E85               	movlw	low main@mor
  2319  001AF4  6E06               	movwf	LCD_ShowString@textData^0,c
  2320  001AF6  0E01               	movlw	high main@mor
  2321  001AF8  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2322  001AFA  0E01               	movlw	1
  2323  001AFC  EC3D  F017         	call	_LCD_ShowString
  2324  001B00                     
  2325                           ;Projekt.c: 283:             sprintf(pwm,"* PWM motor     ");
  2326  001B00  0E96               	movlw	low main@pwm
  2327  001B02  0100               	movlb	0	; () banked
  2328  001B04  6F68               	movwf	sprintf@s& (0+255),b
  2329  001B06  0E01               	movlw	high main@pwm
  2330  001B08  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2331  001B0A  0E89               	movlw	low STR_12
  2332  001B0C  6F6A               	movwf	sprintf@fmt& (0+255),b
  2333  001B0E  0EFD               	movlw	high STR_12
  2334  001B10  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2335  001B12  EC1B  F018         	call	_sprintf	;wreg free
  2336                           
  2337                           ;Projekt.c: 284:             LCD_ShowString(2,pwm);
  2338  001B16  0E96               	movlw	low main@pwm
  2339  001B18  6E06               	movwf	LCD_ShowString@textData^0,c
  2340  001B1A  0E01               	movlw	high main@pwm
  2341  001B1C  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2342  001B1E  0E02               	movlw	2
  2343  001B20  EC3D  F017         	call	_LCD_ShowString
  2344  001B24                     
  2345                           ;Projekt.c: 285:             if (PORTAbits.RA3){
  2346  001B24  A680               	btfss	128,3,c	;volatile
  2347  001B26  EF97  F00D         	goto	u4091
  2348  001B2A  EF99  F00D         	goto	u4090
  2349  001B2E                     u4091:
  2350  001B2E  EF80  F00E         	goto	l231
  2351  001B32                     u4090:
  2352  001B32                     l6053:
  2353                           
  2354                           ;Projekt.c: 286:                PWM_motor_led();
  2355  001B32  EC10  F016         	call	_PWM_motor_led	;wreg free
  2356  001B36  EF80  F00E         	goto	l231
  2357  001B3A                     l6055:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;Projekt.c: 290:             sprintf(pwm,"* PWM motor     ");
  2361  001B3A  0E96               	movlw	low main@pwm
  2362  001B3C  6F68               	movwf	sprintf@s& (0+255),b
  2363  001B3E  0E01               	movlw	high main@pwm
  2364  001B40  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2365  001B42  0E89               	movlw	low STR_12
  2366  001B44  6F6A               	movwf	sprintf@fmt& (0+255),b
  2367  001B46  0EFD               	movlw	high STR_12
  2368  001B48  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2369  001B4A  EC1B  F018         	call	_sprintf	;wreg free
  2370  001B4E                     
  2371                           ;Projekt.c: 291:             LCD_ShowString(1,pwm);
  2372  001B4E  0E96               	movlw	low main@pwm
  2373  001B50  6E06               	movwf	LCD_ShowString@textData^0,c
  2374  001B52  0E01               	movlw	high main@pwm
  2375  001B54  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2376  001B56  0E01               	movlw	1
  2377  001B58  EC3D  F017         	call	_LCD_ShowString
  2378  001B5C                     
  2379                           ;Projekt.c: 292:             sprintf(barg,"  Bargraph      ");
  2380  001B5C  0EA7               	movlw	low main@barg
  2381  001B5E  0100               	movlb	0	; () banked
  2382  001B60  6F68               	movwf	sprintf@s& (0+255),b
  2383  001B62  0E01               	movlw	high main@barg
  2384  001B64  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2385  001B66  0E12               	movlw	low STR_14
  2386  001B68  6F6A               	movwf	sprintf@fmt& (0+255),b
  2387  001B6A  0EFD               	movlw	high STR_14
  2388  001B6C  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2389  001B6E  EC1B  F018         	call	_sprintf	;wreg free
  2390                           
  2391                           ;Projekt.c: 293:             LCD_ShowString(2,barg);
  2392  001B72  0EA7               	movlw	low main@barg
  2393  001B74  6E06               	movwf	LCD_ShowString@textData^0,c
  2394  001B76  0E01               	movlw	high main@barg
  2395  001B78  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2396  001B7A  0E02               	movlw	2
  2397  001B7C  EC3D  F017         	call	_LCD_ShowString
  2398  001B80                     
  2399                           ;Projekt.c: 294:             if (PORTAbits.RA3){
  2400  001B80  A680               	btfss	128,3,c	;volatile
  2401  001B82  EFC5  F00D         	goto	u4101
  2402  001B86  EFC7  F00D         	goto	u4100
  2403  001B8A                     u4101:
  2404  001B8A  EF80  F00E         	goto	l231
  2405  001B8E                     u4100:
  2406  001B8E  EF99  F00D         	goto	l6053
  2407  001B92                     l6065:
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;Projekt.c: 299:             sprintf(pwm,"  PWM motor     ");
  2411  001B92  0E96               	movlw	low main@pwm
  2412  001B94  6F68               	movwf	sprintf@s& (0+255),b
  2413  001B96  0E01               	movlw	high main@pwm
  2414  001B98  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2415  001B9A  0E78               	movlw	low STR_10
  2416  001B9C  6F6A               	movwf	sprintf@fmt& (0+255),b
  2417  001B9E  0EFD               	movlw	high STR_10
  2418  001BA0  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2419  001BA2  EC1B  F018         	call	_sprintf	;wreg free
  2420  001BA6                     
  2421                           ;Projekt.c: 300:             LCD_ShowString(1,pwm);
  2422  001BA6  0E96               	movlw	low main@pwm
  2423  001BA8  6E06               	movwf	LCD_ShowString@textData^0,c
  2424  001BAA  0E01               	movlw	high main@pwm
  2425  001BAC  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2426  001BAE  0E01               	movlw	1
  2427  001BB0  EC3D  F017         	call	_LCD_ShowString
  2428  001BB4                     
  2429                           ;Projekt.c: 301:             sprintf(barg,"* Bargraph      ");
  2430  001BB4  0EA7               	movlw	low main@barg
  2431  001BB6  0100               	movlb	0	; () banked
  2432  001BB8  6F68               	movwf	sprintf@s& (0+255),b
  2433  001BBA  0E01               	movlw	high main@barg
  2434  001BBC  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2435  001BBE  0E23               	movlw	low STR_16
  2436  001BC0  6F6A               	movwf	sprintf@fmt& (0+255),b
  2437  001BC2  0EFD               	movlw	high STR_16
  2438  001BC4  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2439  001BC6  EC1B  F018         	call	_sprintf	;wreg free
  2440                           
  2441                           ;Projekt.c: 302:             LCD_ShowString(2,barg);
  2442  001BCA  0EA7               	movlw	low main@barg
  2443  001BCC  6E06               	movwf	LCD_ShowString@textData^0,c
  2444  001BCE  0E01               	movlw	high main@barg
  2445  001BD0  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2446  001BD2  0E02               	movlw	2
  2447  001BD4  EC3D  F017         	call	_LCD_ShowString
  2448  001BD8                     
  2449                           ;Projekt.c: 303:             if (PORTAbits.RA3){
  2450  001BD8  A680               	btfss	128,3,c	;volatile
  2451  001BDA  EFF1  F00D         	goto	u4111
  2452  001BDE  EFF3  F00D         	goto	u4110
  2453  001BE2                     u4111:
  2454  001BE2  EF80  F00E         	goto	l231
  2455  001BE6                     u4110:
  2456  001BE6                     l6073:
  2457                           
  2458                           ;Projekt.c: 304:                 Bargraph();
  2459  001BE6  ECD5  F009         	call	_Bargraph	;wreg free
  2460  001BEA  EF80  F00E         	goto	l231
  2461  001BEE                     l6075:
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;Projekt.c: 308:             sprintf(barg,"* Bargraph      ");
  2465  001BEE  0EA7               	movlw	low main@barg
  2466  001BF0  6F68               	movwf	sprintf@s& (0+255),b
  2467  001BF2  0E01               	movlw	high main@barg
  2468  001BF4  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2469  001BF6  0E23               	movlw	low STR_16
  2470  001BF8  6F6A               	movwf	sprintf@fmt& (0+255),b
  2471  001BFA  0EFD               	movlw	high STR_16
  2472  001BFC  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2473  001BFE  EC1B  F018         	call	_sprintf	;wreg free
  2474  001C02                     
  2475                           ;Projekt.c: 309:             LCD_ShowString(1,barg);
  2476  001C02  0EA7               	movlw	low main@barg
  2477  001C04  6E06               	movwf	LCD_ShowString@textData^0,c
  2478  001C06  0E01               	movlw	high main@barg
  2479  001C08  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2480  001C0A  0E01               	movlw	1
  2481  001C0C  EC3D  F017         	call	_LCD_ShowString
  2482  001C10                     
  2483                           ;Projekt.c: 310:             sprintf(pong,"  Pong-2 PLAYERS");
  2484  001C10  0E74               	movlw	low main@pong
  2485  001C12  0100               	movlb	0	; () banked
  2486  001C14  6F68               	movwf	sprintf@s& (0+255),b
  2487  001C16  0E01               	movlw	high main@pong
  2488  001C18  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2489  001C1A  0EAA               	movlw	low STR_18
  2490  001C1C  6F6A               	movwf	sprintf@fmt& (0+255),b
  2491  001C1E  0EFE               	movlw	high STR_18
  2492  001C20  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2493  001C22  EC1B  F018         	call	_sprintf	;wreg free
  2494                           
  2495                           ;Projekt.c: 311:             LCD_ShowString(2,pong);
  2496  001C26  0E74               	movlw	low main@pong
  2497  001C28  6E06               	movwf	LCD_ShowString@textData^0,c
  2498  001C2A  0E01               	movlw	high main@pong
  2499  001C2C  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2500  001C2E  0E02               	movlw	2
  2501  001C30  EC3D  F017         	call	_LCD_ShowString
  2502  001C34                     
  2503                           ;Projekt.c: 312:             if (PORTAbits.RA3){
  2504  001C34  A680               	btfss	128,3,c	;volatile
  2505  001C36  EF1F  F00E         	goto	u4121
  2506  001C3A  EF21  F00E         	goto	u4120
  2507  001C3E                     u4121:
  2508  001C3E  EF80  F00E         	goto	l231
  2509  001C42                     u4120:
  2510  001C42  EFF3  F00D         	goto	l6073
  2511  001C46                     l6085:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;Projekt.c: 317:             sprintf(barg,"  Bargraph      ");
  2515  001C46  0EA7               	movlw	low main@barg
  2516  001C48  6F68               	movwf	sprintf@s& (0+255),b
  2517  001C4A  0E01               	movlw	high main@barg
  2518  001C4C  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2519  001C4E  0E12               	movlw	low STR_14
  2520  001C50  6F6A               	movwf	sprintf@fmt& (0+255),b
  2521  001C52  0EFD               	movlw	high STR_14
  2522  001C54  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2523  001C56  EC1B  F018         	call	_sprintf	;wreg free
  2524  001C5A                     
  2525                           ;Projekt.c: 318:             LCD_ShowString(1,barg);
  2526  001C5A  0EA7               	movlw	low main@barg
  2527  001C5C  6E06               	movwf	LCD_ShowString@textData^0,c
  2528  001C5E  0E01               	movlw	high main@barg
  2529  001C60  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2530  001C62  0E01               	movlw	1
  2531  001C64  EC3D  F017         	call	_LCD_ShowString
  2532  001C68                     
  2533                           ;Projekt.c: 319:             sprintf(pong,"* Pong-2 PLAYERS");
  2534  001C68  0E74               	movlw	low main@pong
  2535  001C6A  0100               	movlb	0	; () banked
  2536  001C6C  6F68               	movwf	sprintf@s& (0+255),b
  2537  001C6E  0E01               	movlw	high main@pong
  2538  001C70  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2539  001C72  0EBB               	movlw	low STR_20
  2540  001C74  6F6A               	movwf	sprintf@fmt& (0+255),b
  2541  001C76  0EFE               	movlw	high STR_20
  2542  001C78  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2543  001C7A  EC1B  F018         	call	_sprintf	;wreg free
  2544                           
  2545                           ;Projekt.c: 320:             LCD_ShowString(2,pong);
  2546  001C7E  0E74               	movlw	low main@pong
  2547  001C80  6E06               	movwf	LCD_ShowString@textData^0,c
  2548  001C82  0E01               	movlw	high main@pong
  2549  001C84  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2550  001C86  0E02               	movlw	2
  2551  001C88  EC3D  F017         	call	_LCD_ShowString
  2552  001C8C                     
  2553                           ;Projekt.c: 321:             if (PORTAbits.RA3){
  2554  001C8C  A680               	btfss	128,3,c	;volatile
  2555  001C8E  EF4B  F00E         	goto	u4131
  2556  001C92  EF4D  F00E         	goto	u4130
  2557  001C96                     u4131:
  2558  001C96  EF80  F00E         	goto	l231
  2559  001C9A                     u4130:
  2560  001C9A                     
  2561                           ;Projekt.c: 322:                 Pong();
  2562  001C9A  EC47  F000         	call	_Pong	;wreg free
  2563  001C9E  EF80  F00E         	goto	l231
  2564  001CA2                     l6097:
  2565  001CA2  C1B8  F0D0         	movff	main@m,??_main
  2566  001CA6  C1B9  F0D1         	movff	main@m+1,??_main+1
  2567                           
  2568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2569                           ; Switch size 1, requested type "simple"
  2570                           ; Number of cases is 1, Range of values is 0 to 0
  2571                           ; switch strategies available:
  2572                           ; Name         Instructions Cycles
  2573                           ; simple_byte            4     3 (average)
  2574                           ;	Chosen strategy is simple_byte
  2575  001CAA  0100               	movlb	0	; () banked
  2576  001CAC  51D1               	movf	(??_main+1)& (0+255),w,b
  2577  001CAE  0A00               	xorlw	0	; case 0
  2578  001CB0  B4D8               	btfsc	status,2,c
  2579  001CB2  EF5D  F00E         	goto	l6367
  2580  001CB6  EF80  F00E         	goto	l231
  2581  001CBA                     l6367:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ; Switch size 1, requested type "simple"
  2585                           ; Number of cases is 8, Range of values is 1 to 8
  2586                           ; switch strategies available:
  2587                           ; Name         Instructions Cycles
  2588                           ; simple_byte           25    13 (average)
  2589                           ;	Chosen strategy is simple_byte
  2590  001CBA  51D0               	movf	??_main& (0+255),w,b
  2591  001CBC  0A01               	xorlw	1	; case 1
  2592  001CBE  B4D8               	btfsc	status,2,c
  2593  001CC0  EFDA  F00C         	goto	l6013
  2594  001CC4  0A03               	xorlw	3	; case 2
  2595  001CC6  B4D8               	btfsc	status,2,c
  2596  001CC8  EF15  F00D         	goto	l6025
  2597  001CCC  0A01               	xorlw	1	; case 3
  2598  001CCE  B4D8               	btfsc	status,2,c
  2599  001CD0  EF43  F00D         	goto	l6035
  2600  001CD4  0A07               	xorlw	7	; case 4
  2601  001CD6  B4D8               	btfsc	status,2,c
  2602  001CD8  EF6F  F00D         	goto	l6045
  2603  001CDC  0A01               	xorlw	1	; case 5
  2604  001CDE  B4D8               	btfsc	status,2,c
  2605  001CE0  EF9D  F00D         	goto	l6055
  2606  001CE4  0A03               	xorlw	3	; case 6
  2607  001CE6  B4D8               	btfsc	status,2,c
  2608  001CE8  EFC9  F00D         	goto	l6065
  2609  001CEC  0A01               	xorlw	1	; case 7
  2610  001CEE  B4D8               	btfsc	status,2,c
  2611  001CF0  EFF7  F00D         	goto	l6075
  2612  001CF4  0A0F               	xorlw	15	; case 8
  2613  001CF6  B4D8               	btfsc	status,2,c
  2614  001CF8  EF23  F00E         	goto	l6085
  2615  001CFC  EF80  F00E         	goto	l231
  2616  001D00                     l231:
  2617                           
  2618                           ;Projekt.c: 326:         if(PORTAbits.RA2){
  2619  001D00  A480               	btfss	128,2,c	;volatile
  2620  001D02  EF85  F00E         	goto	u4141
  2621  001D06  EF87  F00E         	goto	u4140
  2622  001D0A                     u4141:
  2623  001D0A  EF8C  F00E         	goto	l6101
  2624  001D0E                     u4140:
  2625  001D0E                     
  2626                           ;Projekt.c: 327:             m=1;
  2627  001D0E  0E00               	movlw	0
  2628  001D10  0101               	movlb	1	; () banked
  2629  001D12  6FB9               	movwf	(main@m+1)& (0+255),b
  2630  001D14  0E01               	movlw	1
  2631  001D16  6FB8               	movwf	main@m& (0+255),b
  2632  001D18                     l6101:
  2633                           
  2634                           ;Projekt.c: 329:     _delay((unsigned long)((150)*(32E6/4000.0)));
  2635  001D18  0E07               	movlw	7
  2636  001D1A  0100               	movlb	0	; () banked
  2637  001D1C  6FD1               	movwf	(??_main+1)& (0+255),b
  2638  001D1E  0E17               	movlw	23
  2639  001D20  6FD0               	movwf	??_main& (0+255),b
  2640  001D22  0E6A               	movlw	106
  2641  001D24                     u4167:
  2642  001D24  2EE8               	decfsz	wreg,f,c
  2643  001D26  D7FE               	bra	u4167
  2644  001D28  2FD0               	decfsz	??_main& (0+255),f,b
  2645  001D2A  D7FC               	bra	u4167
  2646  001D2C  2FD1               	decfsz	(??_main+1)& (0+255),f,b
  2647  001D2E  D7FA               	bra	u4167
  2648  001D30  F000               	nop	
  2649  001D32  EF9E  F00C         	goto	l5995
  2650  001D36  EF45  F000         	goto	start
  2651  001D3A                     __end_of_main:
  2652                           	opt callstack 0
  2653                           
  2654 ;; *************** function _kr_init *****************
  2655 ;; Defined at:
  2656 ;;		line 79 in file "Projekt.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  mor            17   53[BANK0 ] unsigned char [17]
  2661 ;;  k_r            17   36[BANK0 ] unsigned char [17]
  2662 ;;  kr              2   70[BANK0 ] int 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;Total ram usage:       38 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:   10
  2679 ;; This function calls:
  2680 ;;		_Knight_rider_2000
  2681 ;;		_Knight_rider_3000
  2682 ;;		_LCD_ShowString
  2683 ;;		_sprintf
  2684 ;; This function is called by:
  2685 ;;		_main
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text1
  2690  002872                     __ptext1:
  2691                           	opt callstack 0
  2692  002872                     _kr_init:
  2693                           	opt callstack 20
  2694  002872                     
  2695                           ;Projekt.c: 80:     int kr=1;
  2696  002872  0E00               	movlw	0
  2697  002874  0100               	movlb	0	; () banked
  2698  002876  6FA7               	movwf	(kr_init@kr+1)& (0+255),b
  2699  002878  0E01               	movlw	1
  2700  00287A  6FA6               	movwf	kr_init@kr& (0+255),b
  2701  00287C                     l5271:
  2702                           
  2703                           ;Projekt.c: 85:         if (PORTAbits.RA4){
  2704  00287C  A880               	btfss	128,4,c	;volatile
  2705  00287E  EF43  F014         	goto	u3471
  2706  002882  EF45  F014         	goto	u3470
  2707  002886                     u3471:
  2708  002886  EF4A  F014         	goto	l5275
  2709  00288A                     u3470:
  2710  00288A                     
  2711                           ;Projekt.c: 86:             kr=2;
  2712  00288A  0E00               	movlw	0
  2713  00288C  0100               	movlb	0	; () banked
  2714  00288E  6FA7               	movwf	(kr_init@kr+1)& (0+255),b
  2715  002890  0E02               	movlw	2
  2716  002892  6FA6               	movwf	kr_init@kr& (0+255),b
  2717  002894                     l5275:
  2718                           
  2719                           ;Projekt.c: 88:         if (PORTCbits.RC0){
  2720  002894  A082               	btfss	130,0,c	;volatile
  2721  002896  EF4F  F014         	goto	u3481
  2722  00289A  EF51  F014         	goto	u3480
  2723  00289E                     u3481:
  2724  00289E  EFB4  F014         	goto	l5301
  2725  0028A2                     u3480:
  2726  0028A2                     
  2727                           ;Projekt.c: 89:             kr=1;
  2728  0028A2  0E00               	movlw	0
  2729  0028A4  0100               	movlb	0	; () banked
  2730  0028A6  6FA7               	movwf	(kr_init@kr+1)& (0+255),b
  2731  0028A8  0E01               	movlw	1
  2732  0028AA  6FA6               	movwf	kr_init@kr& (0+255),b
  2733  0028AC  EFB4  F014         	goto	l5301
  2734  0028B0                     l5279:
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;Projekt.c: 93:                 sprintf(k_r,"* Model 2000    ");
  2738  0028B0  0E84               	movlw	low kr_init@k_r
  2739  0028B2  6F68               	movwf	sprintf@s& (0+255),b
  2740  0028B4  0E00               	movlw	high kr_init@k_r
  2741  0028B6  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2742  0028B8  0EAB               	movlw	low STR_1
  2743  0028BA  6F6A               	movwf	sprintf@fmt& (0+255),b
  2744  0028BC  0EFD               	movlw	high STR_1
  2745  0028BE  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2746  0028C0  EC1B  F018         	call	_sprintf	;wreg free
  2747  0028C4                     
  2748                           ;Projekt.c: 94:                 LCD_ShowString(1,k_r);
  2749  0028C4  0E84               	movlw	low kr_init@k_r
  2750  0028C6  6E06               	movwf	LCD_ShowString@textData^0,c
  2751  0028C8  0E00               	movlw	high kr_init@k_r
  2752  0028CA  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2753  0028CC  0E01               	movlw	1
  2754  0028CE  EC3D  F017         	call	_LCD_ShowString
  2755  0028D2                     
  2756                           ;Projekt.c: 95:                 sprintf(mor,"  Model 3000    ");
  2757  0028D2  0E95               	movlw	low kr_init@mor
  2758  0028D4  0100               	movlb	0	; () banked
  2759  0028D6  6F68               	movwf	sprintf@s& (0+255),b
  2760  0028D8  0E00               	movlw	high kr_init@mor
  2761  0028DA  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2762  0028DC  0EBC               	movlw	low STR_2
  2763  0028DE  6F6A               	movwf	sprintf@fmt& (0+255),b
  2764  0028E0  0EFD               	movlw	high STR_2
  2765  0028E2  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2766  0028E4  EC1B  F018         	call	_sprintf	;wreg free
  2767                           
  2768                           ;Projekt.c: 96:                 LCD_ShowString(2,mor);
  2769  0028E8  0E95               	movlw	low kr_init@mor
  2770  0028EA  6E06               	movwf	LCD_ShowString@textData^0,c
  2771  0028EC  0E00               	movlw	high kr_init@mor
  2772  0028EE  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2773  0028F0  0E02               	movlw	2
  2774  0028F2  EC3D  F017         	call	_LCD_ShowString
  2775  0028F6                     
  2776                           ;Projekt.c: 97:                  if (PORTAbits.RA3){
  2777  0028F6  A680               	btfss	128,3,c	;volatile
  2778  0028F8  EF80  F014         	goto	u3491
  2779  0028FC  EF82  F014         	goto	u3490
  2780  002900                     u3491:
  2781  002900  EFCB  F014         	goto	l190
  2782  002904                     u3490:
  2783  002904                     
  2784                           ;Projekt.c: 98:                 Knight_rider_2000();
  2785  002904  EC0D  F010         	call	_Knight_rider_2000	;wreg free
  2786  002908  EFCB  F014         	goto	l190
  2787  00290C                     l5289:
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;Projekt.c: 102:                 sprintf(k_r,"  Model 2000    ");
  2791  00290C  0E84               	movlw	low kr_init@k_r
  2792  00290E  6F68               	movwf	sprintf@s& (0+255),b
  2793  002910  0E00               	movlw	high kr_init@k_r
  2794  002912  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2795  002914  0E9A               	movlw	low STR_3
  2796  002916  6F6A               	movwf	sprintf@fmt& (0+255),b
  2797  002918  0EFD               	movlw	high STR_3
  2798  00291A  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2799  00291C  EC1B  F018         	call	_sprintf	;wreg free
  2800  002920                     
  2801                           ;Projekt.c: 103:                 LCD_ShowString(1,k_r);
  2802  002920  0E84               	movlw	low kr_init@k_r
  2803  002922  6E06               	movwf	LCD_ShowString@textData^0,c
  2804  002924  0E00               	movlw	high kr_init@k_r
  2805  002926  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2806  002928  0E01               	movlw	1
  2807  00292A  EC3D  F017         	call	_LCD_ShowString
  2808  00292E                     
  2809                           ;Projekt.c: 104:                 sprintf(mor,"* Model 3000    ");
  2810  00292E  0E95               	movlw	low kr_init@mor
  2811  002930  0100               	movlb	0	; () banked
  2812  002932  6F68               	movwf	sprintf@s& (0+255),b
  2813  002934  0E00               	movlw	high kr_init@mor
  2814  002936  6F69               	movwf	(sprintf@s+1)& (0+255),b
  2815  002938  0ECD               	movlw	low STR_4
  2816  00293A  6F6A               	movwf	sprintf@fmt& (0+255),b
  2817  00293C  0EFD               	movlw	high STR_4
  2818  00293E  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  2819  002940  EC1B  F018         	call	_sprintf	;wreg free
  2820                           
  2821                           ;Projekt.c: 105:                 LCD_ShowString(2,mor);
  2822  002944  0E95               	movlw	low kr_init@mor
  2823  002946  6E06               	movwf	LCD_ShowString@textData^0,c
  2824  002948  0E00               	movlw	high kr_init@mor
  2825  00294A  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  2826  00294C  0E02               	movlw	2
  2827  00294E  EC3D  F017         	call	_LCD_ShowString
  2828  002952                     
  2829                           ;Projekt.c: 106:                 if (PORTAbits.RA3){
  2830  002952  A680               	btfss	128,3,c	;volatile
  2831  002954  EFAE  F014         	goto	u3501
  2832  002958  EFB0  F014         	goto	u3500
  2833  00295C                     u3501:
  2834  00295C  EFCB  F014         	goto	l190
  2835  002960                     u3500:
  2836  002960                     
  2837                           ;Projekt.c: 107:                 Knight_rider_3000();
  2838  002960  EC7A  F012         	call	_Knight_rider_3000	;wreg free
  2839  002964  EFCB  F014         	goto	l190
  2840  002968                     l5301:
  2841  002968  C0A6  F082         	movff	kr_init@kr,??_kr_init
  2842  00296C  C0A7  F083         	movff	kr_init@kr+1,??_kr_init+1
  2843                           
  2844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2845                           ; Switch size 1, requested type "simple"
  2846                           ; Number of cases is 1, Range of values is 0 to 0
  2847                           ; switch strategies available:
  2848                           ; Name         Instructions Cycles
  2849                           ; simple_byte            4     3 (average)
  2850                           ;	Chosen strategy is simple_byte
  2851  002970  0100               	movlb	0	; () banked
  2852  002972  5183               	movf	(??_kr_init+1)& (0+255),w,b
  2853  002974  0A00               	xorlw	0	; case 0
  2854  002976  B4D8               	btfsc	status,2,c
  2855  002978  EFC0  F014         	goto	l6369
  2856  00297C  EFCB  F014         	goto	l190
  2857  002980                     l6369:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ; Switch size 1, requested type "simple"
  2861                           ; Number of cases is 2, Range of values is 1 to 2
  2862                           ; switch strategies available:
  2863                           ; Name         Instructions Cycles
  2864                           ; simple_byte            7     4 (average)
  2865                           ;	Chosen strategy is simple_byte
  2866  002980  5182               	movf	??_kr_init& (0+255),w,b
  2867  002982  0A01               	xorlw	1	; case 1
  2868  002984  B4D8               	btfsc	status,2,c
  2869  002986  EF58  F014         	goto	l5279
  2870  00298A  0A03               	xorlw	3	; case 2
  2871  00298C  B4D8               	btfsc	status,2,c
  2872  00298E  EF86  F014         	goto	l5289
  2873  002992  EFCB  F014         	goto	l190
  2874  002996                     l190:
  2875                           
  2876                           ;Projekt.c: 111:                 if (PORTAbits.RA2){
  2877  002996  A480               	btfss	128,2,c	;volatile
  2878  002998  EFD0  F014         	goto	u3511
  2879  00299C  EFD2  F014         	goto	u3510
  2880  0029A0                     u3511:
  2881  0029A0  EFE1  F014         	goto	l5307
  2882  0029A4                     u3510:
  2883  0029A4                     
  2884                           ;Projekt.c: 112:                 _delay((unsigned long)((300)*(32E6/4000.0)));
  2885  0029A4  0E0D               	movlw	13
  2886  0029A6  0100               	movlb	0	; () banked
  2887  0029A8  6F83               	movwf	(??_kr_init+1)& (0+255),b
  2888  0029AA  0E2D               	movlw	45
  2889  0029AC  6F82               	movwf	??_kr_init& (0+255),b
  2890  0029AE  0ED7               	movlw	215
  2891  0029B0                     u4177:
  2892  0029B0  2EE8               	decfsz	wreg,f,c
  2893  0029B2  D7FE               	bra	u4177
  2894  0029B4  2F82               	decfsz	??_kr_init& (0+255),f,b
  2895  0029B6  D7FC               	bra	u4177
  2896  0029B8  2F83               	decfsz	(??_kr_init+1)& (0+255),f,b
  2897  0029BA  D7FA               	bra	u4177
  2898  0029BC  D000               	nop2	
  2899  0029BE  EFF0  F014         	goto	l194
  2900  0029C2                     l5307:
  2901                           
  2902                           ;Projekt.c: 115:                 _delay((unsigned long)((150)*(32E6/4000.0)));
  2903  0029C2  0E07               	movlw	7
  2904  0029C4  0100               	movlb	0	; () banked
  2905  0029C6  6F83               	movwf	(??_kr_init+1)& (0+255),b
  2906  0029C8  0E17               	movlw	23
  2907  0029CA  6F82               	movwf	??_kr_init& (0+255),b
  2908  0029CC  0E6A               	movlw	106
  2909  0029CE                     u4187:
  2910  0029CE  2EE8               	decfsz	wreg,f,c
  2911  0029D0  D7FE               	bra	u4187
  2912  0029D2  2F82               	decfsz	??_kr_init& (0+255),f,b
  2913  0029D4  D7FC               	bra	u4187
  2914  0029D6  2F83               	decfsz	(??_kr_init+1)& (0+255),f,b
  2915  0029D8  D7FA               	bra	u4187
  2916  0029DA  F000               	nop	
  2917  0029DC  EF3E  F014         	goto	l5271
  2918  0029E0                     l194:
  2919  0029E0  0012               	return		;funcret
  2920  0029E2                     __end_of_kr_init:
  2921                           	opt callstack 0
  2922                           
  2923 ;; *************** function _Knight_rider_3000 *****************
  2924 ;; Defined at:
  2925 ;;		line 569 in file "Projekt.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  j               2   30[BANK0 ] int 
  2930 ;;  i               2   28[BANK0 ] int 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;Total ram usage:        6 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    9
  2947 ;; This function calls:
  2948 ;;		_LCD_ShowString
  2949 ;;		_sprintf
  2950 ;; This function is called by:
  2951 ;;		_kr_init
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text2
  2956  0024F4                     __ptext2:
  2957                           	opt callstack 0
  2958  0024F4                     _Knight_rider_3000:
  2959                           	opt callstack 20
  2960  0024F4                     
  2961                           ;Projekt.c: 571:     TRISDbits.TRISD2 = 0;
  2962  0024F4  9495               	bcf	149,2,c	;volatile
  2963                           
  2964                           ;Projekt.c: 572:     TRISDbits.TRISD3 = 0;
  2965  0024F6  9695               	bcf	149,3,c	;volatile
  2966                           
  2967                           ;Projekt.c: 573:     TRISCbits.TRISC4 = 0;
  2968  0024F8  9894               	bcf	148,4,c	;volatile
  2969                           
  2970                           ;Projekt.c: 574:     TRISDbits.TRISD4 = 0;
  2971  0024FA  9895               	bcf	149,4,c	;volatile
  2972                           
  2973                           ;Projekt.c: 575:     TRISDbits.TRISD5 = 0;
  2974  0024FC  9A95               	bcf	149,5,c	;volatile
  2975                           
  2976                           ;Projekt.c: 576:     TRISDbits.TRISD6 = 0;
  2977  0024FE  9C95               	bcf	149,6,c	;volatile
  2978                           
  2979                           ;Projekt.c: 578:     LATDbits.LATD2 = 1;
  2980  002500  848C               	bsf	140,2,c	;volatile
  2981                           
  2982                           ;Projekt.c: 579:     LATDbits.LATD3 = 1;
  2983  002502  868C               	bsf	140,3,c	;volatile
  2984                           
  2985                           ;Projekt.c: 580:     LATCbits.LATC4 = 1;
  2986  002504  888B               	bsf	139,4,c	;volatile
  2987                           
  2988                           ;Projekt.c: 581:     LATDbits.LATD4 = 1;
  2989  002506  888C               	bsf	140,4,c	;volatile
  2990                           
  2991                           ;Projekt.c: 582:     LATDbits.LATD5 = 1;
  2992  002508  8A8C               	bsf	140,5,c	;volatile
  2993                           
  2994                           ;Projekt.c: 583:     LATDbits.LATD6 = 1;
  2995  00250A  8C8C               	bsf	140,6,c	;volatile
  2996  00250C                     
  2997                           ;Projekt.c: 585:     int i=0;
  2998  00250C  0E00               	movlw	0
  2999  00250E  0100               	movlb	0	; () banked
  3000  002510  6F7D               	movwf	(Knight_rider_3000@i+1)& (0+255),b
  3001  002512  0E00               	movlw	0
  3002  002514  6F7C               	movwf	Knight_rider_3000@i& (0+255),b
  3003                           
  3004                           ;Projekt.c: 586:     int j=2;
  3005  002516  0E00               	movlw	0
  3006  002518  6F7F               	movwf	(Knight_rider_3000@j+1)& (0+255),b
  3007  00251A  0E02               	movlw	2
  3008  00251C  6F7E               	movwf	Knight_rider_3000@j& (0+255),b
  3009  00251E                     l5203:
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;Projekt.c: 589:         sprintf(nadpis1,"Knight Rider    ");
  3013  00251E  0EEC               	movlw	low _nadpis1
  3014  002520  6F68               	movwf	sprintf@s& (0+255),b
  3015  002522  0E00               	movlw	high _nadpis1
  3016  002524  6F69               	movwf	(sprintf@s+1)& (0+255),b
  3017  002526  0EEF               	movlw	low STR_69
  3018  002528  6F6A               	movwf	sprintf@fmt& (0+255),b
  3019  00252A  0EFD               	movlw	high STR_69
  3020  00252C  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  3021  00252E  EC1B  F018         	call	_sprintf	;wreg free
  3022  002532                     
  3023                           ;Projekt.c: 590:         LCD_ShowString(1,nadpis1);
  3024  002532  0EEC               	movlw	low _nadpis1
  3025  002534  6E06               	movwf	LCD_ShowString@textData^0,c
  3026  002536  0E00               	movlw	high _nadpis1
  3027  002538  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  3028  00253A  0E01               	movlw	1
  3029  00253C  EC3D  F017         	call	_LCD_ShowString
  3030  002540                     
  3031                           ;Projekt.c: 591:         sprintf(nadpis2,"On the way...   ");
  3032  002540  0EDB               	movlw	low _nadpis2
  3033  002542  0100               	movlb	0	; () banked
  3034  002544  6F68               	movwf	sprintf@s& (0+255),b
  3035  002546  0E00               	movlw	high _nadpis2
  3036  002548  6F69               	movwf	(sprintf@s+1)& (0+255),b
  3037  00254A  0E11               	movlw	low STR_70
  3038  00254C  6F6A               	movwf	sprintf@fmt& (0+255),b
  3039  00254E  0EFE               	movlw	high STR_70
  3040  002550  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  3041  002552  EC1B  F018         	call	_sprintf	;wreg free
  3042  002556                     
  3043                           ;Projekt.c: 592:         LCD_ShowString(2,nadpis2);
  3044  002556  0EDB               	movlw	low _nadpis2
  3045  002558  6E06               	movwf	LCD_ShowString@textData^0,c
  3046  00255A  0E00               	movlw	high _nadpis2
  3047  00255C  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  3048  00255E  0E02               	movlw	2
  3049  002560  EC3D  F017         	call	_LCD_ShowString
  3050  002564                     l5215:
  3051                           
  3052                           ;Projekt.c: 595:             _delay((unsigned long)((75)*(32E6/4000.0)));
  3053  002564  0E04               	movlw	4
  3054  002566  0100               	movlb	0	; () banked
  3055  002568  6F7B               	movwf	(??_Knight_rider_3000+1)& (0+255),b
  3056  00256A  0E0C               	movlw	12
  3057  00256C  6F7A               	movwf	??_Knight_rider_3000& (0+255),b
  3058  00256E  0E33               	movlw	51
  3059  002570                     u4197:
  3060  002570  2EE8               	decfsz	wreg,f,c
  3061  002572  D7FE               	bra	u4197
  3062  002574  2F7A               	decfsz	??_Knight_rider_3000& (0+255),f,b
  3063  002576  D7FC               	bra	u4197
  3064  002578  2F7B               	decfsz	(??_Knight_rider_3000+1)& (0+255),f,b
  3065  00257A  D7FA               	bra	u4197
  3066  00257C  D000               	nop2	
  3067                           
  3068                           ;Projekt.c: 596:             switch (i){
  3069  00257E  EFCD  F012         	goto	l5219
  3070  002582                     l346:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;Projekt.c: 599:                         LATCbits.LATC4 = 0;
  3074  002582  988B               	bcf	139,4,c	;volatile
  3075                           
  3076                           ;Projekt.c: 600:                         LATDbits.LATD4 = 0;
  3077  002584  988C               	bcf	140,4,c	;volatile
  3078                           
  3079                           ;Projekt.c: 601:                         break;
  3080  002586  EFE8  F012         	goto	l347
  3081  00258A                     l348:
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;Projekt.c: 603:                         LATDbits.LATD5 = 0;
  3085  00258A  9A8C               	bcf	140,5,c	;volatile
  3086                           
  3087                           ;Projekt.c: 604:                         LATDbits.LATD3 = 0;
  3088  00258C  968C               	bcf	140,3,c	;volatile
  3089                           
  3090                           ;Projekt.c: 605:                         break;
  3091  00258E  EFE8  F012         	goto	l347
  3092  002592                     l349:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;Projekt.c: 607:                         LATDbits.LATD6 = 0;
  3096  002592  9C8C               	bcf	140,6,c	;volatile
  3097                           
  3098                           ;Projekt.c: 608:                         LATDbits.LATD2 = 0;
  3099  002594  948C               	bcf	140,2,c	;volatile
  3100                           
  3101                           ;Projekt.c: 609:                         break;
  3102  002596  EFE8  F012         	goto	l347
  3103  00259A                     l5219:
  3104  00259A  C07C  F07A         	movff	Knight_rider_3000@i,??_Knight_rider_3000
  3105  00259E  C07D  F07B         	movff	Knight_rider_3000@i+1,??_Knight_rider_3000+1
  3106                           
  3107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3108                           ; Switch size 1, requested type "simple"
  3109                           ; Number of cases is 1, Range of values is 0 to 0
  3110                           ; switch strategies available:
  3111                           ; Name         Instructions Cycles
  3112                           ; simple_byte            4     3 (average)
  3113                           ;	Chosen strategy is simple_byte
  3114  0025A2  0100               	movlb	0	; () banked
  3115  0025A4  517B               	movf	(??_Knight_rider_3000+1)& (0+255),w,b
  3116  0025A6  0A00               	xorlw	0	; case 0
  3117  0025A8  B4D8               	btfsc	status,2,c
  3118  0025AA  EFD9  F012         	goto	l6371
  3119  0025AE  EFE8  F012         	goto	l347
  3120  0025B2                     l6371:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ; Switch size 1, requested type "simple"
  3124                           ; Number of cases is 3, Range of values is 0 to 2
  3125                           ; switch strategies available:
  3126                           ; Name         Instructions Cycles
  3127                           ; simple_byte           10     6 (average)
  3128                           ;	Chosen strategy is simple_byte
  3129  0025B2  517A               	movf	??_Knight_rider_3000& (0+255),w,b
  3130  0025B4  0A00               	xorlw	0	; case 0
  3131  0025B6  B4D8               	btfsc	status,2,c
  3132  0025B8  EFC1  F012         	goto	l346
  3133  0025BC  0A01               	xorlw	1	; case 1
  3134  0025BE  B4D8               	btfsc	status,2,c
  3135  0025C0  EFC5  F012         	goto	l348
  3136  0025C4  0A03               	xorlw	3	; case 2
  3137  0025C6  B4D8               	btfsc	status,2,c
  3138  0025C8  EFC9  F012         	goto	l349
  3139  0025CC  EFE8  F012         	goto	l347
  3140  0025D0                     l347:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;Projekt.c: 611:         if (PORTAbits.RA2){
  3144  0025D0  A480               	btfss	128,2,c	;volatile
  3145  0025D2  EFED  F012         	goto	u3421
  3146  0025D6  EFEF  F012         	goto	u3420
  3147  0025DA                     u3421:
  3148  0025DA  EF04  F013         	goto	l5227
  3149  0025DE                     u3420:
  3150  0025DE                     
  3151                           ; BSR set to: 0
  3152                           ;Projekt.c: 612:          LATDbits.LATD2 = 0;
  3153  0025DE  948C               	bcf	140,2,c	;volatile
  3154                           
  3155                           ;Projekt.c: 613:          LATDbits.LATD3 = 0;
  3156  0025E0  968C               	bcf	140,3,c	;volatile
  3157                           
  3158                           ;Projekt.c: 614:          LATCbits.LATC4 = 0;
  3159  0025E2  988B               	bcf	139,4,c	;volatile
  3160                           
  3161                           ;Projekt.c: 615:          LATDbits.LATD4 = 0;
  3162  0025E4  988C               	bcf	140,4,c	;volatile
  3163                           
  3164                           ;Projekt.c: 616:          LATDbits.LATD5 = 0;
  3165  0025E6  9A8C               	bcf	140,5,c	;volatile
  3166                           
  3167                           ;Projekt.c: 617:          LATDbits.LATD6 = 0;
  3168  0025E8  9C8C               	bcf	140,6,c	;volatile
  3169  0025EA                     l5223:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;Projekt.c: 618:          _delay((unsigned long)((200)*(32E6/4000.0)));
  3173  0025EA  0E09               	movlw	9
  3174  0025EC  0100               	movlb	0	; () banked
  3175  0025EE  6F7B               	movwf	(??_Knight_rider_3000+1)& (0+255),b
  3176  0025F0  0E1E               	movlw	30
  3177  0025F2  6F7A               	movwf	??_Knight_rider_3000& (0+255),b
  3178  0025F4  0EE4               	movlw	228
  3179  0025F6                     u4207:
  3180  0025F6  2EE8               	decfsz	wreg,f,c
  3181  0025F8  D7FE               	bra	u4207
  3182  0025FA  2F7A               	decfsz	??_Knight_rider_3000& (0+255),f,b
  3183  0025FC  D7FC               	bra	u4207
  3184  0025FE  2F7B               	decfsz	(??_Knight_rider_3000+1)& (0+255),f,b
  3185  002600  D7FA               	bra	u4207
  3186  002602  F000               	nop	
  3187  002604  EF74  F013         	goto	l351
  3188  002608                     l5227:
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;Projekt.c: 621:     }
  3192  002608  4B7C               	infsnz	Knight_rider_3000@i& (0+255),f,b
  3193  00260A  2B7D               	incf	(Knight_rider_3000@i+1)& (0+255),f,b
  3194  00260C                     
  3195                           ; BSR set to: 0
  3196  00260C  BF7D               	btfsc	(Knight_rider_3000@i+1)& (0+255),7,b
  3197  00260E  EF12  F013         	goto	u3431
  3198  002612  517D               	movf	(Knight_rider_3000@i+1)& (0+255),w,b
  3199  002614  E109               	bnz	u3430
  3200  002616  0E03               	movlw	3
  3201  002618  5D7C               	subwf	Knight_rider_3000@i& (0+255),w,b
  3202  00261A  A0D8               	btfss	status,0,c
  3203  00261C  EF12  F013         	goto	u3431
  3204  002620  EF14  F013         	goto	u3430
  3205  002624                     u3431:
  3206  002624  EFB2  F012         	goto	l5215
  3207  002628                     u3430:
  3208  002628                     
  3209                           ; BSR set to: 0
  3210  002628  BF7F               	btfsc	(Knight_rider_3000@j+1)& (0+255),7,b
  3211  00262A  EF1B  F013         	goto	u3440
  3212  00262E  EF19  F013         	goto	u3441
  3213  002632                     u3441:
  3214  002632  EF29  F013         	goto	l5237
  3215  002636                     u3440:
  3216  002636  EF6A  F013         	goto	l5249
  3217  00263A                     l355:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;Projekt.c: 625:                LATCbits.LATC4 = 1;
  3221  00263A  888B               	bsf	139,4,c	;volatile
  3222                           
  3223                           ;Projekt.c: 626:                LATDbits.LATD4 = 1;
  3224  00263C  888C               	bsf	140,4,c	;volatile
  3225                           
  3226                           ;Projekt.c: 627:                break;
  3227  00263E  EF43  F013         	goto	l356
  3228  002642                     l357:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;Projekt.c: 629:                 LATDbits.LATD5 = 1;
  3232  002642  8A8C               	bsf	140,5,c	;volatile
  3233                           
  3234                           ;Projekt.c: 630:                 LATDbits.LATD3 = 1;
  3235  002644  868C               	bsf	140,3,c	;volatile
  3236                           
  3237                           ;Projekt.c: 631:                 break;
  3238  002646  EF43  F013         	goto	l356
  3239  00264A                     l358:
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;Projekt.c: 633:                 LATDbits.LATD6 = 1;
  3243  00264A  8C8C               	bsf	140,6,c	;volatile
  3244                           
  3245                           ;Projekt.c: 634:                 LATDbits.LATD2 = 1;
  3246  00264C  848C               	bsf	140,2,c	;volatile
  3247                           
  3248                           ;Projekt.c: 635:                 break;
  3249  00264E  EF43  F013         	goto	l356
  3250  002652                     l5237:
  3251                           
  3252                           ; BSR set to: 0
  3253  002652  C07E  F07A         	movff	Knight_rider_3000@j,??_Knight_rider_3000
  3254  002656  C07F  F07B         	movff	Knight_rider_3000@j+1,??_Knight_rider_3000+1
  3255                           
  3256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3257                           ; Switch size 1, requested type "simple"
  3258                           ; Number of cases is 1, Range of values is 0 to 0
  3259                           ; switch strategies available:
  3260                           ; Name         Instructions Cycles
  3261                           ; simple_byte            4     3 (average)
  3262                           ;	Chosen strategy is simple_byte
  3263  00265A  517B               	movf	(??_Knight_rider_3000+1)& (0+255),w,b
  3264  00265C  0A00               	xorlw	0	; case 0
  3265  00265E  B4D8               	btfsc	status,2,c
  3266  002660  EF34  F013         	goto	l6373
  3267  002664  EF43  F013         	goto	l356
  3268  002668                     l6373:
  3269                           
  3270                           ; BSR set to: 0
  3271                           ; Switch size 1, requested type "simple"
  3272                           ; Number of cases is 3, Range of values is 0 to 2
  3273                           ; switch strategies available:
  3274                           ; Name         Instructions Cycles
  3275                           ; simple_byte           10     6 (average)
  3276                           ;	Chosen strategy is simple_byte
  3277  002668  517A               	movf	??_Knight_rider_3000& (0+255),w,b
  3278  00266A  0A00               	xorlw	0	; case 0
  3279  00266C  B4D8               	btfsc	status,2,c
  3280  00266E  EF1D  F013         	goto	l355
  3281  002672  0A01               	xorlw	1	; case 1
  3282  002674  B4D8               	btfsc	status,2,c
  3283  002676  EF21  F013         	goto	l357
  3284  00267A  0A03               	xorlw	3	; case 2
  3285  00267C  B4D8               	btfsc	status,2,c
  3286  00267E  EF25  F013         	goto	l358
  3287  002682  EF43  F013         	goto	l356
  3288  002686                     l356:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;Projekt.c: 637:         if (PORTAbits.RA2){
  3292  002686  A480               	btfss	128,2,c	;volatile
  3293  002688  EF48  F013         	goto	u3451
  3294  00268C  EF4A  F013         	goto	u3450
  3295  002690                     u3451:
  3296  002690  EF52  F013         	goto	l5245
  3297  002694                     u3450:
  3298  002694                     
  3299                           ; BSR set to: 0
  3300                           ;Projekt.c: 638:          LATDbits.LATD2 = 0;
  3301  002694  948C               	bcf	140,2,c	;volatile
  3302                           
  3303                           ;Projekt.c: 639:          LATDbits.LATD3 = 0;
  3304  002696  968C               	bcf	140,3,c	;volatile
  3305                           
  3306                           ;Projekt.c: 640:          LATCbits.LATC4 = 0;
  3307  002698  988B               	bcf	139,4,c	;volatile
  3308                           
  3309                           ;Projekt.c: 641:          LATDbits.LATD4 = 0;
  3310  00269A  988C               	bcf	140,4,c	;volatile
  3311                           
  3312                           ;Projekt.c: 642:          LATDbits.LATD5 = 0;
  3313  00269C  9A8C               	bcf	140,5,c	;volatile
  3314                           
  3315                           ;Projekt.c: 643:          LATDbits.LATD6 = 0;
  3316  00269E  9C8C               	bcf	140,6,c	;volatile
  3317  0026A0  EFF5  F012         	goto	l5223
  3318  0026A4                     l5245:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;Projekt.c: 647:         _delay((unsigned long)((75)*(32E6/4000.0)));
  3322  0026A4  0E04               	movlw	4
  3323  0026A6  0100               	movlb	0	; () banked
  3324  0026A8  6F7B               	movwf	(??_Knight_rider_3000+1)& (0+255),b
  3325  0026AA  0E0C               	movlw	12
  3326  0026AC  6F7A               	movwf	??_Knight_rider_3000& (0+255),b
  3327  0026AE  0E33               	movlw	51
  3328  0026B0                     u4217:
  3329  0026B0  2EE8               	decfsz	wreg,f,c
  3330  0026B2  D7FE               	bra	u4217
  3331  0026B4  2F7A               	decfsz	??_Knight_rider_3000& (0+255),f,b
  3332  0026B6  D7FC               	bra	u4217
  3333  0026B8  2F7B               	decfsz	(??_Knight_rider_3000+1)& (0+255),f,b
  3334  0026BA  D7FA               	bra	u4217
  3335  0026BC  D000               	nop2	
  3336  0026BE                     
  3337                           ;Projekt.c: 648:         }
  3338  0026BE  0100               	movlb	0	; () banked
  3339  0026C0  077E               	decf	Knight_rider_3000@j& (0+255),f,b
  3340  0026C2  A0D8               	btfss	status,0,c
  3341  0026C4  077F               	decf	(Knight_rider_3000@j+1)& (0+255),f,b
  3342  0026C6  BF7F               	btfsc	(Knight_rider_3000@j+1)& (0+255),7,b
  3343  0026C8  EF6A  F013         	goto	u3460
  3344  0026CC  EF68  F013         	goto	u3461
  3345  0026D0                     u3461:
  3346  0026D0  EF29  F013         	goto	l5237
  3347  0026D4                     u3460:
  3348  0026D4                     l5249:
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;Projekt.c: 649:       i=0;
  3352  0026D4  0E00               	movlw	0
  3353  0026D6  6F7D               	movwf	(Knight_rider_3000@i+1)& (0+255),b
  3354  0026D8  0E00               	movlw	0
  3355  0026DA  6F7C               	movwf	Knight_rider_3000@i& (0+255),b
  3356                           
  3357                           ;Projekt.c: 650:       j=5;
  3358  0026DC  0E00               	movlw	0
  3359  0026DE  6F7F               	movwf	(Knight_rider_3000@j+1)& (0+255),b
  3360  0026E0  0E05               	movlw	5
  3361  0026E2  6F7E               	movwf	Knight_rider_3000@j& (0+255),b
  3362  0026E4  EF8F  F012         	goto	l5203
  3363  0026E8                     l351:
  3364  0026E8  0012               	return		;funcret
  3365  0026EA                     __end_of_Knight_rider_3000:
  3366                           	opt callstack 0
  3367                           
  3368 ;; *************** function _Knight_rider_2000 *****************
  3369 ;; Defined at:
  3370 ;;		line 660 in file "Projekt.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  j               2   32[BANK0 ] int 
  3375 ;;  i               2   30[BANK0 ] int 
  3376 ;;  r               2   28[BANK0 ] int 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;Total ram usage:        8 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    9
  3393 ;; This function calls:
  3394 ;;		_LCD_Clear
  3395 ;;		_LCD_ShowString
  3396 ;;		_sprintf
  3397 ;; This function is called by:
  3398 ;;		_kr_init
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           	psect	text3
  3403  00201A                     __ptext3:
  3404                           	opt callstack 0
  3405  00201A                     _Knight_rider_2000:
  3406                           	opt callstack 20
  3407  00201A                     
  3408                           ;Projekt.c: 661:     LCD_Clear();
  3409  00201A  ECA1  F018         	call	_LCD_Clear	;wreg free
  3410  00201E                     
  3411                           ;Projekt.c: 662:     TRISDbits.TRISD2 = 0;
  3412  00201E  9495               	bcf	149,2,c	;volatile
  3413  002020                     
  3414                           ;Projekt.c: 663:     TRISDbits.TRISD3 = 0;
  3415  002020  9695               	bcf	149,3,c	;volatile
  3416  002022                     
  3417                           ;Projekt.c: 664:     TRISCbits.TRISC4 = 0;
  3418  002022  9894               	bcf	148,4,c	;volatile
  3419  002024                     
  3420                           ;Projekt.c: 665:     TRISDbits.TRISD4 = 0;
  3421  002024  9895               	bcf	149,4,c	;volatile
  3422  002026                     
  3423                           ;Projekt.c: 666:     TRISDbits.TRISD5 = 0;
  3424  002026  9A95               	bcf	149,5,c	;volatile
  3425  002028                     
  3426                           ;Projekt.c: 667:     TRISDbits.TRISD6 = 0;
  3427  002028  9C95               	bcf	149,6,c	;volatile
  3428  00202A                     
  3429                           ;Projekt.c: 669:     LATDbits.LATD2 = 1;
  3430  00202A  848C               	bsf	140,2,c	;volatile
  3431  00202C                     
  3432                           ;Projekt.c: 670:     LATDbits.LATD3 = 1;
  3433  00202C  868C               	bsf	140,3,c	;volatile
  3434  00202E                     
  3435                           ;Projekt.c: 671:     LATCbits.LATC4 = 1;
  3436  00202E  888B               	bsf	139,4,c	;volatile
  3437  002030                     
  3438                           ;Projekt.c: 672:     LATDbits.LATD4 = 1;
  3439  002030  888C               	bsf	140,4,c	;volatile
  3440  002032                     
  3441                           ;Projekt.c: 673:     LATDbits.LATD5 = 1;
  3442  002032  8A8C               	bsf	140,5,c	;volatile
  3443  002034                     
  3444                           ;Projekt.c: 674:     LATDbits.LATD6 = 1;
  3445  002034  8C8C               	bsf	140,6,c	;volatile
  3446  002036                     
  3447                           ;Projekt.c: 677:     int i=0;
  3448  002036  0E00               	movlw	0
  3449  002038  0100               	movlb	0	; () banked
  3450  00203A  6F7F               	movwf	(Knight_rider_2000@i+1)& (0+255),b
  3451  00203C  0E00               	movlw	0
  3452  00203E  6F7E               	movwf	Knight_rider_2000@i& (0+255),b
  3453  002040                     
  3454                           ; BSR set to: 0
  3455                           ;Projekt.c: 678:     int j=5;
  3456  002040  0E00               	movlw	0
  3457  002042  6F81               	movwf	(Knight_rider_2000@j+1)& (0+255),b
  3458  002044  0E05               	movlw	5
  3459  002046  6F80               	movwf	Knight_rider_2000@j& (0+255),b
  3460  002048                     l5101:
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;Projekt.c: 679:     int r=0;
  3464  002048  0E00               	movlw	0
  3465  00204A  6F7D               	movwf	(Knight_rider_2000@r+1)& (0+255),b
  3466  00204C  0E00               	movlw	0
  3467  00204E  6F7C               	movwf	Knight_rider_2000@r& (0+255),b
  3468  002050                     
  3469                           ; BSR set to: 0
  3470                           ;Projekt.c: 681:         sprintf(nadpis1,"Knight Rider    ");
  3471  002050  0EEC               	movlw	low _nadpis1
  3472  002052  6F68               	movwf	sprintf@s& (0+255),b
  3473  002054  0E00               	movlw	high _nadpis1
  3474  002056  6F69               	movwf	(sprintf@s+1)& (0+255),b
  3475  002058  0EEF               	movlw	low STR_69
  3476  00205A  6F6A               	movwf	sprintf@fmt& (0+255),b
  3477  00205C  0EFD               	movlw	high STR_69
  3478  00205E  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  3479  002060  EC1B  F018         	call	_sprintf	;wreg free
  3480  002064                     
  3481                           ;Projekt.c: 682:         LCD_ShowString(1,nadpis1);
  3482  002064  0EEC               	movlw	low _nadpis1
  3483  002066  6E06               	movwf	LCD_ShowString@textData^0,c
  3484  002068  0E00               	movlw	high _nadpis1
  3485  00206A  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  3486  00206C  0E01               	movlw	1
  3487  00206E  EC3D  F017         	call	_LCD_ShowString
  3488  002072                     
  3489                           ;Projekt.c: 683:         sprintf(nadpis2,"On the way...   ");
  3490  002072  0EDB               	movlw	low _nadpis2
  3491  002074  0100               	movlb	0	; () banked
  3492  002076  6F68               	movwf	sprintf@s& (0+255),b
  3493  002078  0E00               	movlw	high _nadpis2
  3494  00207A  6F69               	movwf	(sprintf@s+1)& (0+255),b
  3495  00207C  0E11               	movlw	low STR_70
  3496  00207E  6F6A               	movwf	sprintf@fmt& (0+255),b
  3497  002080  0EFE               	movlw	high STR_70
  3498  002082  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  3499  002084  EC1B  F018         	call	_sprintf	;wreg free
  3500  002088                     
  3501                           ;Projekt.c: 684:         LCD_ShowString(2,nadpis2);
  3502  002088  0EDB               	movlw	low _nadpis2
  3503  00208A  6E06               	movwf	LCD_ShowString@textData^0,c
  3504  00208C  0E00               	movlw	high _nadpis2
  3505  00208E  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  3506  002090  0E02               	movlw	2
  3507  002092  EC3D  F017         	call	_LCD_ShowString
  3508                           
  3509                           ;Projekt.c: 685:         while(r<2){
  3510  002096  EFD4  F010         	goto	l5145
  3511  00209A                     l5111:
  3512                           
  3513                           ; BSR set to: 0
  3514  00209A  BF7F               	btfsc	(Knight_rider_2000@i+1)& (0+255),7,b
  3515  00209C  EF59  F010         	goto	u3341
  3516  0020A0  517F               	movf	(Knight_rider_2000@i+1)& (0+255),w,b
  3517  0020A2  E109               	bnz	u3340
  3518  0020A4  0E06               	movlw	6
  3519  0020A6  5D7E               	subwf	Knight_rider_2000@i& (0+255),w,b
  3520  0020A8  A0D8               	btfss	status,0,c
  3521  0020AA  EF59  F010         	goto	u3341
  3522  0020AE  EF5B  F010         	goto	u3340
  3523  0020B2                     u3341:
  3524  0020B2  EF6F  F010         	goto	l5129
  3525  0020B6                     u3340:
  3526  0020B6  EFCE  F010         	goto	l5141
  3527  0020BA                     l5115:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;Projekt.c: 689:                 LATDbits.LATD2 ^= 1;
  3531  0020BA  748C               	btg	140,2,c	;volatile
  3532                           
  3533                           ;Projekt.c: 690:                 break;
  3534  0020BC  EF95  F010         	goto	l371
  3535  0020C0                     l5117:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;Projekt.c: 692:                 LATDbits.LATD3 ^= 1;
  3539  0020C0  768C               	btg	140,3,c	;volatile
  3540                           
  3541                           ;Projekt.c: 693:                 break;
  3542  0020C2  EF95  F010         	goto	l371
  3543  0020C6                     l5119:
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;Projekt.c: 695:                 LATCbits.LATC4 ^= 1;
  3547  0020C6  788B               	btg	139,4,c	;volatile
  3548                           
  3549                           ;Projekt.c: 696:                 break;
  3550  0020C8  EF95  F010         	goto	l371
  3551  0020CC                     l5121:
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;Projekt.c: 698:                 LATDbits.LATD4 ^= 1;
  3555  0020CC  788C               	btg	140,4,c	;volatile
  3556                           
  3557                           ;Projekt.c: 699:                 break;
  3558  0020CE  EF95  F010         	goto	l371
  3559  0020D2                     l5123:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;Projekt.c: 701:                 LATDbits.LATD5 ^= 1;
  3563  0020D2  7A8C               	btg	140,5,c	;volatile
  3564                           
  3565                           ;Projekt.c: 702:                 break;
  3566  0020D4  EF95  F010         	goto	l371
  3567  0020D8                     l5125:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;Projekt.c: 704:                 LATDbits.LATD6 ^= 1;
  3571  0020D8  7C8C               	btg	140,6,c	;volatile
  3572                           
  3573                           ;Projekt.c: 705:                 break;
  3574  0020DA  EF95  F010         	goto	l371
  3575  0020DE                     l5129:
  3576                           
  3577                           ; BSR set to: 0
  3578  0020DE  C07E  F07A         	movff	Knight_rider_2000@i,??_Knight_rider_2000
  3579  0020E2  C07F  F07B         	movff	Knight_rider_2000@i+1,??_Knight_rider_2000+1
  3580                           
  3581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3582                           ; Switch size 1, requested type "simple"
  3583                           ; Number of cases is 1, Range of values is 0 to 0
  3584                           ; switch strategies available:
  3585                           ; Name         Instructions Cycles
  3586                           ; simple_byte            4     3 (average)
  3587                           ;	Chosen strategy is simple_byte
  3588  0020E6  517B               	movf	(??_Knight_rider_2000+1)& (0+255),w,b
  3589  0020E8  0A00               	xorlw	0	; case 0
  3590  0020EA  B4D8               	btfsc	status,2,c
  3591  0020EC  EF7A  F010         	goto	l6375
  3592  0020F0  EF95  F010         	goto	l371
  3593  0020F4                     l6375:
  3594                           
  3595                           ; BSR set to: 0
  3596                           ; Switch size 1, requested type "simple"
  3597                           ; Number of cases is 6, Range of values is 0 to 5
  3598                           ; switch strategies available:
  3599                           ; Name         Instructions Cycles
  3600                           ; simple_byte           19    10 (average)
  3601                           ;	Chosen strategy is simple_byte
  3602  0020F4  517A               	movf	??_Knight_rider_2000& (0+255),w,b
  3603  0020F6  0A00               	xorlw	0	; case 0
  3604  0020F8  B4D8               	btfsc	status,2,c
  3605  0020FA  EF5D  F010         	goto	l5115
  3606  0020FE  0A01               	xorlw	1	; case 1
  3607  002100  B4D8               	btfsc	status,2,c
  3608  002102  EF60  F010         	goto	l5117
  3609  002106  0A03               	xorlw	3	; case 2
  3610  002108  B4D8               	btfsc	status,2,c
  3611  00210A  EF63  F010         	goto	l5119
  3612  00210E  0A01               	xorlw	1	; case 3
  3613  002110  B4D8               	btfsc	status,2,c
  3614  002112  EF66  F010         	goto	l5121
  3615  002116  0A07               	xorlw	7	; case 4
  3616  002118  B4D8               	btfsc	status,2,c
  3617  00211A  EF69  F010         	goto	l5123
  3618  00211E  0A01               	xorlw	1	; case 5
  3619  002120  B4D8               	btfsc	status,2,c
  3620  002122  EF6C  F010         	goto	l5125
  3621  002126  EF95  F010         	goto	l371
  3622  00212A                     l371:
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;Projekt.c: 707:          if (PORTAbits.RA2){
  3626  00212A  A480               	btfss	128,2,c	;volatile
  3627  00212C  EF9A  F010         	goto	u3351
  3628  002130  EF9C  F010         	goto	u3350
  3629  002134                     u3351:
  3630  002134  EFB1  F010         	goto	l5137
  3631  002138                     u3350:
  3632  002138                     
  3633                           ; BSR set to: 0
  3634                           ;Projekt.c: 708:          LATDbits.LATD2 = 0;
  3635  002138  948C               	bcf	140,2,c	;volatile
  3636                           
  3637                           ;Projekt.c: 709:          LATDbits.LATD3 = 0;
  3638  00213A  968C               	bcf	140,3,c	;volatile
  3639                           
  3640                           ;Projekt.c: 710:          LATCbits.LATC4 = 0;
  3641  00213C  988B               	bcf	139,4,c	;volatile
  3642                           
  3643                           ;Projekt.c: 711:          LATDbits.LATD4 = 0;
  3644  00213E  988C               	bcf	140,4,c	;volatile
  3645                           
  3646                           ;Projekt.c: 712:          LATDbits.LATD5 = 0;
  3647  002140  9A8C               	bcf	140,5,c	;volatile
  3648                           
  3649                           ;Projekt.c: 713:          LATDbits.LATD6 = 0;
  3650  002142  9C8C               	bcf	140,6,c	;volatile
  3651  002144                     l5133:
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;Projekt.c: 714:          _delay((unsigned long)((200)*(32E6/4000.0)));
  3655  002144  0E09               	movlw	9
  3656  002146  0100               	movlb	0	; () banked
  3657  002148  6F7B               	movwf	(??_Knight_rider_2000+1)& (0+255),b
  3658  00214A  0E1E               	movlw	30
  3659  00214C  6F7A               	movwf	??_Knight_rider_2000& (0+255),b
  3660  00214E  0EE4               	movlw	228
  3661  002150                     u4227:
  3662  002150  2EE8               	decfsz	wreg,f,c
  3663  002152  D7FE               	bra	u4227
  3664  002154  2F7A               	decfsz	??_Knight_rider_2000& (0+255),f,b
  3665  002156  D7FC               	bra	u4227
  3666  002158  2F7B               	decfsz	(??_Knight_rider_2000+1)& (0+255),f,b
  3667  00215A  D7FA               	bra	u4227
  3668  00215C  F000               	nop	
  3669  00215E  EF66  F011         	goto	l378
  3670  002162                     l5137:
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;Projekt.c: 717:         _delay((unsigned long)((50)*(32E6/4000.0)));
  3674  002162  0E03               	movlw	3
  3675  002164  0100               	movlb	0	; () banked
  3676  002166  6F7B               	movwf	(??_Knight_rider_2000+1)& (0+255),b
  3677  002168  0E08               	movlw	8
  3678  00216A  6F7A               	movwf	??_Knight_rider_2000& (0+255),b
  3679  00216C  0E77               	movlw	119
  3680  00216E                     u4237:
  3681  00216E  2EE8               	decfsz	wreg,f,c
  3682  002170  D7FE               	bra	u4237
  3683  002172  2F7A               	decfsz	??_Knight_rider_2000& (0+255),f,b
  3684  002174  D7FC               	bra	u4237
  3685  002176  2F7B               	decfsz	(??_Knight_rider_2000+1)& (0+255),f,b
  3686  002178  D7FA               	bra	u4237
  3687  00217A                     
  3688                           ;Projekt.c: 719:        }
  3689  00217A  0100               	movlb	0	; () banked
  3690  00217C  4B7E               	infsnz	Knight_rider_2000@i& (0+255),f,b
  3691  00217E  2B7F               	incf	(Knight_rider_2000@i+1)& (0+255),f,b
  3692  002180  BF7F               	btfsc	(Knight_rider_2000@i+1)& (0+255),7,b
  3693  002182  EFCC  F010         	goto	u3361
  3694  002186  517F               	movf	(Knight_rider_2000@i+1)& (0+255),w,b
  3695  002188  E109               	bnz	u3360
  3696  00218A  0E06               	movlw	6
  3697  00218C  5D7E               	subwf	Knight_rider_2000@i& (0+255),w,b
  3698  00218E  A0D8               	btfss	status,0,c
  3699  002190  EFCC  F010         	goto	u3361
  3700  002194  EFCE  F010         	goto	u3360
  3701  002198                     u3361:
  3702  002198  EF6F  F010         	goto	l5129
  3703  00219C                     u3360:
  3704  00219C                     l5141:
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;Projekt.c: 720:          r++;
  3708  00219C  4B7C               	infsnz	Knight_rider_2000@r& (0+255),f,b
  3709  00219E  2B7D               	incf	(Knight_rider_2000@r+1)& (0+255),f,b
  3710  0021A0                     
  3711                           ; BSR set to: 0
  3712                           ;Projekt.c: 721:          i=0;
  3713  0021A0  0E00               	movlw	0
  3714  0021A2  6F7F               	movwf	(Knight_rider_2000@i+1)& (0+255),b
  3715  0021A4  0E00               	movlw	0
  3716  0021A6  6F7E               	movwf	Knight_rider_2000@i& (0+255),b
  3717  0021A8                     l5145:
  3718                           
  3719                           ;Projekt.c: 685:         while(r<2){
  3720  0021A8  0100               	movlb	0	; () banked
  3721  0021AA  BF7D               	btfsc	(Knight_rider_2000@r+1)& (0+255),7,b
  3722  0021AC  EFE1  F010         	goto	u3371
  3723  0021B0  517D               	movf	(Knight_rider_2000@r+1)& (0+255),w,b
  3724  0021B2  E109               	bnz	u3370
  3725  0021B4  0E02               	movlw	2
  3726  0021B6  5D7C               	subwf	Knight_rider_2000@r& (0+255),w,b
  3727  0021B8  A0D8               	btfss	status,0,c
  3728  0021BA  EFE1  F010         	goto	u3371
  3729  0021BE  EFE3  F010         	goto	u3370
  3730  0021C2                     u3371:
  3731  0021C2  EF4D  F010         	goto	l5111
  3732  0021C6                     u3370:
  3733  0021C6                     
  3734                           ; BSR set to: 0
  3735                           ;Projekt.c: 723:         r=0;
  3736  0021C6  0E00               	movlw	0
  3737  0021C8  6F7D               	movwf	(Knight_rider_2000@r+1)& (0+255),b
  3738  0021CA  0E00               	movlw	0
  3739  0021CC  6F7C               	movwf	Knight_rider_2000@r& (0+255),b
  3740                           
  3741                           ;Projekt.c: 724:         while(r<2){
  3742  0021CE  EF56  F011         	goto	l5183
  3743  0021D2                     l5149:
  3744                           
  3745                           ; BSR set to: 0
  3746  0021D2  BF81               	btfsc	(Knight_rider_2000@j+1)& (0+255),7,b
  3747  0021D4  EFF0  F010         	goto	u3380
  3748  0021D8  EFEE  F010         	goto	u3381
  3749  0021DC                     u3381:
  3750  0021DC  EF04  F011         	goto	l5167
  3751  0021E0                     u3380:
  3752  0021E0  EF50  F011         	goto	l5179
  3753  0021E4                     l5153:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;Projekt.c: 728:                 LATDbits.LATD2 ^= 1;
  3757  0021E4  748C               	btg	140,2,c	;volatile
  3758                           
  3759                           ;Projekt.c: 729:                 break;
  3760  0021E6  EF2A  F011         	goto	l386
  3761  0021EA                     l5155:
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;Projekt.c: 731:                 LATDbits.LATD3 ^= 1;
  3765  0021EA  768C               	btg	140,3,c	;volatile
  3766                           
  3767                           ;Projekt.c: 732:                 break;
  3768  0021EC  EF2A  F011         	goto	l386
  3769  0021F0                     l5157:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;Projekt.c: 734:                 LATCbits.LATC4 ^= 1;
  3773  0021F0  788B               	btg	139,4,c	;volatile
  3774                           
  3775                           ;Projekt.c: 735:                 break;
  3776  0021F2  EF2A  F011         	goto	l386
  3777  0021F6                     l5159:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;Projekt.c: 737:                 LATDbits.LATD4 ^= 1;
  3781  0021F6  788C               	btg	140,4,c	;volatile
  3782                           
  3783                           ;Projekt.c: 738:                 break;
  3784  0021F8  EF2A  F011         	goto	l386
  3785  0021FC                     l5161:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;Projekt.c: 740:                 LATDbits.LATD5 ^= 1;
  3789  0021FC  7A8C               	btg	140,5,c	;volatile
  3790                           
  3791                           ;Projekt.c: 741:                 break;
  3792  0021FE  EF2A  F011         	goto	l386
  3793  002202                     l5163:
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;Projekt.c: 743:                 LATDbits.LATD6 ^= 1;
  3797  002202  7C8C               	btg	140,6,c	;volatile
  3798                           
  3799                           ;Projekt.c: 744:                 break;
  3800  002204  EF2A  F011         	goto	l386
  3801  002208                     l5167:
  3802                           
  3803                           ; BSR set to: 0
  3804  002208  C080  F07A         	movff	Knight_rider_2000@j,??_Knight_rider_2000
  3805  00220C  C081  F07B         	movff	Knight_rider_2000@j+1,??_Knight_rider_2000+1
  3806                           
  3807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3808                           ; Switch size 1, requested type "simple"
  3809                           ; Number of cases is 1, Range of values is 0 to 0
  3810                           ; switch strategies available:
  3811                           ; Name         Instructions Cycles
  3812                           ; simple_byte            4     3 (average)
  3813                           ;	Chosen strategy is simple_byte
  3814  002210  517B               	movf	(??_Knight_rider_2000+1)& (0+255),w,b
  3815  002212  0A00               	xorlw	0	; case 0
  3816  002214  B4D8               	btfsc	status,2,c
  3817  002216  EF0F  F011         	goto	l6377
  3818  00221A  EF2A  F011         	goto	l386
  3819  00221E                     l6377:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ; Switch size 1, requested type "simple"
  3823                           ; Number of cases is 6, Range of values is 0 to 5
  3824                           ; switch strategies available:
  3825                           ; Name         Instructions Cycles
  3826                           ; simple_byte           19    10 (average)
  3827                           ;	Chosen strategy is simple_byte
  3828  00221E  517A               	movf	??_Knight_rider_2000& (0+255),w,b
  3829  002220  0A00               	xorlw	0	; case 0
  3830  002222  B4D8               	btfsc	status,2,c
  3831  002224  EFF2  F010         	goto	l5153
  3832  002228  0A01               	xorlw	1	; case 1
  3833  00222A  B4D8               	btfsc	status,2,c
  3834  00222C  EFF5  F010         	goto	l5155
  3835  002230  0A03               	xorlw	3	; case 2
  3836  002232  B4D8               	btfsc	status,2,c
  3837  002234  EFF8  F010         	goto	l5157
  3838  002238  0A01               	xorlw	1	; case 3
  3839  00223A  B4D8               	btfsc	status,2,c
  3840  00223C  EFFB  F010         	goto	l5159
  3841  002240  0A07               	xorlw	7	; case 4
  3842  002242  B4D8               	btfsc	status,2,c
  3843  002244  EFFE  F010         	goto	l5161
  3844  002248  0A01               	xorlw	1	; case 5
  3845  00224A  B4D8               	btfsc	status,2,c
  3846  00224C  EF01  F011         	goto	l5163
  3847  002250  EF2A  F011         	goto	l386
  3848  002254                     l386:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;Projekt.c: 746:          if (PORTAbits.RA2){
  3852  002254  A480               	btfss	128,2,c	;volatile
  3853  002256  EF2F  F011         	goto	u3391
  3854  00225A  EF31  F011         	goto	u3390
  3855  00225E                     u3391:
  3856  00225E  EF39  F011         	goto	l5175
  3857  002262                     u3390:
  3858  002262                     
  3859                           ; BSR set to: 0
  3860                           ;Projekt.c: 747:          LATDbits.LATD2 = 0;
  3861  002262  948C               	bcf	140,2,c	;volatile
  3862                           
  3863                           ;Projekt.c: 748:          LATDbits.LATD3 = 0;
  3864  002264  968C               	bcf	140,3,c	;volatile
  3865                           
  3866                           ;Projekt.c: 749:          LATCbits.LATC4 = 0;
  3867  002266  988B               	bcf	139,4,c	;volatile
  3868                           
  3869                           ;Projekt.c: 750:          LATDbits.LATD4 = 0;
  3870  002268  988C               	bcf	140,4,c	;volatile
  3871                           
  3872                           ;Projekt.c: 751:          LATDbits.LATD5 = 0;
  3873  00226A  9A8C               	bcf	140,5,c	;volatile
  3874                           
  3875                           ;Projekt.c: 752:          LATDbits.LATD6 = 0;
  3876  00226C  9C8C               	bcf	140,6,c	;volatile
  3877  00226E  EFA2  F010         	goto	l5133
  3878  002272                     l5175:
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;Projekt.c: 756:         _delay((unsigned long)((50)*(32E6/4000.0)));
  3882  002272  0E03               	movlw	3
  3883  002274  0100               	movlb	0	; () banked
  3884  002276  6F7B               	movwf	(??_Knight_rider_2000+1)& (0+255),b
  3885  002278  0E08               	movlw	8
  3886  00227A  6F7A               	movwf	??_Knight_rider_2000& (0+255),b
  3887  00227C  0E77               	movlw	119
  3888  00227E                     u4247:
  3889  00227E  2EE8               	decfsz	wreg,f,c
  3890  002280  D7FE               	bra	u4247
  3891  002282  2F7A               	decfsz	??_Knight_rider_2000& (0+255),f,b
  3892  002284  D7FC               	bra	u4247
  3893  002286  2F7B               	decfsz	(??_Knight_rider_2000+1)& (0+255),f,b
  3894  002288  D7FA               	bra	u4247
  3895  00228A                     
  3896                           ;Projekt.c: 757:         }
  3897  00228A  0100               	movlb	0	; () banked
  3898  00228C  0780               	decf	Knight_rider_2000@j& (0+255),f,b
  3899  00228E  A0D8               	btfss	status,0,c
  3900  002290  0781               	decf	(Knight_rider_2000@j+1)& (0+255),f,b
  3901  002292  BF81               	btfsc	(Knight_rider_2000@j+1)& (0+255),7,b
  3902  002294  EF50  F011         	goto	u3400
  3903  002298  EF4E  F011         	goto	u3401
  3904  00229C                     u3401:
  3905  00229C  EF04  F011         	goto	l5167
  3906  0022A0                     u3400:
  3907  0022A0                     l5179:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;Projekt.c: 758:       j=5;
  3911  0022A0  0E00               	movlw	0
  3912  0022A2  6F81               	movwf	(Knight_rider_2000@j+1)& (0+255),b
  3913  0022A4  0E05               	movlw	5
  3914  0022A6  6F80               	movwf	Knight_rider_2000@j& (0+255),b
  3915  0022A8                     
  3916                           ; BSR set to: 0
  3917                           ;Projekt.c: 759:        r++;
  3918  0022A8  4B7C               	infsnz	Knight_rider_2000@r& (0+255),f,b
  3919  0022AA  2B7D               	incf	(Knight_rider_2000@r+1)& (0+255),f,b
  3920  0022AC                     l5183:
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;Projekt.c: 724:         while(r<2){
  3924  0022AC  BF7D               	btfsc	(Knight_rider_2000@r+1)& (0+255),7,b
  3925  0022AE  EF62  F011         	goto	u3411
  3926  0022B2  517D               	movf	(Knight_rider_2000@r+1)& (0+255),w,b
  3927  0022B4  E109               	bnz	u3410
  3928  0022B6  0E02               	movlw	2
  3929  0022B8  5D7C               	subwf	Knight_rider_2000@r& (0+255),w,b
  3930  0022BA  A0D8               	btfss	status,0,c
  3931  0022BC  EF62  F011         	goto	u3411
  3932  0022C0  EF64  F011         	goto	u3410
  3933  0022C4                     u3411:
  3934  0022C4  EFE9  F010         	goto	l5149
  3935  0022C8                     u3410:
  3936  0022C8  EF24  F010         	goto	l5101
  3937  0022CC                     l378:
  3938  0022CC  0012               	return		;funcret
  3939  0022CE                     __end_of_Knight_rider_2000:
  3940                           	opt callstack 0
  3941                           
  3942 ;; *************** function _init *****************
  3943 ;; Defined at:
  3944 ;;		line 66 in file "Projekt.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;Total ram usage:        0 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    3
  3965 ;; This function calls:
  3966 ;;		_LCD_Init
  3967 ;; This function is called by:
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text4
  3973  003256                     __ptext4:
  3974                           	opt callstack 0
  3975  003256                     _init:
  3976                           	opt callstack 27
  3977  003256                     
  3978                           ;Projekt.c: 67:       LCD_Init();
  3979  003256  ECA3  F015         	call	_LCD_Init	;wreg free
  3980  00325A                     
  3981                           ;Projekt.c: 69:       TRISCbits.RC0 = 1;
  3982  00325A  8094               	bsf	148,0,c	;volatile
  3983  00325C                     
  3984                           ;Projekt.c: 70:       TRISAbits.RA2 = 1;
  3985  00325C  8492               	bsf	146,2,c	;volatile
  3986  00325E                     
  3987                           ;Projekt.c: 71:       TRISAbits.RA3 = 1;
  3988  00325E  8692               	bsf	146,3,c	;volatile
  3989  003260                     
  3990                           ;Projekt.c: 72:       TRISAbits.RA4 = 1;
  3991  003260  8892               	bsf	146,4,c	;volatile
  3992  003262                     
  3993                           ;Projekt.c: 73:       ANSELA = 0;
  3994  003262  0E00               	movlw	0
  3995  003264  010F               	movlb	15	; () banked
  3996  003266  6F38               	movwf	56,b	;volatile
  3997  003268                     
  3998                           ; BSR set to: 15
  3999  003268  0012               	return		;funcret
  4000  00326A                     __end_of_init:
  4001                           	opt callstack 0
  4002                           
  4003 ;; *************** function _LCD_Init *****************
  4004 ;; Defined at:
  4005 ;;		line 7 in file "lcd.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;Total ram usage:        1 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:    2
  4026 ;; This function calls:
  4027 ;;		_LCD_Send
  4028 ;; This function is called by:
  4029 ;;		_init
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text5
  4034  002B46                     __ptext5:
  4035                           	opt callstack 0
  4036  002B46                     _LCD_Init:
  4037                           	opt callstack 27
  4038  002B46                     
  4039                           ;lcd.c: 9:     ANSELDbits.ANSD0 = 0;
  4040  002B46  010F               	movlb	15	; () banked
  4041  002B48  913B               	bcf	59,0,b	;volatile
  4042                           
  4043                           ;lcd.c: 10:     ANSELDbits.ANSD1 = 0;
  4044  002B4A  933B               	bcf	59,1,b	;volatile
  4045                           
  4046                           ;lcd.c: 12:     TRISDbits.TRISD0 = 1;
  4047  002B4C  8095               	bsf	149,0,c	;volatile
  4048                           
  4049                           ;lcd.c: 13:     TRISDbits.TRISD1 = 1;
  4050  002B4E  8295               	bsf	149,1,c	;volatile
  4051                           
  4052                           ;lcd.c: 14:     TRISAbits.TRISA0 = 0;
  4053  002B50  9092               	bcf	146,0,c	;volatile
  4054                           
  4055                           ;lcd.c: 15:     LATAbits.LATA0 = 1;
  4056  002B52  8089               	bsf	137,0,c	;volatile
  4057  002B54                     
  4058                           ; BSR set to: 15
  4059                           ;lcd.c: 18:     SSP2CON1bits.SSPM = 0b1000;
  4060  002B54  506C               	movf	108,w,c	;volatile
  4061  002B56  0BF0               	andlw	-16
  4062  002B58  0908               	iorlw	8
  4063  002B5A  6E6C               	movwf	108,c	;volatile
  4064                           
  4065                           ;lcd.c: 19:     SSP2ADD = 19;
  4066  002B5C  0E13               	movlw	19
  4067  002B5E  6E6E               	movwf	110,c	;volatile
  4068  002B60                     
  4069                           ; BSR set to: 15
  4070                           ;lcd.c: 20:     SSP2CON1bits.SSPEN = 1;
  4071  002B60  8A6C               	bsf	108,5,c	;volatile
  4072  002B62                     
  4073                           ; BSR set to: 15
  4074                           ;lcd.c: 22:     _delay((unsigned long)((5)*(32E6/4000.0)));
  4075  002B62  0E34               	movlw	52
  4076  002B64  6E06               	movwf	??_LCD_Init^0,c
  4077  002B66  0EF2               	movlw	242
  4078  002B68                     u4257:
  4079  002B68  2EE8               	decfsz	wreg,f,c
  4080  002B6A  D7FE               	bra	u4257
  4081  002B6C  2E06               	decfsz	??_LCD_Init^0,f,c
  4082  002B6E  D7FC               	bra	u4257
  4083  002B70                     
  4084                           ;lcd.c: 24:     SSP2CON2bits.SEN = 1;
  4085  002B70  806B               	bsf	107,0,c	;volatile
  4086  002B72                     l27:
  4087  002B72  B06B               	btfsc	107,0,c	;volatile
  4088  002B74  EFBE  F015         	goto	u2001
  4089  002B78  EFC0  F015         	goto	u2000
  4090  002B7C                     u2001:
  4091  002B7C  EFB9  F015         	goto	l27
  4092  002B80                     u2000:
  4093  002B80                     
  4094                           ;lcd.c: 26:     SSP2IF = 0;
  4095  002B80  9EA4               	bcf	4004,7,c	;volatile
  4096  002B82                     
  4097                           ;lcd.c: 31:     LCD_Send(0x7C);
  4098  002B82  0E7C               	movlw	124
  4099  002B84  ECFE  F018         	call	_LCD_Send
  4100                           
  4101                           ;lcd.c: 32:     LCD_Send(0x80);
  4102  002B88  0E80               	movlw	128
  4103  002B8A  ECFE  F018         	call	_LCD_Send
  4104                           
  4105                           ;lcd.c: 33:     LCD_Send(0x38);
  4106  002B8E  0E38               	movlw	56
  4107  002B90  ECFE  F018         	call	_LCD_Send
  4108                           
  4109                           ;lcd.c: 34:     LCD_Send(0x80);
  4110  002B94  0E80               	movlw	128
  4111  002B96  ECFE  F018         	call	_LCD_Send
  4112                           
  4113                           ;lcd.c: 35:     LCD_Send(0x39);
  4114  002B9A  0E39               	movlw	57
  4115  002B9C  ECFE  F018         	call	_LCD_Send
  4116                           
  4117                           ;lcd.c: 36:     LCD_Send(0x80);
  4118  002BA0  0E80               	movlw	128
  4119  002BA2  ECFE  F018         	call	_LCD_Send
  4120                           
  4121                           ;lcd.c: 37:     LCD_Send(0x17);
  4122  002BA6  0E17               	movlw	23
  4123  002BA8  ECFE  F018         	call	_LCD_Send
  4124                           
  4125                           ;lcd.c: 38:     LCD_Send(0x80);
  4126  002BAC  0E80               	movlw	128
  4127  002BAE  ECFE  F018         	call	_LCD_Send
  4128                           
  4129                           ;lcd.c: 39:     LCD_Send(0x7A);
  4130  002BB2  0E7A               	movlw	122
  4131  002BB4  ECFE  F018         	call	_LCD_Send
  4132                           
  4133                           ;lcd.c: 40:     LCD_Send(0x80);
  4134  002BB8  0E80               	movlw	128
  4135  002BBA  ECFE  F018         	call	_LCD_Send
  4136                           
  4137                           ;lcd.c: 41:     LCD_Send(0x5E);
  4138  002BBE  0E5E               	movlw	94
  4139  002BC0  ECFE  F018         	call	_LCD_Send
  4140                           
  4141                           ;lcd.c: 42:     LCD_Send(0x80);
  4142  002BC4  0E80               	movlw	128
  4143  002BC6  ECFE  F018         	call	_LCD_Send
  4144                           
  4145                           ;lcd.c: 43:     LCD_Send(0x6B);
  4146  002BCA  0E6B               	movlw	107
  4147  002BCC  ECFE  F018         	call	_LCD_Send
  4148                           
  4149                           ;lcd.c: 44:     LCD_Send(0x80);
  4150  002BD0  0E80               	movlw	128
  4151  002BD2  ECFE  F018         	call	_LCD_Send
  4152                           
  4153                           ;lcd.c: 45:     LCD_Send(0x0C);
  4154  002BD6  0E0C               	movlw	12
  4155  002BD8  ECFE  F018         	call	_LCD_Send
  4156                           
  4157                           ;lcd.c: 46:     LCD_Send(0x80);
  4158  002BDC  0E80               	movlw	128
  4159  002BDE  ECFE  F018         	call	_LCD_Send
  4160                           
  4161                           ;lcd.c: 47:     LCD_Send(0x01);
  4162  002BE2  0E01               	movlw	1
  4163  002BE4  ECFE  F018         	call	_LCD_Send
  4164                           
  4165                           ;lcd.c: 48:     LCD_Send(0x80);
  4166  002BE8  0E80               	movlw	128
  4167  002BEA  ECFE  F018         	call	_LCD_Send
  4168                           
  4169                           ;lcd.c: 49:     LCD_Send(0x06);
  4170  002BEE  0E06               	movlw	6
  4171  002BF0  ECFE  F018         	call	_LCD_Send
  4172                           
  4173                           ;lcd.c: 50:     LCD_Send(0x80);
  4174  002BF4  0E80               	movlw	128
  4175  002BF6  ECFE  F018         	call	_LCD_Send
  4176                           
  4177                           ;lcd.c: 51:     LCD_Send(0x02);
  4178  002BFA  0E02               	movlw	2
  4179  002BFC  ECFE  F018         	call	_LCD_Send
  4180  002C00                     
  4181                           ;lcd.c: 53:     SSP2CON2bits.PEN = 1;
  4182  002C00  846B               	bsf	107,2,c	;volatile
  4183  002C02                     l30:
  4184  002C02  B46B               	btfsc	107,2,c	;volatile
  4185  002C04  EF06  F016         	goto	u2011
  4186  002C08  EF08  F016         	goto	u2010
  4187  002C0C                     u2011:
  4188  002C0C  EF01  F016         	goto	l30
  4189  002C10                     u2010:
  4190  002C10                     
  4191                           ;lcd.c: 56:     _delay((unsigned long)((5)*(32E6/4000.0)));
  4192  002C10  0E34               	movlw	52
  4193  002C12  6E06               	movwf	??_LCD_Init^0,c
  4194  002C14  0EF2               	movlw	242
  4195  002C16                     u4267:
  4196  002C16  2EE8               	decfsz	wreg,f,c
  4197  002C18  D7FE               	bra	u4267
  4198  002C1A  2E06               	decfsz	??_LCD_Init^0,f,c
  4199  002C1C  D7FC               	bra	u4267
  4200  002C1E  0012               	return		;funcret
  4201  002C20                     __end_of_LCD_Init:
  4202                           	opt callstack 0
  4203                           
  4204 ;; *************** function _Pong *****************
  4205 ;; Defined at:
  4206 ;;		line 865 in file "Projekt.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;		None
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;  micek          17   85[BANK0 ] unsigned char [17]
  4211 ;;  zivoty         17   62[BANK0 ] unsigned char [17]
  4212 ;;  vitez          17   45[BANK0 ] unsigned char [17]
  4213 ;;  gameover       17   28[BANK0 ] unsigned char [17]
  4214 ;;  z               2  110[BANK0 ] int 
  4215 ;;  j               2  108[BANK0 ] int 
  4216 ;;  i               2  106[BANK0 ] int 
  4217 ;;  r               2  104[BANK0 ] int 
  4218 ;;  t               2  102[BANK0 ] int 
  4219 ;;  n               2   83[BANK0 ] int 
  4220 ;;  P2              2   81[BANK0 ] int 
  4221 ;;  P1              2   79[BANK0 ] int 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Locals:         0      84       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Totals:         0      86       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;Total ram usage:       86 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    9
  4238 ;; This function calls:
  4239 ;;		_LCD_Clear
  4240 ;;		_LCD_ShowString
  4241 ;;		_Pong_init
  4242 ;;		_sprintf
  4243 ;; This function is called by:
  4244 ;;		_main
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text6
  4249  00008E                     __ptext6:
  4250                           	opt callstack 0
  4251  00008E                     _Pong:
  4252                           	opt callstack 21
  4253  00008E                     
  4254                           ;Projekt.c: 866:     Pong_init();
  4255  00008E  EC35  F019         	call	_Pong_init	;wreg free
  4256  000092                     
  4257                           ;Projekt.c: 867:     LCD_Clear();
  4258  000092  ECA1  F018         	call	_LCD_Clear	;wreg free
  4259  000096                     
  4260                           ;Projekt.c: 869:     int P1=3;
  4261  000096  0E00               	movlw	0
  4262  000098  0100               	movlb	0	; () banked
  4263  00009A  6FB0               	movwf	(Pong@P1+1)& (0+255),b
  4264  00009C  0E03               	movlw	3
  4265  00009E  6FAF               	movwf	Pong@P1& (0+255),b
  4266  0000A0                     
  4267                           ; BSR set to: 0
  4268                           ;Projekt.c: 870:     int P2=3;
  4269  0000A0  0E00               	movlw	0
  4270  0000A2  6FB2               	movwf	(Pong@P2+1)& (0+255),b
  4271  0000A4  0E03               	movlw	3
  4272  0000A6  6FB1               	movwf	Pong@P2& (0+255),b
  4273  0000A8                     
  4274                           ; BSR set to: 0
  4275                           ;Projekt.c: 871:     int i=1;
  4276  0000A8  0E00               	movlw	0
  4277  0000AA  6FCB               	movwf	(Pong@i+1)& (0+255),b
  4278  0000AC  0E01               	movlw	1
  4279  0000AE  6FCA               	movwf	Pong@i& (0+255),b
  4280  0000B0                     
  4281                           ; BSR set to: 0
  4282                           ;Projekt.c: 872:     int j=14;
  4283  0000B0  0E00               	movlw	0
  4284  0000B2  6FCD               	movwf	(Pong@j+1)& (0+255),b
  4285  0000B4  0E0E               	movlw	14
  4286  0000B6  6FCC               	movwf	Pong@j& (0+255),b
  4287  0000B8                     
  4288                           ; BSR set to: 0
  4289                           ;Projekt.c: 873:     char micek[17];;Projekt.c: 874:     char zivoty[17];;Projekt.c: 875
      +                          :     char gameover[17];;Projekt.c: 876:     char vitez[17];;Projekt.c: 877:     int n=0
      +                          ;
  4290  0000B8  0E00               	movlw	0
  4291  0000BA  6FB4               	movwf	(Pong@n+1)& (0+255),b
  4292  0000BC  0E00               	movlw	0
  4293  0000BE  6FB3               	movwf	Pong@n& (0+255),b
  4294  0000C0                     
  4295                           ; BSR set to: 0
  4296                           ;Projekt.c: 878:     int r=0;
  4297  0000C0  0E00               	movlw	0
  4298  0000C2  6FC9               	movwf	(Pong@r+1)& (0+255),b
  4299  0000C4  0E00               	movlw	0
  4300  0000C6  6FC8               	movwf	Pong@r& (0+255),b
  4301  0000C8                     
  4302                           ; BSR set to: 0
  4303                           ;Projekt.c: 879:     int z=20;
  4304  0000C8  0E00               	movlw	0
  4305  0000CA  6FCF               	movwf	(Pong@z+1)& (0+255),b
  4306  0000CC  0E14               	movlw	20
  4307  0000CE  6FCE               	movwf	Pong@z& (0+255),b
  4308  0000D0                     
  4309                           ; BSR set to: 0
  4310                           ;Projekt.c: 880:     int t=20;
  4311  0000D0  0E00               	movlw	0
  4312  0000D2  6FC7               	movwf	(Pong@t+1)& (0+255),b
  4313  0000D4  0E14               	movlw	20
  4314  0000D6  6FC6               	movwf	Pong@t& (0+255),b
  4315  0000D8                     l5643:
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;Projekt.c: 884:         if (n==0){
  4319  0000D8  51B3               	movf	Pong@n& (0+255),w,b
  4320  0000DA  11B4               	iorwf	(Pong@n+1)& (0+255),w,b
  4321  0000DC  A4D8               	btfss	status,2,c
  4322  0000DE  EF73  F000         	goto	u3891
  4323  0000E2  EF75  F000         	goto	u3890
  4324  0000E6                     u3891:
  4325  0000E6  EF86  F000         	goto	l5649
  4326  0000EA                     u3890:
  4327  0000EA                     
  4328                           ; BSR set to: 0
  4329                           ;Projekt.c: 885:          sprintf(zivoty,"P1 ***    *** P2");
  4330  0000EA  0E9E               	movlw	low Pong@zivoty
  4331  0000EC  6F68               	movwf	sprintf@s& (0+255),b
  4332  0000EE  0E00               	movlw	high Pong@zivoty
  4333  0000F0  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4334  0000F2  0E88               	movlw	low STR_90
  4335  0000F4  6F6A               	movwf	sprintf@fmt& (0+255),b
  4336  0000F6  0EFE               	movlw	high STR_90
  4337  0000F8  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4338  0000FA  EC1B  F018         	call	_sprintf	;wreg free
  4339  0000FE                     
  4340                           ;Projekt.c: 886:          LCD_ShowString(1, zivoty);
  4341  0000FE  0E9E               	movlw	low Pong@zivoty
  4342  000100  6E06               	movwf	LCD_ShowString@textData^0,c
  4343  000102  0E00               	movlw	high Pong@zivoty
  4344  000104  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4345  000106  0E01               	movlw	1
  4346  000108  EC3D  F017         	call	_LCD_ShowString
  4347  00010C                     l5649:
  4348                           
  4349                           ;Projekt.c: 888:         if (r==1){
  4350  00010C  0100               	movlb	0	; () banked
  4351  00010E  05C8               	decf	Pong@r& (0+255),w,b
  4352  000110  11C9               	iorwf	(Pong@r+1)& (0+255),w,b
  4353  000112  A4D8               	btfss	status,2,c
  4354  000114  EF8E  F000         	goto	u3901
  4355  000118  EF90  F000         	goto	u3900
  4356  00011C                     u3901:
  4357  00011C  EF94  F000         	goto	l5653
  4358  000120                     u3900:
  4359  000120                     
  4360                           ; BSR set to: 0
  4361                           ;Projekt.c: 889:             i=2;
  4362  000120  0E00               	movlw	0
  4363  000122  6FCB               	movwf	(Pong@i+1)& (0+255),b
  4364  000124  0E02               	movlw	2
  4365  000126  6FCA               	movwf	Pong@i& (0+255),b
  4366  000128                     l5653:
  4367                           
  4368                           ; BSR set to: 0
  4369  000128  BFCB               	btfsc	(Pong@i+1)& (0+255),7,b
  4370  00012A  EFA0  F000         	goto	u3911
  4371  00012E  51CB               	movf	(Pong@i+1)& (0+255),w,b
  4372  000130  E109               	bnz	u3910
  4373  000132  0E0F               	movlw	15
  4374  000134  5DCA               	subwf	Pong@i& (0+255),w,b
  4375  000136  A0D8               	btfss	status,0,c
  4376  000138  EFA0  F000         	goto	u3911
  4377  00013C  EFA2  F000         	goto	u3910
  4378  000140                     u3911:
  4379  000140  EF43  F003         	goto	l5797
  4380  000144                     u3910:
  4381  000144  EFBC  F003         	goto	l5811
  4382  000148                     l5657:
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;Projekt.c: 896:                     sprintf(micek,"%co             %c",219,219);
  4386  000148  0EB5               	movlw	low Pong@micek
  4387  00014A  6F68               	movwf	sprintf@s& (0+255),b
  4388  00014C  0E00               	movlw	high Pong@micek
  4389  00014E  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4390  000150  0E4C               	movlw	low STR_91
  4391  000152  6F6A               	movwf	sprintf@fmt& (0+255),b
  4392  000154  0EFB               	movlw	high STR_91
  4393  000156  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4394  000158  0E00               	movlw	0
  4395  00015A  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4396  00015C  0EDB               	movlw	219
  4397  00015E  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4398  000160  0E00               	movlw	0
  4399  000162  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4400  000164  0EDB               	movlw	219
  4401  000166  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4402  000168  EC1B  F018         	call	_sprintf	;wreg free
  4403  00016C                     
  4404                           ;Projekt.c: 897:                      LCD_ShowString(2, micek);
  4405  00016C  0EB5               	movlw	low Pong@micek
  4406  00016E  6E06               	movwf	LCD_ShowString@textData^0,c
  4407  000170  0E00               	movlw	high Pong@micek
  4408  000172  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4409  000174  0E02               	movlw	2
  4410  000176  EC3D  F017         	call	_LCD_ShowString
  4411  00017A                     
  4412                           ;Projekt.c: 898:                      r=1;
  4413  00017A  0E00               	movlw	0
  4414  00017C  0100               	movlb	0	; () banked
  4415  00017E  6FC9               	movwf	(Pong@r+1)& (0+255),b
  4416  000180  0E01               	movlw	1
  4417  000182  6FC8               	movwf	Pong@r& (0+255),b
  4418                           
  4419                           ;Projekt.c: 899:                 break;
  4420  000184  EF89  F003         	goto	l5799
  4421  000188                     l5663:
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;Projekt.c: 901:                     sprintf(micek,"%c o            %c",219,219);
  4425  000188  0EB5               	movlw	low Pong@micek
  4426  00018A  6F68               	movwf	sprintf@s& (0+255),b
  4427  00018C  0E00               	movlw	high Pong@micek
  4428  00018E  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4429  000190  0E5F               	movlw	low STR_92
  4430  000192  6F6A               	movwf	sprintf@fmt& (0+255),b
  4431  000194  0EFB               	movlw	high STR_92
  4432  000196  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4433  000198  0E00               	movlw	0
  4434  00019A  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4435  00019C  0EDB               	movlw	219
  4436  00019E  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4437  0001A0  0E00               	movlw	0
  4438  0001A2  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4439  0001A4  0EDB               	movlw	219
  4440  0001A6  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4441  0001A8  EC1B  F018         	call	_sprintf	;wreg free
  4442  0001AC                     
  4443                           ;Projekt.c: 902:                      LCD_ShowString(2, micek);
  4444  0001AC  0EB5               	movlw	low Pong@micek
  4445  0001AE  6E06               	movwf	LCD_ShowString@textData^0,c
  4446  0001B0  0E00               	movlw	high Pong@micek
  4447  0001B2  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4448  0001B4  0E02               	movlw	2
  4449  0001B6  EC3D  F017         	call	_LCD_ShowString
  4450                           
  4451                           ;Projekt.c: 903:                 break;
  4452  0001BA  EF89  F003         	goto	l5799
  4453  0001BE                     l5667:
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;Projekt.c: 905:                     sprintf(micek,"%c  o           %c",219,219);
  4457  0001BE  0EB5               	movlw	low Pong@micek
  4458  0001C0  6F68               	movwf	sprintf@s& (0+255),b
  4459  0001C2  0E00               	movlw	high Pong@micek
  4460  0001C4  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4461  0001C6  0E72               	movlw	low STR_93
  4462  0001C8  6F6A               	movwf	sprintf@fmt& (0+255),b
  4463  0001CA  0EFB               	movlw	high STR_93
  4464  0001CC  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4465  0001CE  0E00               	movlw	0
  4466  0001D0  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4467  0001D2  0EDB               	movlw	219
  4468  0001D4  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4469  0001D6  0E00               	movlw	0
  4470  0001D8  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4471  0001DA  0EDB               	movlw	219
  4472  0001DC  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4473  0001DE  EC1B  F018         	call	_sprintf	;wreg free
  4474  0001E2                     
  4475                           ;Projekt.c: 906:                      LCD_ShowString(2, micek);
  4476  0001E2  0EB5               	movlw	low Pong@micek
  4477  0001E4  6E06               	movwf	LCD_ShowString@textData^0,c
  4478  0001E6  0E00               	movlw	high Pong@micek
  4479  0001E8  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4480  0001EA  0E02               	movlw	2
  4481  0001EC  EC3D  F017         	call	_LCD_ShowString
  4482                           
  4483                           ;Projekt.c: 907:                 break;
  4484  0001F0  EF89  F003         	goto	l5799
  4485  0001F4                     l5671:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;Projekt.c: 909:                     sprintf(micek,"%c   o          %c",219,219);
  4489  0001F4  0EB5               	movlw	low Pong@micek
  4490  0001F6  6F68               	movwf	sprintf@s& (0+255),b
  4491  0001F8  0E00               	movlw	high Pong@micek
  4492  0001FA  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4493  0001FC  0E85               	movlw	low STR_94
  4494  0001FE  6F6A               	movwf	sprintf@fmt& (0+255),b
  4495  000200  0EFB               	movlw	high STR_94
  4496  000202  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4497  000204  0E00               	movlw	0
  4498  000206  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4499  000208  0EDB               	movlw	219
  4500  00020A  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4501  00020C  0E00               	movlw	0
  4502  00020E  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4503  000210  0EDB               	movlw	219
  4504  000212  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4505  000214  EC1B  F018         	call	_sprintf	;wreg free
  4506  000218                     
  4507                           ;Projekt.c: 910:                      LCD_ShowString(2, micek);
  4508  000218  0EB5               	movlw	low Pong@micek
  4509  00021A  6E06               	movwf	LCD_ShowString@textData^0,c
  4510  00021C  0E00               	movlw	high Pong@micek
  4511  00021E  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4512  000220  0E02               	movlw	2
  4513  000222  EC3D  F017         	call	_LCD_ShowString
  4514                           
  4515                           ;Projekt.c: 911:                 break;
  4516  000226  EF89  F003         	goto	l5799
  4517  00022A                     l5675:
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;Projekt.c: 913:                     sprintf(micek,"%c    o         %c",219,219);
  4521  00022A  0EB5               	movlw	low Pong@micek
  4522  00022C  6F68               	movwf	sprintf@s& (0+255),b
  4523  00022E  0E00               	movlw	high Pong@micek
  4524  000230  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4525  000232  0E98               	movlw	low STR_95
  4526  000234  6F6A               	movwf	sprintf@fmt& (0+255),b
  4527  000236  0EFB               	movlw	high STR_95
  4528  000238  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4529  00023A  0E00               	movlw	0
  4530  00023C  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4531  00023E  0EDB               	movlw	219
  4532  000240  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4533  000242  0E00               	movlw	0
  4534  000244  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4535  000246  0EDB               	movlw	219
  4536  000248  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4537  00024A  EC1B  F018         	call	_sprintf	;wreg free
  4538  00024E                     
  4539                           ;Projekt.c: 914:                      LCD_ShowString(2, micek);
  4540  00024E  0EB5               	movlw	low Pong@micek
  4541  000250  6E06               	movwf	LCD_ShowString@textData^0,c
  4542  000252  0E00               	movlw	high Pong@micek
  4543  000254  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4544  000256  0E02               	movlw	2
  4545  000258  EC3D  F017         	call	_LCD_ShowString
  4546                           
  4547                           ;Projekt.c: 915:                 break;
  4548  00025C  EF89  F003         	goto	l5799
  4549  000260                     l5679:
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;Projekt.c: 917:                     sprintf(micek,"%c     o        %c",219,219);
  4553  000260  0EB5               	movlw	low Pong@micek
  4554  000262  6F68               	movwf	sprintf@s& (0+255),b
  4555  000264  0E00               	movlw	high Pong@micek
  4556  000266  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4557  000268  0EAB               	movlw	low STR_96
  4558  00026A  6F6A               	movwf	sprintf@fmt& (0+255),b
  4559  00026C  0EFB               	movlw	high STR_96
  4560  00026E  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4561  000270  0E00               	movlw	0
  4562  000272  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4563  000274  0EDB               	movlw	219
  4564  000276  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4565  000278  0E00               	movlw	0
  4566  00027A  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4567  00027C  0EDB               	movlw	219
  4568  00027E  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4569  000280  EC1B  F018         	call	_sprintf	;wreg free
  4570  000284                     
  4571                           ;Projekt.c: 918:                      LCD_ShowString(2, micek);
  4572  000284  0EB5               	movlw	low Pong@micek
  4573  000286  6E06               	movwf	LCD_ShowString@textData^0,c
  4574  000288  0E00               	movlw	high Pong@micek
  4575  00028A  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4576  00028C  0E02               	movlw	2
  4577  00028E  EC3D  F017         	call	_LCD_ShowString
  4578                           
  4579                           ;Projekt.c: 919:                 break;
  4580  000292  EF89  F003         	goto	l5799
  4581  000296                     l5683:
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;Projekt.c: 921:                     sprintf(micek,"%c      o       %c",219,219);
  4585  000296  0EB5               	movlw	low Pong@micek
  4586  000298  6F68               	movwf	sprintf@s& (0+255),b
  4587  00029A  0E00               	movlw	high Pong@micek
  4588  00029C  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4589  00029E  0EBE               	movlw	low STR_97
  4590  0002A0  6F6A               	movwf	sprintf@fmt& (0+255),b
  4591  0002A2  0EFB               	movlw	high STR_97
  4592  0002A4  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4593  0002A6  0E00               	movlw	0
  4594  0002A8  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4595  0002AA  0EDB               	movlw	219
  4596  0002AC  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4597  0002AE  0E00               	movlw	0
  4598  0002B0  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4599  0002B2  0EDB               	movlw	219
  4600  0002B4  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4601  0002B6  EC1B  F018         	call	_sprintf	;wreg free
  4602  0002BA                     
  4603                           ;Projekt.c: 922:                      LCD_ShowString(2, micek);
  4604  0002BA  0EB5               	movlw	low Pong@micek
  4605  0002BC  6E06               	movwf	LCD_ShowString@textData^0,c
  4606  0002BE  0E00               	movlw	high Pong@micek
  4607  0002C0  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4608  0002C2  0E02               	movlw	2
  4609  0002C4  EC3D  F017         	call	_LCD_ShowString
  4610                           
  4611                           ;Projekt.c: 923:                 break;
  4612  0002C8  EF89  F003         	goto	l5799
  4613  0002CC                     l5687:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;Projekt.c: 925:                     sprintf(micek,"%c       o      %c",219,219);
  4617  0002CC  0EB5               	movlw	low Pong@micek
  4618  0002CE  6F68               	movwf	sprintf@s& (0+255),b
  4619  0002D0  0E00               	movlw	high Pong@micek
  4620  0002D2  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4621  0002D4  0ED1               	movlw	low STR_98
  4622  0002D6  6F6A               	movwf	sprintf@fmt& (0+255),b
  4623  0002D8  0EFB               	movlw	high STR_98
  4624  0002DA  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4625  0002DC  0E00               	movlw	0
  4626  0002DE  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4627  0002E0  0EDB               	movlw	219
  4628  0002E2  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4629  0002E4  0E00               	movlw	0
  4630  0002E6  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4631  0002E8  0EDB               	movlw	219
  4632  0002EA  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4633  0002EC  EC1B  F018         	call	_sprintf	;wreg free
  4634  0002F0                     
  4635                           ;Projekt.c: 926:                      LCD_ShowString(2, micek);
  4636  0002F0  0EB5               	movlw	low Pong@micek
  4637  0002F2  6E06               	movwf	LCD_ShowString@textData^0,c
  4638  0002F4  0E00               	movlw	high Pong@micek
  4639  0002F6  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4640  0002F8  0E02               	movlw	2
  4641  0002FA  EC3D  F017         	call	_LCD_ShowString
  4642                           
  4643                           ;Projekt.c: 927:                 break;
  4644  0002FE  EF89  F003         	goto	l5799
  4645  000302                     l5691:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;Projekt.c: 929:                     sprintf(micek,"%c        o     %c",219,219);
  4649  000302  0EB5               	movlw	low Pong@micek
  4650  000304  6F68               	movwf	sprintf@s& (0+255),b
  4651  000306  0E00               	movlw	high Pong@micek
  4652  000308  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4653  00030A  0EE4               	movlw	low STR_99
  4654  00030C  6F6A               	movwf	sprintf@fmt& (0+255),b
  4655  00030E  0EFB               	movlw	high STR_99
  4656  000310  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4657  000312  0E00               	movlw	0
  4658  000314  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4659  000316  0EDB               	movlw	219
  4660  000318  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4661  00031A  0E00               	movlw	0
  4662  00031C  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4663  00031E  0EDB               	movlw	219
  4664  000320  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4665  000322  EC1B  F018         	call	_sprintf	;wreg free
  4666  000326                     
  4667                           ;Projekt.c: 930:                      LCD_ShowString(2, micek);
  4668  000326  0EB5               	movlw	low Pong@micek
  4669  000328  6E06               	movwf	LCD_ShowString@textData^0,c
  4670  00032A  0E00               	movlw	high Pong@micek
  4671  00032C  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4672  00032E  0E02               	movlw	2
  4673  000330  EC3D  F017         	call	_LCD_ShowString
  4674                           
  4675                           ;Projekt.c: 931:                 break;
  4676  000334  EF89  F003         	goto	l5799
  4677  000338                     l5695:
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;Projekt.c: 933:                     sprintf(micek,"%c         o    %c",219,219);
  4681  000338  0EB5               	movlw	low Pong@micek
  4682  00033A  6F68               	movwf	sprintf@s& (0+255),b
  4683  00033C  0E00               	movlw	high Pong@micek
  4684  00033E  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4685  000340  0EF7               	movlw	low STR_100
  4686  000342  6F6A               	movwf	sprintf@fmt& (0+255),b
  4687  000344  0EFB               	movlw	high STR_100
  4688  000346  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4689  000348  0E00               	movlw	0
  4690  00034A  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4691  00034C  0EDB               	movlw	219
  4692  00034E  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4693  000350  0E00               	movlw	0
  4694  000352  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4695  000354  0EDB               	movlw	219
  4696  000356  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4697  000358  EC1B  F018         	call	_sprintf	;wreg free
  4698  00035C                     
  4699                           ;Projekt.c: 934:                      LCD_ShowString(2, micek);
  4700  00035C  0EB5               	movlw	low Pong@micek
  4701  00035E  6E06               	movwf	LCD_ShowString@textData^0,c
  4702  000360  0E00               	movlw	high Pong@micek
  4703  000362  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4704  000364  0E02               	movlw	2
  4705  000366  EC3D  F017         	call	_LCD_ShowString
  4706                           
  4707                           ;Projekt.c: 935:                 break;
  4708  00036A  EF89  F003         	goto	l5799
  4709  00036E                     l5699:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;Projekt.c: 937:                     sprintf(micek,"%c          o   %c",219,219);
  4713  00036E  0EB5               	movlw	low Pong@micek
  4714  000370  6F68               	movwf	sprintf@s& (0+255),b
  4715  000372  0E00               	movlw	high Pong@micek
  4716  000374  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4717  000376  0E0A               	movlw	low STR_101
  4718  000378  6F6A               	movwf	sprintf@fmt& (0+255),b
  4719  00037A  0EFC               	movlw	high STR_101
  4720  00037C  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4721  00037E  0E00               	movlw	0
  4722  000380  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4723  000382  0EDB               	movlw	219
  4724  000384  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4725  000386  0E00               	movlw	0
  4726  000388  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4727  00038A  0EDB               	movlw	219
  4728  00038C  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4729  00038E  EC1B  F018         	call	_sprintf	;wreg free
  4730  000392                     
  4731                           ;Projekt.c: 938:                      LCD_ShowString(2, micek);
  4732  000392  0EB5               	movlw	low Pong@micek
  4733  000394  6E06               	movwf	LCD_ShowString@textData^0,c
  4734  000396  0E00               	movlw	high Pong@micek
  4735  000398  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4736  00039A  0E02               	movlw	2
  4737  00039C  EC3D  F017         	call	_LCD_ShowString
  4738                           
  4739                           ;Projekt.c: 939:                 break;
  4740  0003A0  EF89  F003         	goto	l5799
  4741  0003A4                     l5703:
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;Projekt.c: 941:                     sprintf(micek,"%c           o  %c",219,219);
  4745  0003A4  0EB5               	movlw	low Pong@micek
  4746  0003A6  6F68               	movwf	sprintf@s& (0+255),b
  4747  0003A8  0E00               	movlw	high Pong@micek
  4748  0003AA  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4749  0003AC  0E1D               	movlw	low STR_102
  4750  0003AE  6F6A               	movwf	sprintf@fmt& (0+255),b
  4751  0003B0  0EFC               	movlw	high STR_102
  4752  0003B2  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4753  0003B4  0E00               	movlw	0
  4754  0003B6  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4755  0003B8  0EDB               	movlw	219
  4756  0003BA  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4757  0003BC  0E00               	movlw	0
  4758  0003BE  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4759  0003C0  0EDB               	movlw	219
  4760  0003C2  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4761  0003C4  EC1B  F018         	call	_sprintf	;wreg free
  4762  0003C8                     
  4763                           ;Projekt.c: 942:                      LCD_ShowString(2, micek);
  4764  0003C8  0EB5               	movlw	low Pong@micek
  4765  0003CA  6E06               	movwf	LCD_ShowString@textData^0,c
  4766  0003CC  0E00               	movlw	high Pong@micek
  4767  0003CE  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4768  0003D0  0E02               	movlw	2
  4769  0003D2  EC3D  F017         	call	_LCD_ShowString
  4770                           
  4771                           ;Projekt.c: 943:                 break;
  4772  0003D6  EF89  F003         	goto	l5799
  4773  0003DA                     l5707:
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;Projekt.c: 945:                     sprintf(micek,"%c            o %c",219,219);
  4777  0003DA  0EB5               	movlw	low Pong@micek
  4778  0003DC  6F68               	movwf	sprintf@s& (0+255),b
  4779  0003DE  0E00               	movlw	high Pong@micek
  4780  0003E0  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4781  0003E2  0E30               	movlw	low STR_103
  4782  0003E4  6F6A               	movwf	sprintf@fmt& (0+255),b
  4783  0003E6  0EFC               	movlw	high STR_103
  4784  0003E8  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4785  0003EA  0E00               	movlw	0
  4786  0003EC  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4787  0003EE  0EDB               	movlw	219
  4788  0003F0  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4789  0003F2  0E00               	movlw	0
  4790  0003F4  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4791  0003F6  0EDB               	movlw	219
  4792  0003F8  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4793  0003FA  EC1B  F018         	call	_sprintf	;wreg free
  4794  0003FE                     
  4795                           ;Projekt.c: 946:                      LCD_ShowString(2, micek);
  4796  0003FE  0EB5               	movlw	low Pong@micek
  4797  000400  6E06               	movwf	LCD_ShowString@textData^0,c
  4798  000402  0E00               	movlw	high Pong@micek
  4799  000404  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4800  000406  0E02               	movlw	2
  4801  000408  EC3D  F017         	call	_LCD_ShowString
  4802  00040C                     
  4803                           ;Projekt.c: 947:                      if(PORTAbits.RA2){
  4804  00040C  A480               	btfss	128,2,c	;volatile
  4805  00040E  EF0B  F002         	goto	u3921
  4806  000412  EF0D  F002         	goto	u3920
  4807  000416                     u3921:
  4808  000416  EF89  F003         	goto	l5799
  4809  00041A                     u3920:
  4810  00041A                     
  4811                           ;Projekt.c: 948:                          TRISAbits.RA2 = 0;
  4812  00041A  9492               	bcf	146,2,c	;volatile
  4813  00041C  EF89  F003         	goto	l5799
  4814  000420                     l5715:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;Projekt.c: 952:                     sprintf(micek,"%c             o%c",219,219);
  4818  000420  0EB5               	movlw	low Pong@micek
  4819  000422  6F68               	movwf	sprintf@s& (0+255),b
  4820  000424  0E00               	movlw	high Pong@micek
  4821  000426  6F69               	movwf	(sprintf@s+1)& (0+255),b
  4822  000428  0E43               	movlw	low STR_104
  4823  00042A  6F6A               	movwf	sprintf@fmt& (0+255),b
  4824  00042C  0EFC               	movlw	high STR_104
  4825  00042E  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  4826  000430  0E00               	movlw	0
  4827  000432  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  4828  000434  0EDB               	movlw	219
  4829  000436  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  4830  000438  0E00               	movlw	0
  4831  00043A  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  4832  00043C  0EDB               	movlw	219
  4833  00043E  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  4834  000440  EC1B  F018         	call	_sprintf	;wreg free
  4835  000444                     
  4836                           ;Projekt.c: 953:                      LCD_ShowString(2, micek);
  4837  000444  0EB5               	movlw	low Pong@micek
  4838  000446  6E06               	movwf	LCD_ShowString@textData^0,c
  4839  000448  0E00               	movlw	high Pong@micek
  4840  00044A  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4841  00044C  0E02               	movlw	2
  4842  00044E  EC3D  F017         	call	_LCD_ShowString
  4843  000452                     
  4844                           ;Projekt.c: 954:                      t--;
  4845  000452  0100               	movlb	0	; () banked
  4846  000454  07C6               	decf	Pong@t& (0+255),f,b
  4847  000456  A0D8               	btfss	status,0,c
  4848  000458  07C7               	decf	(Pong@t+1)& (0+255),f,b
  4849  00045A                     
  4850                           ; BSR set to: 0
  4851                           ;Projekt.c: 955:                      r=1;
  4852  00045A  0E00               	movlw	0
  4853  00045C  6FC9               	movwf	(Pong@r+1)& (0+255),b
  4854  00045E  0E01               	movlw	1
  4855  000460  6FC8               	movwf	Pong@r& (0+255),b
  4856  000462                     
  4857                           ; BSR set to: 0
  4858                           ;Projekt.c: 956:                      if (!PORTAbits.RA2){
  4859  000462  B480               	btfsc	128,2,c	;volatile
  4860  000464  EF36  F002         	goto	u3931
  4861  000468  EF38  F002         	goto	u3930
  4862  00046C                     u3931:
  4863  00046C  EF89  F003         	goto	l5799
  4864  000470                     u3930:
  4865  000470                     
  4866                           ; BSR set to: 0
  4867                           ;Projekt.c: 957:                          i=0;
  4868  000470  0E00               	movlw	0
  4869  000472  6FCB               	movwf	(Pong@i+1)& (0+255),b
  4870  000474  0E00               	movlw	0
  4871  000476  6FCA               	movwf	Pong@i& (0+255),b
  4872  000478                     
  4873                           ; BSR set to: 0
  4874                           ;Projekt.c: 958:                          P2--;
  4875  000478  07B1               	decf	Pong@P2& (0+255),f,b
  4876  00047A  A0D8               	btfss	status,0,c
  4877  00047C  07B2               	decf	(Pong@P2+1)& (0+255),f,b
  4878  00047E                     
  4879                           ; BSR set to: 0
  4880                           ;Projekt.c: 959:                          n=1;
  4881  00047E  0E00               	movlw	0
  4882  000480  6FB4               	movwf	(Pong@n+1)& (0+255),b
  4883  000482  0E01               	movlw	1
  4884  000484  6FB3               	movwf	Pong@n& (0+255),b
  4885  000486                     
  4886                           ; BSR set to: 0
  4887                           ;Projekt.c: 960:                          r=0;
  4888  000486  0E00               	movlw	0
  4889  000488  6FC9               	movwf	(Pong@r+1)& (0+255),b
  4890  00048A  0E00               	movlw	0
  4891  00048C  6FC8               	movwf	Pong@r& (0+255),b
  4892  00048E                     
  4893                           ; BSR set to: 0
  4894                           ;Projekt.c: 961:                          t=20;
  4895  00048E  0E00               	movlw	0
  4896  000490  6FC7               	movwf	(Pong@t+1)& (0+255),b
  4897  000492  0E14               	movlw	20
  4898  000494  6FC6               	movwf	Pong@t& (0+255),b
  4899  000496                     
  4900                           ; BSR set to: 0
  4901                           ;Projekt.c: 962:                          z=20;
  4902  000496  0E00               	movlw	0
  4903  000498  6FCF               	movwf	(Pong@z+1)& (0+255),b
  4904  00049A  0E14               	movlw	20
  4905  00049C  6FCE               	movwf	Pong@z& (0+255),b
  4906  00049E                     
  4907                           ; BSR set to: 0
  4908                           ;Projekt.c: 963:                          TRISAbits.RA2 = 1;
  4909  00049E  8492               	bsf	146,2,c	;volatile
  4910                           
  4911                           ;Projekt.c: 964:                          switch (P2){
  4912  0004A0  EF1A  F003         	goto	l5791
  4913  0004A4                     l5739:
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;Projekt.c: 966:                                  zivoty[10]=' ';
  4917  0004A4  0E20               	movlw	32
  4918  0004A6  6FA8               	movwf	(Pong@zivoty+10)& (0+255),b
  4919  0004A8                     
  4920                           ; BSR set to: 0
  4921                           ;Projekt.c: 967:                                  LCD_ShowString(1, zivoty);
  4922  0004A8  0E9E               	movlw	low Pong@zivoty
  4923  0004AA  6E06               	movwf	LCD_ShowString@textData^0,c
  4924  0004AC  0E00               	movlw	high Pong@zivoty
  4925  0004AE  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4926  0004B0  0E01               	movlw	1
  4927  0004B2  EC3D  F017         	call	_LCD_ShowString
  4928                           
  4929                           ;Projekt.c: 968:                                  break;
  4930  0004B6  EF34  F003         	goto	l5793
  4931  0004BA                     l5743:
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;Projekt.c: 970:                                  zivoty[11]=' ';
  4935  0004BA  0E20               	movlw	32
  4936  0004BC  6FA9               	movwf	(Pong@zivoty+11)& (0+255),b
  4937  0004BE                     
  4938                           ; BSR set to: 0
  4939                           ;Projekt.c: 971:                                  LCD_ShowString(1, zivoty);
  4940  0004BE  0E9E               	movlw	low Pong@zivoty
  4941  0004C0  6E06               	movwf	LCD_ShowString@textData^0,c
  4942  0004C2  0E00               	movlw	high Pong@zivoty
  4943  0004C4  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4944  0004C6  0E01               	movlw	1
  4945  0004C8  EC3D  F017         	call	_LCD_ShowString
  4946                           
  4947                           ;Projekt.c: 972:                                  break;
  4948  0004CC  EF34  F003         	goto	l5793
  4949  0004D0                     l5747:
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;Projekt.c: 974:                                  zivoty[12]=' ';
  4953  0004D0  0E20               	movlw	32
  4954  0004D2  6FAA               	movwf	(Pong@zivoty+12)& (0+255),b
  4955  0004D4                     
  4956                           ; BSR set to: 0
  4957                           ;Projekt.c: 975:                                  LCD_ShowString(1, zivoty);
  4958  0004D4  0E9E               	movlw	low Pong@zivoty
  4959  0004D6  6E06               	movwf	LCD_ShowString@textData^0,c
  4960  0004D8  0E00               	movlw	high Pong@zivoty
  4961  0004DA  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  4962  0004DC  0E01               	movlw	1
  4963  0004DE  EC3D  F017         	call	_LCD_ShowString
  4964  0004E2                     
  4965                           ;Projekt.c: 976:                                  _delay((unsigned long)((500)*(32E6/400
      +                          0.0)));
  4966  0004E2  0E15               	movlw	21
  4967  0004E4  0100               	movlb	0	; () banked
  4968  0004E6  6F7B               	movwf	(??_Pong+1)& (0+255),b
  4969  0004E8  0E4B               	movlw	75
  4970  0004EA  6F7A               	movwf	??_Pong& (0+255),b
  4971  0004EC  0EBE               	movlw	190
  4972  0004EE                     u4277:
  4973  0004EE  2EE8               	decfsz	wreg,f,c
  4974  0004F0  D7FE               	bra	u4277
  4975  0004F2  2F7A               	decfsz	??_Pong& (0+255),f,b
  4976  0004F4  D7FC               	bra	u4277
  4977  0004F6  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  4978  0004F8  D7FA               	bra	u4277
  4979  0004FA  F000               	nop	
  4980  0004FC                     
  4981                           ;Projekt.c: 977:                                  LCD_Clear();
  4982  0004FC  ECA1  F018         	call	_LCD_Clear	;wreg free
  4983  000500                     
  4984                           ;Projekt.c: 978:                                  _delay((unsigned long)((250)*(32E6/400
      +                          0.0)));
  4985  000500  0E0B               	movlw	11
  4986  000502  0100               	movlb	0	; () banked
  4987  000504  6F7B               	movwf	(??_Pong+1)& (0+255),b
  4988  000506  0E26               	movlw	38
  4989  000508  6F7A               	movwf	??_Pong& (0+255),b
  4990  00050A  0E5D               	movlw	93
  4991  00050C                     u4287:
  4992  00050C  2EE8               	decfsz	wreg,f,c
  4993  00050E  D7FE               	bra	u4287
  4994  000510  2F7A               	decfsz	??_Pong& (0+255),f,b
  4995  000512  D7FC               	bra	u4287
  4996  000514  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  4997  000516  D7FA               	bra	u4287
  4998  000518  D000               	nop2	
  4999  00051A                     
  5000                           ;Projekt.c: 979:                                  LCD_ShowString(1, zivoty);
  5001  00051A  0E9E               	movlw	low Pong@zivoty
  5002  00051C  6E06               	movwf	LCD_ShowString@textData^0,c
  5003  00051E  0E00               	movlw	high Pong@zivoty
  5004  000520  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5005  000522  0E01               	movlw	1
  5006  000524  EC3D  F017         	call	_LCD_ShowString
  5007  000528                     
  5008                           ;Projekt.c: 980:                                  _delay((unsigned long)((250)*(32E6/400
      +                          0.0)));
  5009  000528  0E0B               	movlw	11
  5010  00052A  0100               	movlb	0	; () banked
  5011  00052C  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5012  00052E  0E26               	movlw	38
  5013  000530  6F7A               	movwf	??_Pong& (0+255),b
  5014  000532  0E5D               	movlw	93
  5015  000534                     u4297:
  5016  000534  2EE8               	decfsz	wreg,f,c
  5017  000536  D7FE               	bra	u4297
  5018  000538  2F7A               	decfsz	??_Pong& (0+255),f,b
  5019  00053A  D7FC               	bra	u4297
  5020  00053C  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5021  00053E  D7FA               	bra	u4297
  5022  000540  D000               	nop2	
  5023  000542                     
  5024                           ;Projekt.c: 981:                                  LCD_Clear();
  5025  000542  ECA1  F018         	call	_LCD_Clear	;wreg free
  5026  000546                     
  5027                           ;Projekt.c: 982:                                  _delay((unsigned long)((250)*(32E6/400
      +                          0.0)));
  5028  000546  0E0B               	movlw	11
  5029  000548  0100               	movlb	0	; () banked
  5030  00054A  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5031  00054C  0E26               	movlw	38
  5032  00054E  6F7A               	movwf	??_Pong& (0+255),b
  5033  000550  0E5D               	movlw	93
  5034  000552                     u4307:
  5035  000552  2EE8               	decfsz	wreg,f,c
  5036  000554  D7FE               	bra	u4307
  5037  000556  2F7A               	decfsz	??_Pong& (0+255),f,b
  5038  000558  D7FC               	bra	u4307
  5039  00055A  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5040  00055C  D7FA               	bra	u4307
  5041  00055E  D000               	nop2	
  5042  000560                     
  5043                           ;Projekt.c: 983:                                  LCD_ShowString(1, zivoty);
  5044  000560  0E9E               	movlw	low Pong@zivoty
  5045  000562  6E06               	movwf	LCD_ShowString@textData^0,c
  5046  000564  0E00               	movlw	high Pong@zivoty
  5047  000566  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5048  000568  0E01               	movlw	1
  5049  00056A  EC3D  F017         	call	_LCD_ShowString
  5050  00056E                     
  5051                           ;Projekt.c: 984:                                  _delay((unsigned long)((250)*(32E6/400
      +                          0.0)));
  5052  00056E  0E0B               	movlw	11
  5053  000570  0100               	movlb	0	; () banked
  5054  000572  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5055  000574  0E26               	movlw	38
  5056  000576  6F7A               	movwf	??_Pong& (0+255),b
  5057  000578  0E5D               	movlw	93
  5058  00057A                     u4317:
  5059  00057A  2EE8               	decfsz	wreg,f,c
  5060  00057C  D7FE               	bra	u4317
  5061  00057E  2F7A               	decfsz	??_Pong& (0+255),f,b
  5062  000580  D7FC               	bra	u4317
  5063  000582  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5064  000584  D7FA               	bra	u4317
  5065  000586  D000               	nop2	
  5066  000588                     
  5067                           ;Projekt.c: 985:                                   LCD_Clear();
  5068  000588  ECA1  F018         	call	_LCD_Clear	;wreg free
  5069  00058C                     
  5070                           ;Projekt.c: 986:                                  _delay((unsigned long)((250)*(32E6/400
      +                          0.0)));
  5071  00058C  0E0B               	movlw	11
  5072  00058E  0100               	movlb	0	; () banked
  5073  000590  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5074  000592  0E26               	movlw	38
  5075  000594  6F7A               	movwf	??_Pong& (0+255),b
  5076  000596  0E5D               	movlw	93
  5077  000598                     u4327:
  5078  000598  2EE8               	decfsz	wreg,f,c
  5079  00059A  D7FE               	bra	u4327
  5080  00059C  2F7A               	decfsz	??_Pong& (0+255),f,b
  5081  00059E  D7FC               	bra	u4327
  5082  0005A0  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5083  0005A2  D7FA               	bra	u4327
  5084  0005A4  D000               	nop2	
  5085  0005A6                     
  5086                           ;Projekt.c: 987:                                  LCD_ShowString(1, zivoty);
  5087  0005A6  0E9E               	movlw	low Pong@zivoty
  5088  0005A8  6E06               	movwf	LCD_ShowString@textData^0,c
  5089  0005AA  0E00               	movlw	high Pong@zivoty
  5090  0005AC  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5091  0005AE  0E01               	movlw	1
  5092  0005B0  EC3D  F017         	call	_LCD_ShowString
  5093  0005B4                     
  5094                           ;Projekt.c: 988:                                  _delay((unsigned long)((250)*(32E6/400
      +                          0.0)));
  5095  0005B4  0E0B               	movlw	11
  5096  0005B6  0100               	movlb	0	; () banked
  5097  0005B8  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5098  0005BA  0E26               	movlw	38
  5099  0005BC  6F7A               	movwf	??_Pong& (0+255),b
  5100  0005BE  0E5D               	movlw	93
  5101  0005C0                     u4337:
  5102  0005C0  2EE8               	decfsz	wreg,f,c
  5103  0005C2  D7FE               	bra	u4337
  5104  0005C4  2F7A               	decfsz	??_Pong& (0+255),f,b
  5105  0005C6  D7FC               	bra	u4337
  5106  0005C8  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5107  0005CA  D7FA               	bra	u4337
  5108  0005CC  D000               	nop2	
  5109  0005CE                     
  5110                           ;Projekt.c: 989:                                  sprintf(gameover,"   GAME OVER!   ");
  5111  0005CE  0E7C               	movlw	low Pong@gameover
  5112  0005D0  0100               	movlb	0	; () banked
  5113  0005D2  6F68               	movwf	sprintf@s& (0+255),b
  5114  0005D4  0E00               	movlw	high Pong@gameover
  5115  0005D6  6F69               	movwf	(sprintf@s+1)& (0+255),b
  5116  0005D8  0E00               	movlw	low STR_105
  5117  0005DA  6F6A               	movwf	sprintf@fmt& (0+255),b
  5118  0005DC  0EFE               	movlw	high STR_105
  5119  0005DE  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  5120  0005E0  EC1B  F018         	call	_sprintf	;wreg free
  5121  0005E4                     
  5122                           ;Projekt.c: 990:                                  sprintf(vitez," PLAYER 1 WINS ");
  5123  0005E4  0E8D               	movlw	low Pong@vitez
  5124  0005E6  0100               	movlb	0	; () banked
  5125  0005E8  6F68               	movwf	sprintf@s& (0+255),b
  5126  0005EA  0E00               	movlw	high Pong@vitez
  5127  0005EC  6F69               	movwf	(sprintf@s+1)& (0+255),b
  5128  0005EE  0EEE               	movlw	low STR_106
  5129  0005F0  6F6A               	movwf	sprintf@fmt& (0+255),b
  5130  0005F2  0EFE               	movlw	high STR_106
  5131  0005F4  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  5132  0005F6  EC1B  F018         	call	_sprintf	;wreg free
  5133  0005FA                     
  5134                           ;Projekt.c: 991:                                  LCD_ShowString(1, gameover);
  5135  0005FA  0E7C               	movlw	low Pong@gameover
  5136  0005FC  6E06               	movwf	LCD_ShowString@textData^0,c
  5137  0005FE  0E00               	movlw	high Pong@gameover
  5138  000600  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5139  000602  0E01               	movlw	1
  5140  000604  EC3D  F017         	call	_LCD_ShowString
  5141  000608                     
  5142                           ;Projekt.c: 992:                                  LCD_ShowString(2, vitez);
  5143  000608  0E8D               	movlw	low Pong@vitez
  5144  00060A  6E06               	movwf	LCD_ShowString@textData^0,c
  5145  00060C  0E00               	movlw	high Pong@vitez
  5146  00060E  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5147  000610  0E02               	movlw	2
  5148  000612  EC3D  F017         	call	_LCD_ShowString
  5149  000616                     l5785:
  5150                           
  5151                           ;Projekt.c: 993:                                  _delay((unsigned long)((2000)*(32E6/40
      +                          00.0)));
  5152  000616  0E52               	movlw	82
  5153  000618  0100               	movlb	0	; () banked
  5154  00061A  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5155  00061C  0E2B               	movlw	43
  5156  00061E  6F7A               	movwf	??_Pong& (0+255),b
  5157  000620  0E00               	movlw	0
  5158  000622                     u4347:
  5159  000622  2EE8               	decfsz	wreg,f,c
  5160  000624  D7FE               	bra	u4347
  5161  000626  2F7A               	decfsz	??_Pong& (0+255),f,b
  5162  000628  D7FC               	bra	u4347
  5163  00062A  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5164  00062C  D7FA               	bra	u4347
  5165  00062E  F000               	nop	
  5166  000630  EFEE  F006         	goto	l464
  5167  000634                     l5791:
  5168                           
  5169                           ; BSR set to: 0
  5170  000634  C0B1  F07A         	movff	Pong@P2,??_Pong
  5171  000638  C0B2  F07B         	movff	Pong@P2+1,??_Pong+1
  5172                           
  5173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5174                           ; Switch size 1, requested type "simple"
  5175                           ; Number of cases is 1, Range of values is 0 to 0
  5176                           ; switch strategies available:
  5177                           ; Name         Instructions Cycles
  5178                           ; simple_byte            4     3 (average)
  5179                           ;	Chosen strategy is simple_byte
  5180  00063C  517B               	movf	(??_Pong+1)& (0+255),w,b
  5181  00063E  0A00               	xorlw	0	; case 0
  5182  000640  B4D8               	btfsc	status,2,c
  5183  000642  EF25  F003         	goto	l6379
  5184  000646  EF34  F003         	goto	l5793
  5185  00064A                     l6379:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ; Switch size 1, requested type "simple"
  5189                           ; Number of cases is 3, Range of values is 0 to 2
  5190                           ; switch strategies available:
  5191                           ; Name         Instructions Cycles
  5192                           ; simple_byte           10     6 (average)
  5193                           ;	Chosen strategy is simple_byte
  5194  00064A  517A               	movf	??_Pong& (0+255),w,b
  5195  00064C  0A00               	xorlw	0	; case 0
  5196  00064E  B4D8               	btfsc	status,2,c
  5197  000650  EF68  F002         	goto	l5747
  5198  000654  0A01               	xorlw	1	; case 1
  5199  000656  B4D8               	btfsc	status,2,c
  5200  000658  EF5D  F002         	goto	l5743
  5201  00065C  0A03               	xorlw	3	; case 2
  5202  00065E  B4D8               	btfsc	status,2,c
  5203  000660  EF52  F002         	goto	l5739
  5204  000664  EF34  F003         	goto	l5793
  5205  000668                     l5793:
  5206                           
  5207                           ;Projekt.c: 996:                          _delay((unsigned long)((500)*(32E6/4000.0)));
  5208  000668  0E15               	movlw	21
  5209  00066A  0100               	movlb	0	; () banked
  5210  00066C  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5211  00066E  0E4B               	movlw	75
  5212  000670  6F7A               	movwf	??_Pong& (0+255),b
  5213  000672  0EBE               	movlw	190
  5214  000674                     u4357:
  5215  000674  2EE8               	decfsz	wreg,f,c
  5216  000676  D7FE               	bra	u4357
  5217  000678  2F7A               	decfsz	??_Pong& (0+255),f,b
  5218  00067A  D7FC               	bra	u4357
  5219  00067C  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5220  00067E  D7FA               	bra	u4357
  5221  000680  F000               	nop	
  5222  000682  EF89  F003         	goto	l5799
  5223  000686                     l5797:
  5224                           
  5225                           ; BSR set to: 0
  5226  000686  C0CA  F07A         	movff	Pong@i,??_Pong
  5227  00068A  C0CB  F07B         	movff	Pong@i+1,??_Pong+1
  5228                           
  5229                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5230                           ; Switch size 1, requested type "simple"
  5231                           ; Number of cases is 1, Range of values is 0 to 0
  5232                           ; switch strategies available:
  5233                           ; Name         Instructions Cycles
  5234                           ; simple_byte            4     3 (average)
  5235                           ;	Chosen strategy is simple_byte
  5236  00068E  517B               	movf	(??_Pong+1)& (0+255),w,b
  5237  000690  0A00               	xorlw	0	; case 0
  5238  000692  B4D8               	btfsc	status,2,c
  5239  000694  EF4E  F003         	goto	l6381
  5240  000698  EF89  F003         	goto	l5799
  5241  00069C                     l6381:
  5242                           
  5243                           ; BSR set to: 0
  5244                           ; Switch size 1, requested type "simple"
  5245                           ; Number of cases is 14, Range of values is 1 to 14
  5246                           ; switch strategies available:
  5247                           ; Name         Instructions Cycles
  5248                           ; simple_byte           43    22 (average)
  5249                           ;	Chosen strategy is simple_byte
  5250  00069C  517A               	movf	??_Pong& (0+255),w,b
  5251  00069E  0A01               	xorlw	1	; case 1
  5252  0006A0  B4D8               	btfsc	status,2,c
  5253  0006A2  EFA4  F000         	goto	l5657
  5254  0006A6  0A03               	xorlw	3	; case 2
  5255  0006A8  B4D8               	btfsc	status,2,c
  5256  0006AA  EFC4  F000         	goto	l5663
  5257  0006AE  0A01               	xorlw	1	; case 3
  5258  0006B0  B4D8               	btfsc	status,2,c
  5259  0006B2  EFDF  F000         	goto	l5667
  5260  0006B6  0A07               	xorlw	7	; case 4
  5261  0006B8  B4D8               	btfsc	status,2,c
  5262  0006BA  EFFA  F000         	goto	l5671
  5263  0006BE  0A01               	xorlw	1	; case 5
  5264  0006C0  B4D8               	btfsc	status,2,c
  5265  0006C2  EF15  F001         	goto	l5675
  5266  0006C6  0A03               	xorlw	3	; case 6
  5267  0006C8  B4D8               	btfsc	status,2,c
  5268  0006CA  EF30  F001         	goto	l5679
  5269  0006CE  0A01               	xorlw	1	; case 7
  5270  0006D0  B4D8               	btfsc	status,2,c
  5271  0006D2  EF4B  F001         	goto	l5683
  5272  0006D6  0A0F               	xorlw	15	; case 8
  5273  0006D8  B4D8               	btfsc	status,2,c
  5274  0006DA  EF66  F001         	goto	l5687
  5275  0006DE  0A01               	xorlw	1	; case 9
  5276  0006E0  B4D8               	btfsc	status,2,c
  5277  0006E2  EF81  F001         	goto	l5691
  5278  0006E6  0A03               	xorlw	3	; case 10
  5279  0006E8  B4D8               	btfsc	status,2,c
  5280  0006EA  EF9C  F001         	goto	l5695
  5281  0006EE  0A01               	xorlw	1	; case 11
  5282  0006F0  B4D8               	btfsc	status,2,c
  5283  0006F2  EFB7  F001         	goto	l5699
  5284  0006F6  0A07               	xorlw	7	; case 12
  5285  0006F8  B4D8               	btfsc	status,2,c
  5286  0006FA  EFD2  F001         	goto	l5703
  5287  0006FE  0A01               	xorlw	1	; case 13
  5288  000700  B4D8               	btfsc	status,2,c
  5289  000702  EFED  F001         	goto	l5707
  5290  000706  0A03               	xorlw	3	; case 14
  5291  000708  B4D8               	btfsc	status,2,c
  5292  00070A  EF10  F002         	goto	l5715
  5293  00070E  EF89  F003         	goto	l5799
  5294  000712                     l5799:
  5295  000712  0100               	movlb	0	; () banked
  5296  000714  BFCF               	btfsc	(Pong@z+1)& (0+255),7,b
  5297  000716  EF98  F003         	goto	u3940
  5298  00071A  51CF               	movf	(Pong@z+1)& (0+255),w,b
  5299  00071C  E107               	bnz	u3941
  5300  00071E  0E02               	movlw	2
  5301  000720  5DCE               	subwf	Pong@z& (0+255),w,b
  5302  000722  B0D8               	btfsc	status,0,c
  5303  000724  EF96  F003         	goto	u3941
  5304  000728  EF98  F003         	goto	u3940
  5305  00072C                     u3941:
  5306  00072C  EF9A  F003         	goto	l5803
  5307  000730                     u3940:
  5308  000730  EFB4  F003         	goto	l466
  5309  000734                     l5803:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;Projekt.c: 1001:             _delay((unsigned long)((15)*(32E6/4000.0)));
  5313  000734  0E9C               	movlw	156
  5314  000736  0100               	movlb	0	; () banked
  5315  000738  6F7A               	movwf	??_Pong& (0+255),b
  5316  00073A  0ED7               	movlw	215
  5317  00073C                     u4367:
  5318  00073C  2EE8               	decfsz	wreg,f,c
  5319  00073E  D7FE               	bra	u4367
  5320  000740  2F7A               	decfsz	??_Pong& (0+255),f,b
  5321  000742  D7FC               	bra	u4367
  5322  000744                     
  5323                           ;Projekt.c: 1002:             }
  5324  000744  0100               	movlb	0	; () banked
  5325  000746  07CE               	decf	Pong@z& (0+255),f,b
  5326  000748  A0D8               	btfss	status,0,c
  5327  00074A  07CF               	decf	(Pong@z+1)& (0+255),f,b
  5328  00074C  BFCF               	btfsc	(Pong@z+1)& (0+255),7,b
  5329  00074E  EFB4  F003         	goto	u3950
  5330  000752  51CF               	movf	(Pong@z+1)& (0+255),w,b
  5331  000754  E107               	bnz	u3951
  5332  000756  0E02               	movlw	2
  5333  000758  5DCE               	subwf	Pong@z& (0+255),w,b
  5334  00075A  B0D8               	btfsc	status,0,c
  5335  00075C  EFB2  F003         	goto	u3951
  5336  000760  EFB4  F003         	goto	u3950
  5337  000764                     u3951:
  5338  000764  EF9A  F003         	goto	l5803
  5339  000768                     u3950:
  5340  000768                     l466:
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;Projekt.c: 1003:             z=t;
  5344  000768  C0C6  F0CE         	movff	Pong@t,Pong@z
  5345  00076C  C0C7  F0CF         	movff	Pong@t+1,Pong@z+1
  5346  000770                     
  5347                           ; BSR set to: 0
  5348                           ;Projekt.c: 1004:         }
  5349  000770  4BCA               	infsnz	Pong@i& (0+255),f,b
  5350  000772  2BCB               	incf	(Pong@i+1)& (0+255),f,b
  5351  000774  EF94  F000         	goto	l5653
  5352  000778                     l5811:
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;Projekt.c: 1005:          if (r==1){
  5356  000778  05C8               	decf	Pong@r& (0+255),w,b
  5357  00077A  11C9               	iorwf	(Pong@r+1)& (0+255),w,b
  5358  00077C  A4D8               	btfss	status,2,c
  5359  00077E  EFC3  F003         	goto	u3961
  5360  000782  EFC5  F003         	goto	u3960
  5361  000786                     u3961:
  5362  000786  EFC9  F003         	goto	l5815
  5363  00078A                     u3960:
  5364  00078A                     
  5365                           ; BSR set to: 0
  5366                           ;Projekt.c: 1006:             j=13;
  5367  00078A  0E00               	movlw	0
  5368  00078C  6FCD               	movwf	(Pong@j+1)& (0+255),b
  5369  00078E  0E0D               	movlw	13
  5370  000790  6FCC               	movwf	Pong@j& (0+255),b
  5371  000792                     l5815:
  5372                           
  5373                           ; BSR set to: 0
  5374  000792  BFCD               	btfsc	(Pong@j+1)& (0+255),7,b
  5375  000794  EFD6  F003         	goto	u3970
  5376  000798  51CD               	movf	(Pong@j+1)& (0+255),w,b
  5377  00079A  E106               	bnz	u3971
  5378  00079C  05CC               	decf	Pong@j& (0+255),w,b
  5379  00079E  B0D8               	btfsc	status,0,c
  5380  0007A0  EFD4  F003         	goto	u3971
  5381  0007A4  EFD6  F003         	goto	u3970
  5382  0007A8                     u3971:
  5383  0007A8  EF6A  F006         	goto	l5959
  5384  0007AC                     u3970:
  5385  0007AC  EFE4  F006         	goto	l5973
  5386  0007B0                     l5819:
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;Projekt.c: 1012:                     sprintf(micek,"%co             %c",219,219);
  5390  0007B0  0EB5               	movlw	low Pong@micek
  5391  0007B2  6F68               	movwf	sprintf@s& (0+255),b
  5392  0007B4  0E00               	movlw	high Pong@micek
  5393  0007B6  6F69               	movwf	(sprintf@s+1)& (0+255),b
  5394  0007B8  0E4C               	movlw	low STR_91
  5395  0007BA  6F6A               	movwf	sprintf@fmt& (0+255),b
  5396  0007BC  0EFB               	movlw	high STR_91
  5397  0007BE  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  5398  0007C0  0E00               	movlw	0
  5399  0007C2  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  5400  0007C4  0EDB               	movlw	219
  5401  0007C6  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  5402  0007C8  0E00               	movlw	0
  5403  0007CA  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  5404  0007CC  0EDB               	movlw	219
  5405  0007CE  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  5406  0007D0  EC1B  F018         	call	_sprintf	;wreg free
  5407  0007D4                     
  5408                           ;Projekt.c: 1013:                      LCD_ShowString(2, micek);
  5409  0007D4  0EB5               	movlw	low Pong@micek
  5410  0007D6  6E06               	movwf	LCD_ShowString@textData^0,c
  5411  0007D8  0E00               	movlw	high Pong@micek
  5412  0007DA  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5413  0007DC  0E02               	movlw	2
  5414  0007DE  EC3D  F017         	call	_LCD_ShowString
  5415  0007E2                     
  5416                           ;Projekt.c: 1014:                      t--;
  5417  0007E2  0100               	movlb	0	; () banked
  5418  0007E4  07C6               	decf	Pong@t& (0+255),f,b
  5419  0007E6  A0D8               	btfss	status,0,c
  5420  0007E8  07C7               	decf	(Pong@t+1)& (0+255),f,b
  5421  0007EA                     
  5422                           ; BSR set to: 0
  5423                           ;Projekt.c: 1015:                      r=1;
  5424  0007EA  0E00               	movlw	0
  5425  0007EC  6FC9               	movwf	(Pong@r+1)& (0+255),b
  5426  0007EE  0E01               	movlw	1
  5427  0007F0  6FC8               	movwf	Pong@r& (0+255),b
  5428  0007F2                     
  5429                           ; BSR set to: 0
  5430                           ;Projekt.c: 1016:                      if (!PORTCbits.RC0){
  5431  0007F2  B082               	btfsc	130,0,c	;volatile
  5432  0007F4  EFFE  F003         	goto	u3981
  5433  0007F8  EF00  F004         	goto	u3980
  5434  0007FC                     u3981:
  5435  0007FC  EFB0  F006         	goto	l5961
  5436  000800                     u3980:
  5437  000800                     
  5438                           ; BSR set to: 0
  5439                           ;Projekt.c: 1017:                          j=15;
  5440  000800  0E00               	movlw	0
  5441  000802  6FCD               	movwf	(Pong@j+1)& (0+255),b
  5442  000804  0E0F               	movlw	15
  5443  000806  6FCC               	movwf	Pong@j& (0+255),b
  5444  000808                     
  5445                           ; BSR set to: 0
  5446                           ;Projekt.c: 1018:                          P1--;
  5447  000808  07AF               	decf	Pong@P1& (0+255),f,b
  5448  00080A  A0D8               	btfss	status,0,c
  5449  00080C  07B0               	decf	(Pong@P1+1)& (0+255),f,b
  5450  00080E                     
  5451                           ; BSR set to: 0
  5452                           ;Projekt.c: 1019:                          n=1;
  5453  00080E  0E00               	movlw	0
  5454  000810  6FB4               	movwf	(Pong@n+1)& (0+255),b
  5455  000812  0E01               	movlw	1
  5456  000814  6FB3               	movwf	Pong@n& (0+255),b
  5457  000816                     
  5458                           ; BSR set to: 0
  5459                           ;Projekt.c: 1020:                          r=0;
  5460  000816  0E00               	movlw	0
  5461  000818  6FC9               	movwf	(Pong@r+1)& (0+255),b
  5462  00081A  0E00               	movlw	0
  5463  00081C  6FC8               	movwf	Pong@r& (0+255),b
  5464  00081E                     
  5465                           ; BSR set to: 0
  5466                           ;Projekt.c: 1021:                          t=20;
  5467  00081E  0E00               	movlw	0
  5468  000820  6FC7               	movwf	(Pong@t+1)& (0+255),b
  5469  000822  0E14               	movlw	20
  5470  000824  6FC6               	movwf	Pong@t& (0+255),b
  5471  000826                     
  5472                           ; BSR set to: 0
  5473                           ;Projekt.c: 1022:                          z=20;
  5474  000826  0E00               	movlw	0
  5475  000828  6FCF               	movwf	(Pong@z+1)& (0+255),b
  5476  00082A  0E14               	movlw	20
  5477  00082C  6FCE               	movwf	Pong@z& (0+255),b
  5478  00082E                     
  5479                           ; BSR set to: 0
  5480                           ;Projekt.c: 1023:                          TRISCbits.RC0 = 1;
  5481  00082E  8094               	bsf	148,0,c	;volatile
  5482                           
  5483                           ;Projekt.c: 1025:                          switch (P1){
  5484  000830  EFD5  F004         	goto	l5895
  5485  000834                     l5843:
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;Projekt.c: 1028:                                  zivoty[5]=' ';
  5489  000834  0E20               	movlw	32
  5490  000836  6FA3               	movwf	(Pong@zivoty+5)& (0+255),b
  5491  000838                     
  5492                           ; BSR set to: 0
  5493                           ;Projekt.c: 1029:                                  LCD_ShowString(1, zivoty);
  5494  000838  0E9E               	movlw	low Pong@zivoty
  5495  00083A  6E06               	movwf	LCD_ShowString@textData^0,c
  5496  00083C  0E00               	movlw	high Pong@zivoty
  5497  00083E  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5498  000840  0E01               	movlw	1
  5499  000842  EC3D  F017         	call	_LCD_ShowString
  5500                           
  5501                           ;Projekt.c: 1030:                                  break;
  5502  000846  EFEF  F004         	goto	l5897
  5503  00084A                     l5847:
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;Projekt.c: 1032:                                  zivoty[4]=' ';
  5507  00084A  0E20               	movlw	32
  5508  00084C  6FA2               	movwf	(Pong@zivoty+4)& (0+255),b
  5509  00084E                     
  5510                           ; BSR set to: 0
  5511                           ;Projekt.c: 1033:                                  LCD_ShowString(1, zivoty);
  5512  00084E  0E9E               	movlw	low Pong@zivoty
  5513  000850  6E06               	movwf	LCD_ShowString@textData^0,c
  5514  000852  0E00               	movlw	high Pong@zivoty
  5515  000854  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5516  000856  0E01               	movlw	1
  5517  000858  EC3D  F017         	call	_LCD_ShowString
  5518                           
  5519                           ;Projekt.c: 1034:                                  break;
  5520  00085C  EFEF  F004         	goto	l5897
  5521  000860                     l5851:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;Projekt.c: 1036:                                  zivoty[3]=' ';
  5525  000860  0E20               	movlw	32
  5526  000862  6FA1               	movwf	(Pong@zivoty+3)& (0+255),b
  5527  000864                     
  5528                           ; BSR set to: 0
  5529                           ;Projekt.c: 1037:                                  LCD_ShowString(1, zivoty);
  5530  000864  0E9E               	movlw	low Pong@zivoty
  5531  000866  6E06               	movwf	LCD_ShowString@textData^0,c
  5532  000868  0E00               	movlw	high Pong@zivoty
  5533  00086A  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5534  00086C  0E01               	movlw	1
  5535  00086E  EC3D  F017         	call	_LCD_ShowString
  5536  000872                     
  5537                           ;Projekt.c: 1038:                                  _delay((unsigned long)((500)*(32E6/40
      +                          00.0)));
  5538  000872  0E15               	movlw	21
  5539  000874  0100               	movlb	0	; () banked
  5540  000876  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5541  000878  0E4B               	movlw	75
  5542  00087A  6F7A               	movwf	??_Pong& (0+255),b
  5543  00087C  0EBE               	movlw	190
  5544  00087E                     u4377:
  5545  00087E  2EE8               	decfsz	wreg,f,c
  5546  000880  D7FE               	bra	u4377
  5547  000882  2F7A               	decfsz	??_Pong& (0+255),f,b
  5548  000884  D7FC               	bra	u4377
  5549  000886  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5550  000888  D7FA               	bra	u4377
  5551  00088A  F000               	nop	
  5552  00088C                     
  5553                           ;Projekt.c: 1039:                                  LCD_Clear();
  5554  00088C  ECA1  F018         	call	_LCD_Clear	;wreg free
  5555  000890                     
  5556                           ;Projekt.c: 1040:                                  _delay((unsigned long)((250)*(32E6/40
      +                          00.0)));
  5557  000890  0E0B               	movlw	11
  5558  000892  0100               	movlb	0	; () banked
  5559  000894  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5560  000896  0E26               	movlw	38
  5561  000898  6F7A               	movwf	??_Pong& (0+255),b
  5562  00089A  0E5D               	movlw	93
  5563  00089C                     u4387:
  5564  00089C  2EE8               	decfsz	wreg,f,c
  5565  00089E  D7FE               	bra	u4387
  5566  0008A0  2F7A               	decfsz	??_Pong& (0+255),f,b
  5567  0008A2  D7FC               	bra	u4387
  5568  0008A4  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5569  0008A6  D7FA               	bra	u4387
  5570  0008A8  D000               	nop2	
  5571  0008AA                     
  5572                           ;Projekt.c: 1041:                                  LCD_ShowString(1, zivoty);
  5573  0008AA  0E9E               	movlw	low Pong@zivoty
  5574  0008AC  6E06               	movwf	LCD_ShowString@textData^0,c
  5575  0008AE  0E00               	movlw	high Pong@zivoty
  5576  0008B0  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5577  0008B2  0E01               	movlw	1
  5578  0008B4  EC3D  F017         	call	_LCD_ShowString
  5579  0008B8                     
  5580                           ;Projekt.c: 1042:                                  _delay((unsigned long)((250)*(32E6/40
      +                          00.0)));
  5581  0008B8  0E0B               	movlw	11
  5582  0008BA  0100               	movlb	0	; () banked
  5583  0008BC  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5584  0008BE  0E26               	movlw	38
  5585  0008C0  6F7A               	movwf	??_Pong& (0+255),b
  5586  0008C2  0E5D               	movlw	93
  5587  0008C4                     u4397:
  5588  0008C4  2EE8               	decfsz	wreg,f,c
  5589  0008C6  D7FE               	bra	u4397
  5590  0008C8  2F7A               	decfsz	??_Pong& (0+255),f,b
  5591  0008CA  D7FC               	bra	u4397
  5592  0008CC  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5593  0008CE  D7FA               	bra	u4397
  5594  0008D0  D000               	nop2	
  5595  0008D2                     
  5596                           ;Projekt.c: 1043:                                  LCD_Clear();
  5597  0008D2  ECA1  F018         	call	_LCD_Clear	;wreg free
  5598  0008D6                     
  5599                           ;Projekt.c: 1044:                                  _delay((unsigned long)((250)*(32E6/40
      +                          00.0)));
  5600  0008D6  0E0B               	movlw	11
  5601  0008D8  0100               	movlb	0	; () banked
  5602  0008DA  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5603  0008DC  0E26               	movlw	38
  5604  0008DE  6F7A               	movwf	??_Pong& (0+255),b
  5605  0008E0  0E5D               	movlw	93
  5606  0008E2                     u4407:
  5607  0008E2  2EE8               	decfsz	wreg,f,c
  5608  0008E4  D7FE               	bra	u4407
  5609  0008E6  2F7A               	decfsz	??_Pong& (0+255),f,b
  5610  0008E8  D7FC               	bra	u4407
  5611  0008EA  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5612  0008EC  D7FA               	bra	u4407
  5613  0008EE  D000               	nop2	
  5614  0008F0                     
  5615                           ;Projekt.c: 1045:                                  LCD_ShowString(1, zivoty);
  5616  0008F0  0E9E               	movlw	low Pong@zivoty
  5617  0008F2  6E06               	movwf	LCD_ShowString@textData^0,c
  5618  0008F4  0E00               	movlw	high Pong@zivoty
  5619  0008F6  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5620  0008F8  0E01               	movlw	1
  5621  0008FA  EC3D  F017         	call	_LCD_ShowString
  5622  0008FE                     
  5623                           ;Projekt.c: 1046:                                  _delay((unsigned long)((250)*(32E6/40
      +                          00.0)));
  5624  0008FE  0E0B               	movlw	11
  5625  000900  0100               	movlb	0	; () banked
  5626  000902  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5627  000904  0E26               	movlw	38
  5628  000906  6F7A               	movwf	??_Pong& (0+255),b
  5629  000908  0E5D               	movlw	93
  5630  00090A                     u4417:
  5631  00090A  2EE8               	decfsz	wreg,f,c
  5632  00090C  D7FE               	bra	u4417
  5633  00090E  2F7A               	decfsz	??_Pong& (0+255),f,b
  5634  000910  D7FC               	bra	u4417
  5635  000912  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5636  000914  D7FA               	bra	u4417
  5637  000916  D000               	nop2	
  5638  000918                     
  5639                           ;Projekt.c: 1047:                                   LCD_Clear();
  5640  000918  ECA1  F018         	call	_LCD_Clear	;wreg free
  5641  00091C                     
  5642                           ;Projekt.c: 1048:                                  _delay((unsigned long)((250)*(32E6/40
      +                          00.0)));
  5643  00091C  0E0B               	movlw	11
  5644  00091E  0100               	movlb	0	; () banked
  5645  000920  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5646  000922  0E26               	movlw	38
  5647  000924  6F7A               	movwf	??_Pong& (0+255),b
  5648  000926  0E5D               	movlw	93
  5649  000928                     u4427:
  5650  000928  2EE8               	decfsz	wreg,f,c
  5651  00092A  D7FE               	bra	u4427
  5652  00092C  2F7A               	decfsz	??_Pong& (0+255),f,b
  5653  00092E  D7FC               	bra	u4427
  5654  000930  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5655  000932  D7FA               	bra	u4427
  5656  000934  D000               	nop2	
  5657  000936                     
  5658                           ;Projekt.c: 1049:                                  LCD_ShowString(1, zivoty);
  5659  000936  0E9E               	movlw	low Pong@zivoty
  5660  000938  6E06               	movwf	LCD_ShowString@textData^0,c
  5661  00093A  0E00               	movlw	high Pong@zivoty
  5662  00093C  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5663  00093E  0E01               	movlw	1
  5664  000940  EC3D  F017         	call	_LCD_ShowString
  5665  000944                     
  5666                           ;Projekt.c: 1050:                                  _delay((unsigned long)((250)*(32E6/40
      +                          00.0)));
  5667  000944  0E0B               	movlw	11
  5668  000946  0100               	movlb	0	; () banked
  5669  000948  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5670  00094A  0E26               	movlw	38
  5671  00094C  6F7A               	movwf	??_Pong& (0+255),b
  5672  00094E  0E5D               	movlw	93
  5673  000950                     u4437:
  5674  000950  2EE8               	decfsz	wreg,f,c
  5675  000952  D7FE               	bra	u4437
  5676  000954  2F7A               	decfsz	??_Pong& (0+255),f,b
  5677  000956  D7FC               	bra	u4437
  5678  000958  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5679  00095A  D7FA               	bra	u4437
  5680  00095C  D000               	nop2	
  5681  00095E                     
  5682                           ;Projekt.c: 1051:                                  sprintf(gameover,"   GAME OVER!   ");
  5683  00095E  0E7C               	movlw	low Pong@gameover
  5684  000960  0100               	movlb	0	; () banked
  5685  000962  6F68               	movwf	sprintf@s& (0+255),b
  5686  000964  0E00               	movlw	high Pong@gameover
  5687  000966  6F69               	movwf	(sprintf@s+1)& (0+255),b
  5688  000968  0E00               	movlw	low STR_105
  5689  00096A  6F6A               	movwf	sprintf@fmt& (0+255),b
  5690  00096C  0EFE               	movlw	high STR_105
  5691  00096E  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  5692  000970  EC1B  F018         	call	_sprintf	;wreg free
  5693  000974                     
  5694                           ;Projekt.c: 1052:                                  sprintf(vitez," PLAYER 2 WINS ");
  5695  000974  0E8D               	movlw	low Pong@vitez
  5696  000976  0100               	movlb	0	; () banked
  5697  000978  6F68               	movwf	sprintf@s& (0+255),b
  5698  00097A  0E00               	movlw	high Pong@vitez
  5699  00097C  6F69               	movwf	(sprintf@s+1)& (0+255),b
  5700  00097E  0EFE               	movlw	low STR_109
  5701  000980  6F6A               	movwf	sprintf@fmt& (0+255),b
  5702  000982  0EFE               	movlw	high STR_109
  5703  000984  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  5704  000986  EC1B  F018         	call	_sprintf	;wreg free
  5705  00098A                     
  5706                           ;Projekt.c: 1053:                                  LCD_ShowString(1, gameover);
  5707  00098A  0E7C               	movlw	low Pong@gameover
  5708  00098C  6E06               	movwf	LCD_ShowString@textData^0,c
  5709  00098E  0E00               	movlw	high Pong@gameover
  5710  000990  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5711  000992  0E01               	movlw	1
  5712  000994  EC3D  F017         	call	_LCD_ShowString
  5713  000998                     
  5714                           ;Projekt.c: 1054:                                  LCD_ShowString(2, vitez);
  5715  000998  0E8D               	movlw	low Pong@vitez
  5716  00099A  6E06               	movwf	LCD_ShowString@textData^0,c
  5717  00099C  0E00               	movlw	high Pong@vitez
  5718  00099E  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5719  0009A0  0E02               	movlw	2
  5720  0009A2  EC3D  F017         	call	_LCD_ShowString
  5721  0009A6  EF0B  F003         	goto	l5785
  5722  0009AA                     l5895:
  5723                           
  5724                           ; BSR set to: 0
  5725  0009AA  C0AF  F07A         	movff	Pong@P1,??_Pong
  5726  0009AE  C0B0  F07B         	movff	Pong@P1+1,??_Pong+1
  5727                           
  5728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5729                           ; Switch size 1, requested type "simple"
  5730                           ; Number of cases is 1, Range of values is 0 to 0
  5731                           ; switch strategies available:
  5732                           ; Name         Instructions Cycles
  5733                           ; simple_byte            4     3 (average)
  5734                           ;	Chosen strategy is simple_byte
  5735  0009B2  517B               	movf	(??_Pong+1)& (0+255),w,b
  5736  0009B4  0A00               	xorlw	0	; case 0
  5737  0009B6  B4D8               	btfsc	status,2,c
  5738  0009B8  EFE0  F004         	goto	l6383
  5739  0009BC  EFEF  F004         	goto	l5897
  5740  0009C0                     l6383:
  5741                           
  5742                           ; BSR set to: 0
  5743                           ; Switch size 1, requested type "simple"
  5744                           ; Number of cases is 3, Range of values is 0 to 2
  5745                           ; switch strategies available:
  5746                           ; Name         Instructions Cycles
  5747                           ; simple_byte           10     6 (average)
  5748                           ;	Chosen strategy is simple_byte
  5749  0009C0  517A               	movf	??_Pong& (0+255),w,b
  5750  0009C2  0A00               	xorlw	0	; case 0
  5751  0009C4  B4D8               	btfsc	status,2,c
  5752  0009C6  EF30  F004         	goto	l5851
  5753  0009CA  0A01               	xorlw	1	; case 1
  5754  0009CC  B4D8               	btfsc	status,2,c
  5755  0009CE  EF25  F004         	goto	l5847
  5756  0009D2  0A03               	xorlw	3	; case 2
  5757  0009D4  B4D8               	btfsc	status,2,c
  5758  0009D6  EF1A  F004         	goto	l5843
  5759  0009DA  EFEF  F004         	goto	l5897
  5760  0009DE                     l5897:
  5761                           
  5762                           ;Projekt.c: 1058:                       _delay((unsigned long)((500)*(32E6/4000.0)));
  5763  0009DE  0E15               	movlw	21
  5764  0009E0  0100               	movlb	0	; () banked
  5765  0009E2  6F7B               	movwf	(??_Pong+1)& (0+255),b
  5766  0009E4  0E4B               	movlw	75
  5767  0009E6  6F7A               	movwf	??_Pong& (0+255),b
  5768  0009E8  0EBE               	movlw	190
  5769  0009EA                     u4447:
  5770  0009EA  2EE8               	decfsz	wreg,f,c
  5771  0009EC  D7FE               	bra	u4447
  5772  0009EE  2F7A               	decfsz	??_Pong& (0+255),f,b
  5773  0009F0  D7FC               	bra	u4447
  5774  0009F2  2F7B               	decfsz	(??_Pong+1)& (0+255),f,b
  5775  0009F4  D7FA               	bra	u4447
  5776  0009F6  F000               	nop	
  5777  0009F8  EFB0  F006         	goto	l5961
  5778  0009FC                     l5899:
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;Projekt.c: 1062:                     sprintf(micek,"%c o            %c",219,219);
  5782  0009FC  0EB5               	movlw	low Pong@micek
  5783  0009FE  6F68               	movwf	sprintf@s& (0+255),b
  5784  000A00  0E00               	movlw	high Pong@micek
  5785  000A02  6F69               	movwf	(sprintf@s+1)& (0+255),b
  5786  000A04  0E5F               	movlw	low STR_92
  5787  000A06  6F6A               	movwf	sprintf@fmt& (0+255),b
  5788  000A08  0EFB               	movlw	high STR_92
  5789  000A0A  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  5790  000A0C  0E00               	movlw	0
  5791  000A0E  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  5792  000A10  0EDB               	movlw	219
  5793  000A12  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  5794  000A14  0E00               	movlw	0
  5795  000A16  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  5796  000A18  0EDB               	movlw	219
  5797  000A1A  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  5798  000A1C  EC1B  F018         	call	_sprintf	;wreg free
  5799  000A20                     
  5800                           ;Projekt.c: 1063:                      LCD_ShowString(2, micek);
  5801  000A20  0EB5               	movlw	low Pong@micek
  5802  000A22  6E06               	movwf	LCD_ShowString@textData^0,c
  5803  000A24  0E00               	movlw	high Pong@micek
  5804  000A26  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5805  000A28  0E02               	movlw	2
  5806  000A2A  EC3D  F017         	call	_LCD_ShowString
  5807  000A2E                     
  5808                           ;Projekt.c: 1064:                      if(PORTCbits.RC0){
  5809  000A2E  A082               	btfss	130,0,c	;volatile
  5810  000A30  EF1C  F005         	goto	u3991
  5811  000A34  EF1E  F005         	goto	u3990
  5812  000A38                     u3991:
  5813  000A38  EFB0  F006         	goto	l5961
  5814  000A3C                     u3990:
  5815  000A3C                     
  5816                           ;Projekt.c: 1065:                          TRISCbits.RC0 = 0;
  5817  000A3C  9094               	bcf	148,0,c	;volatile
  5818  000A3E  EFB0  F006         	goto	l5961
  5819  000A42                     l5907:
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;Projekt.c: 1069:                     sprintf(micek,"%c  o           %c",219,219);
  5823  000A42  0EB5               	movlw	low Pong@micek
  5824  000A44  6F68               	movwf	sprintf@s& (0+255),b
  5825  000A46  0E00               	movlw	high Pong@micek
  5826  000A48  6F69               	movwf	(sprintf@s+1)& (0+255),b
  5827  000A4A  0E72               	movlw	low STR_93
  5828  000A4C  6F6A               	movwf	sprintf@fmt& (0+255),b
  5829  000A4E  0EFB               	movlw	high STR_93
  5830  000A50  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  5831  000A52  0E00               	movlw	0
  5832  000A54  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  5833  000A56  0EDB               	movlw	219
  5834  000A58  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  5835  000A5A  0E00               	movlw	0
  5836  000A5C  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  5837  000A5E  0EDB               	movlw	219
  5838  000A60  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  5839  000A62  EC1B  F018         	call	_sprintf	;wreg free
  5840  000A66                     
  5841                           ;Projekt.c: 1070:                      LCD_ShowString(2, micek);
  5842  000A66  0EB5               	movlw	low Pong@micek
  5843  000A68  6E06               	movwf	LCD_ShowString@textData^0,c
  5844  000A6A  0E00               	movlw	high Pong@micek
  5845  000A6C  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5846  000A6E  0E02               	movlw	2
  5847  000A70  EC3D  F017         	call	_LCD_ShowString
  5848                           
  5849                           ;Projekt.c: 1071:                 break;
  5850  000A74  EFB0  F006         	goto	l5961
  5851  000A78                     l5911:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;Projekt.c: 1073:                     sprintf(micek,"%c   o          %c",219,219);
  5855  000A78  0EB5               	movlw	low Pong@micek
  5856  000A7A  6F68               	movwf	sprintf@s& (0+255),b
  5857  000A7C  0E00               	movlw	high Pong@micek
  5858  000A7E  6F69               	movwf	(sprintf@s+1)& (0+255),b
  5859  000A80  0E85               	movlw	low STR_94
  5860  000A82  6F6A               	movwf	sprintf@fmt& (0+255),b
  5861  000A84  0EFB               	movlw	high STR_94
  5862  000A86  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  5863  000A88  0E00               	movlw	0
  5864  000A8A  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  5865  000A8C  0EDB               	movlw	219
  5866  000A8E  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  5867  000A90  0E00               	movlw	0
  5868  000A92  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  5869  000A94  0EDB               	movlw	219
  5870  000A96  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  5871  000A98  EC1B  F018         	call	_sprintf	;wreg free
  5872  000A9C                     
  5873                           ;Projekt.c: 1074:                      LCD_ShowString(2, micek);
  5874  000A9C  0EB5               	movlw	low Pong@micek
  5875  000A9E  6E06               	movwf	LCD_ShowString@textData^0,c
  5876  000AA0  0E00               	movlw	high Pong@micek
  5877  000AA2  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5878  000AA4  0E02               	movlw	2
  5879  000AA6  EC3D  F017         	call	_LCD_ShowString
  5880                           
  5881                           ;Projekt.c: 1075:                 break;
  5882  000AAA  EFB0  F006         	goto	l5961
  5883  000AAE                     l5915:
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;Projekt.c: 1077:                     sprintf(micek,"%c    o         %c",219,219);
  5887  000AAE  0EB5               	movlw	low Pong@micek
  5888  000AB0  6F68               	movwf	sprintf@s& (0+255),b
  5889  000AB2  0E00               	movlw	high Pong@micek
  5890  000AB4  6F69               	movwf	(sprintf@s+1)& (0+255),b
  5891  000AB6  0E98               	movlw	low STR_95
  5892  000AB8  6F6A               	movwf	sprintf@fmt& (0+255),b
  5893  000ABA  0EFB               	movlw	high STR_95
  5894  000ABC  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  5895  000ABE  0E00               	movlw	0
  5896  000AC0  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  5897  000AC2  0EDB               	movlw	219
  5898  000AC4  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  5899  000AC6  0E00               	movlw	0
  5900  000AC8  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  5901  000ACA  0EDB               	movlw	219
  5902  000ACC  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  5903  000ACE  EC1B  F018         	call	_sprintf	;wreg free
  5904  000AD2                     
  5905                           ;Projekt.c: 1078:                      LCD_ShowString(2, micek);
  5906  000AD2  0EB5               	movlw	low Pong@micek
  5907  000AD4  6E06               	movwf	LCD_ShowString@textData^0,c
  5908  000AD6  0E00               	movlw	high Pong@micek
  5909  000AD8  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5910  000ADA  0E02               	movlw	2
  5911  000ADC  EC3D  F017         	call	_LCD_ShowString
  5912                           
  5913                           ;Projekt.c: 1079:                 break;
  5914  000AE0  EFB0  F006         	goto	l5961
  5915  000AE4                     l5919:
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;Projekt.c: 1081:                     sprintf(micek,"%c     o        %c",219,219);
  5919  000AE4  0EB5               	movlw	low Pong@micek
  5920  000AE6  6F68               	movwf	sprintf@s& (0+255),b
  5921  000AE8  0E00               	movlw	high Pong@micek
  5922  000AEA  6F69               	movwf	(sprintf@s+1)& (0+255),b
  5923  000AEC  0EAB               	movlw	low STR_96
  5924  000AEE  6F6A               	movwf	sprintf@fmt& (0+255),b
  5925  000AF0  0EFB               	movlw	high STR_96
  5926  000AF2  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  5927  000AF4  0E00               	movlw	0
  5928  000AF6  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  5929  000AF8  0EDB               	movlw	219
  5930  000AFA  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  5931  000AFC  0E00               	movlw	0
  5932  000AFE  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  5933  000B00  0EDB               	movlw	219
  5934  000B02  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  5935  000B04  EC1B  F018         	call	_sprintf	;wreg free
  5936  000B08                     
  5937                           ;Projekt.c: 1082:                      LCD_ShowString(2, micek);
  5938  000B08  0EB5               	movlw	low Pong@micek
  5939  000B0A  6E06               	movwf	LCD_ShowString@textData^0,c
  5940  000B0C  0E00               	movlw	high Pong@micek
  5941  000B0E  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5942  000B10  0E02               	movlw	2
  5943  000B12  EC3D  F017         	call	_LCD_ShowString
  5944                           
  5945                           ;Projekt.c: 1083:                 break;
  5946  000B16  EFB0  F006         	goto	l5961
  5947  000B1A                     l5923:
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;Projekt.c: 1085:                     sprintf(micek,"%c      o       %c",219,219);
  5951  000B1A  0EB5               	movlw	low Pong@micek
  5952  000B1C  6F68               	movwf	sprintf@s& (0+255),b
  5953  000B1E  0E00               	movlw	high Pong@micek
  5954  000B20  6F69               	movwf	(sprintf@s+1)& (0+255),b
  5955  000B22  0EBE               	movlw	low STR_97
  5956  000B24  6F6A               	movwf	sprintf@fmt& (0+255),b
  5957  000B26  0EFB               	movlw	high STR_97
  5958  000B28  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  5959  000B2A  0E00               	movlw	0
  5960  000B2C  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  5961  000B2E  0EDB               	movlw	219
  5962  000B30  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  5963  000B32  0E00               	movlw	0
  5964  000B34  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  5965  000B36  0EDB               	movlw	219
  5966  000B38  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  5967  000B3A  EC1B  F018         	call	_sprintf	;wreg free
  5968  000B3E                     
  5969                           ;Projekt.c: 1086:                      LCD_ShowString(2, micek);
  5970  000B3E  0EB5               	movlw	low Pong@micek
  5971  000B40  6E06               	movwf	LCD_ShowString@textData^0,c
  5972  000B42  0E00               	movlw	high Pong@micek
  5973  000B44  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  5974  000B46  0E02               	movlw	2
  5975  000B48  EC3D  F017         	call	_LCD_ShowString
  5976                           
  5977                           ;Projekt.c: 1087:                 break;
  5978  000B4C  EFB0  F006         	goto	l5961
  5979  000B50                     l5927:
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;Projekt.c: 1089:                     sprintf(micek,"%c       o      %c",219,219);
  5983  000B50  0EB5               	movlw	low Pong@micek
  5984  000B52  6F68               	movwf	sprintf@s& (0+255),b
  5985  000B54  0E00               	movlw	high Pong@micek
  5986  000B56  6F69               	movwf	(sprintf@s+1)& (0+255),b
  5987  000B58  0ED1               	movlw	low STR_98
  5988  000B5A  6F6A               	movwf	sprintf@fmt& (0+255),b
  5989  000B5C  0EFB               	movlw	high STR_98
  5990  000B5E  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  5991  000B60  0E00               	movlw	0
  5992  000B62  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  5993  000B64  0EDB               	movlw	219
  5994  000B66  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  5995  000B68  0E00               	movlw	0
  5996  000B6A  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  5997  000B6C  0EDB               	movlw	219
  5998  000B6E  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  5999  000B70  EC1B  F018         	call	_sprintf	;wreg free
  6000  000B74                     
  6001                           ;Projekt.c: 1090:                      LCD_ShowString(2, micek);
  6002  000B74  0EB5               	movlw	low Pong@micek
  6003  000B76  6E06               	movwf	LCD_ShowString@textData^0,c
  6004  000B78  0E00               	movlw	high Pong@micek
  6005  000B7A  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  6006  000B7C  0E02               	movlw	2
  6007  000B7E  EC3D  F017         	call	_LCD_ShowString
  6008                           
  6009                           ;Projekt.c: 1091:                 break;
  6010  000B82  EFB0  F006         	goto	l5961
  6011  000B86                     l5931:
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;Projekt.c: 1093:                     sprintf(micek,"%c        o     %c",219,219);
  6015  000B86  0EB5               	movlw	low Pong@micek
  6016  000B88  6F68               	movwf	sprintf@s& (0+255),b
  6017  000B8A  0E00               	movlw	high Pong@micek
  6018  000B8C  6F69               	movwf	(sprintf@s+1)& (0+255),b
  6019  000B8E  0EE4               	movlw	low STR_99
  6020  000B90  6F6A               	movwf	sprintf@fmt& (0+255),b
  6021  000B92  0EFB               	movlw	high STR_99
  6022  000B94  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  6023  000B96  0E00               	movlw	0
  6024  000B98  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  6025  000B9A  0EDB               	movlw	219
  6026  000B9C  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  6027  000B9E  0E00               	movlw	0
  6028  000BA0  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  6029  000BA2  0EDB               	movlw	219
  6030  000BA4  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  6031  000BA6  EC1B  F018         	call	_sprintf	;wreg free
  6032  000BAA                     
  6033                           ;Projekt.c: 1094:                      LCD_ShowString(2, micek);
  6034  000BAA  0EB5               	movlw	low Pong@micek
  6035  000BAC  6E06               	movwf	LCD_ShowString@textData^0,c
  6036  000BAE  0E00               	movlw	high Pong@micek
  6037  000BB0  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  6038  000BB2  0E02               	movlw	2
  6039  000BB4  EC3D  F017         	call	_LCD_ShowString
  6040                           
  6041                           ;Projekt.c: 1095:                 break;
  6042  000BB8  EFB0  F006         	goto	l5961
  6043  000BBC                     l5935:
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;Projekt.c: 1097:                     sprintf(micek,"%c         o    %c",219,219);
  6047  000BBC  0EB5               	movlw	low Pong@micek
  6048  000BBE  6F68               	movwf	sprintf@s& (0+255),b
  6049  000BC0  0E00               	movlw	high Pong@micek
  6050  000BC2  6F69               	movwf	(sprintf@s+1)& (0+255),b
  6051  000BC4  0EF7               	movlw	low STR_100
  6052  000BC6  6F6A               	movwf	sprintf@fmt& (0+255),b
  6053  000BC8  0EFB               	movlw	high STR_100
  6054  000BCA  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  6055  000BCC  0E00               	movlw	0
  6056  000BCE  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  6057  000BD0  0EDB               	movlw	219
  6058  000BD2  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  6059  000BD4  0E00               	movlw	0
  6060  000BD6  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  6061  000BD8  0EDB               	movlw	219
  6062  000BDA  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  6063  000BDC  EC1B  F018         	call	_sprintf	;wreg free
  6064  000BE0                     
  6065                           ;Projekt.c: 1098:                      LCD_ShowString(2, micek);
  6066  000BE0  0EB5               	movlw	low Pong@micek
  6067  000BE2  6E06               	movwf	LCD_ShowString@textData^0,c
  6068  000BE4  0E00               	movlw	high Pong@micek
  6069  000BE6  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  6070  000BE8  0E02               	movlw	2
  6071  000BEA  EC3D  F017         	call	_LCD_ShowString
  6072                           
  6073                           ;Projekt.c: 1099:                 break;
  6074  000BEE  EFB0  F006         	goto	l5961
  6075  000BF2                     l5939:
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;Projekt.c: 1101:                     sprintf(micek,"%c          o   %c",219,219);
  6079  000BF2  0EB5               	movlw	low Pong@micek
  6080  000BF4  6F68               	movwf	sprintf@s& (0+255),b
  6081  000BF6  0E00               	movlw	high Pong@micek
  6082  000BF8  6F69               	movwf	(sprintf@s+1)& (0+255),b
  6083  000BFA  0E0A               	movlw	low STR_101
  6084  000BFC  6F6A               	movwf	sprintf@fmt& (0+255),b
  6085  000BFE  0EFC               	movlw	high STR_101
  6086  000C00  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  6087  000C02  0E00               	movlw	0
  6088  000C04  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  6089  000C06  0EDB               	movlw	219
  6090  000C08  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  6091  000C0A  0E00               	movlw	0
  6092  000C0C  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  6093  000C0E  0EDB               	movlw	219
  6094  000C10  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  6095  000C12  EC1B  F018         	call	_sprintf	;wreg free
  6096  000C16                     
  6097                           ;Projekt.c: 1102:                      LCD_ShowString(2, micek);
  6098  000C16  0EB5               	movlw	low Pong@micek
  6099  000C18  6E06               	movwf	LCD_ShowString@textData^0,c
  6100  000C1A  0E00               	movlw	high Pong@micek
  6101  000C1C  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  6102  000C1E  0E02               	movlw	2
  6103  000C20  EC3D  F017         	call	_LCD_ShowString
  6104                           
  6105                           ;Projekt.c: 1103:                 break;
  6106  000C24  EFB0  F006         	goto	l5961
  6107  000C28                     l5943:
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;Projekt.c: 1105:                     sprintf(micek,"%c           o  %c",219,219);
  6111  000C28  0EB5               	movlw	low Pong@micek
  6112  000C2A  6F68               	movwf	sprintf@s& (0+255),b
  6113  000C2C  0E00               	movlw	high Pong@micek
  6114  000C2E  6F69               	movwf	(sprintf@s+1)& (0+255),b
  6115  000C30  0E1D               	movlw	low STR_102
  6116  000C32  6F6A               	movwf	sprintf@fmt& (0+255),b
  6117  000C34  0EFC               	movlw	high STR_102
  6118  000C36  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  6119  000C38  0E00               	movlw	0
  6120  000C3A  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  6121  000C3C  0EDB               	movlw	219
  6122  000C3E  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  6123  000C40  0E00               	movlw	0
  6124  000C42  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  6125  000C44  0EDB               	movlw	219
  6126  000C46  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  6127  000C48  EC1B  F018         	call	_sprintf	;wreg free
  6128  000C4C                     
  6129                           ;Projekt.c: 1106:                      LCD_ShowString(2, micek);
  6130  000C4C  0EB5               	movlw	low Pong@micek
  6131  000C4E  6E06               	movwf	LCD_ShowString@textData^0,c
  6132  000C50  0E00               	movlw	high Pong@micek
  6133  000C52  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  6134  000C54  0E02               	movlw	2
  6135  000C56  EC3D  F017         	call	_LCD_ShowString
  6136                           
  6137                           ;Projekt.c: 1107:                 break;
  6138  000C5A  EFB0  F006         	goto	l5961
  6139  000C5E                     l5947:
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;Projekt.c: 1109:                     sprintf(micek,"%c            o %c",219,219);
  6143  000C5E  0EB5               	movlw	low Pong@micek
  6144  000C60  6F68               	movwf	sprintf@s& (0+255),b
  6145  000C62  0E00               	movlw	high Pong@micek
  6146  000C64  6F69               	movwf	(sprintf@s+1)& (0+255),b
  6147  000C66  0E30               	movlw	low STR_103
  6148  000C68  6F6A               	movwf	sprintf@fmt& (0+255),b
  6149  000C6A  0EFC               	movlw	high STR_103
  6150  000C6C  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  6151  000C6E  0E00               	movlw	0
  6152  000C70  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  6153  000C72  0EDB               	movlw	219
  6154  000C74  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  6155  000C76  0E00               	movlw	0
  6156  000C78  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  6157  000C7A  0EDB               	movlw	219
  6158  000C7C  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  6159  000C7E  EC1B  F018         	call	_sprintf	;wreg free
  6160  000C82                     
  6161                           ;Projekt.c: 1110:                      LCD_ShowString(2, micek);
  6162  000C82  0EB5               	movlw	low Pong@micek
  6163  000C84  6E06               	movwf	LCD_ShowString@textData^0,c
  6164  000C86  0E00               	movlw	high Pong@micek
  6165  000C88  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  6166  000C8A  0E02               	movlw	2
  6167  000C8C  EC3D  F017         	call	_LCD_ShowString
  6168                           
  6169                           ;Projekt.c: 1111:                 break;
  6170  000C90  EFB0  F006         	goto	l5961
  6171  000C94                     l5951:
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;Projekt.c: 1113:                     sprintf(micek,"%c             o%c",219,219);
  6175  000C94  0EB5               	movlw	low Pong@micek
  6176  000C96  6F68               	movwf	sprintf@s& (0+255),b
  6177  000C98  0E00               	movlw	high Pong@micek
  6178  000C9A  6F69               	movwf	(sprintf@s+1)& (0+255),b
  6179  000C9C  0E43               	movlw	low STR_104
  6180  000C9E  6F6A               	movwf	sprintf@fmt& (0+255),b
  6181  000CA0  0EFC               	movlw	high STR_104
  6182  000CA2  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  6183  000CA4  0E00               	movlw	0
  6184  000CA6  6F6D               	movwf	(?_sprintf+5)& (0+255),b
  6185  000CA8  0EDB               	movlw	219
  6186  000CAA  6F6C               	movwf	(?_sprintf+4)& (0+255),b
  6187  000CAC  0E00               	movlw	0
  6188  000CAE  6F6F               	movwf	(?_sprintf+7)& (0+255),b
  6189  000CB0  0EDB               	movlw	219
  6190  000CB2  6F6E               	movwf	(?_sprintf+6)& (0+255),b
  6191  000CB4  EC1B  F018         	call	_sprintf	;wreg free
  6192  000CB8                     
  6193                           ;Projekt.c: 1114:                      LCD_ShowString(2, micek);
  6194  000CB8  0EB5               	movlw	low Pong@micek
  6195  000CBA  6E06               	movwf	LCD_ShowString@textData^0,c
  6196  000CBC  0E00               	movlw	high Pong@micek
  6197  000CBE  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  6198  000CC0  0E02               	movlw	2
  6199  000CC2  EC3D  F017         	call	_LCD_ShowString
  6200  000CC6                     
  6201                           ;Projekt.c: 1115:                      r=1;
  6202  000CC6  0E00               	movlw	0
  6203  000CC8  0100               	movlb	0	; () banked
  6204  000CCA  6FC9               	movwf	(Pong@r+1)& (0+255),b
  6205  000CCC  0E01               	movlw	1
  6206  000CCE  6FC8               	movwf	Pong@r& (0+255),b
  6207                           
  6208                           ;Projekt.c: 1116:                 break;
  6209  000CD0  EFB0  F006         	goto	l5961
  6210  000CD4                     l5959:
  6211                           
  6212                           ; BSR set to: 0
  6213  000CD4  C0CC  F07A         	movff	Pong@j,??_Pong
  6214  000CD8  C0CD  F07B         	movff	Pong@j+1,??_Pong+1
  6215                           
  6216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6217                           ; Switch size 1, requested type "simple"
  6218                           ; Number of cases is 1, Range of values is 0 to 0
  6219                           ; switch strategies available:
  6220                           ; Name         Instructions Cycles
  6221                           ; simple_byte            4     3 (average)
  6222                           ;	Chosen strategy is simple_byte
  6223  000CDC  517B               	movf	(??_Pong+1)& (0+255),w,b
  6224  000CDE  0A00               	xorlw	0	; case 0
  6225  000CE0  B4D8               	btfsc	status,2,c
  6226  000CE2  EF75  F006         	goto	l6385
  6227  000CE6  EFB0  F006         	goto	l5961
  6228  000CEA                     l6385:
  6229                           
  6230                           ; BSR set to: 0
  6231                           ; Switch size 1, requested type "simple"
  6232                           ; Number of cases is 14, Range of values is 1 to 14
  6233                           ; switch strategies available:
  6234                           ; Name         Instructions Cycles
  6235                           ; simple_byte           43    22 (average)
  6236                           ;	Chosen strategy is simple_byte
  6237  000CEA  517A               	movf	??_Pong& (0+255),w,b
  6238  000CEC  0A01               	xorlw	1	; case 1
  6239  000CEE  B4D8               	btfsc	status,2,c
  6240  000CF0  EFD8  F003         	goto	l5819
  6241  000CF4  0A03               	xorlw	3	; case 2
  6242  000CF6  B4D8               	btfsc	status,2,c
  6243  000CF8  EFFE  F004         	goto	l5899
  6244  000CFC  0A01               	xorlw	1	; case 3
  6245  000CFE  B4D8               	btfsc	status,2,c
  6246  000D00  EF21  F005         	goto	l5907
  6247  000D04  0A07               	xorlw	7	; case 4
  6248  000D06  B4D8               	btfsc	status,2,c
  6249  000D08  EF3C  F005         	goto	l5911
  6250  000D0C  0A01               	xorlw	1	; case 5
  6251  000D0E  B4D8               	btfsc	status,2,c
  6252  000D10  EF57  F005         	goto	l5915
  6253  000D14  0A03               	xorlw	3	; case 6
  6254  000D16  B4D8               	btfsc	status,2,c
  6255  000D18  EF72  F005         	goto	l5919
  6256  000D1C  0A01               	xorlw	1	; case 7
  6257  000D1E  B4D8               	btfsc	status,2,c
  6258  000D20  EF8D  F005         	goto	l5923
  6259  000D24  0A0F               	xorlw	15	; case 8
  6260  000D26  B4D8               	btfsc	status,2,c
  6261  000D28  EFA8  F005         	goto	l5927
  6262  000D2C  0A01               	xorlw	1	; case 9
  6263  000D2E  B4D8               	btfsc	status,2,c
  6264  000D30  EFC3  F005         	goto	l5931
  6265  000D34  0A03               	xorlw	3	; case 10
  6266  000D36  B4D8               	btfsc	status,2,c
  6267  000D38  EFDE  F005         	goto	l5935
  6268  000D3C  0A01               	xorlw	1	; case 11
  6269  000D3E  B4D8               	btfsc	status,2,c
  6270  000D40  EFF9  F005         	goto	l5939
  6271  000D44  0A07               	xorlw	7	; case 12
  6272  000D46  B4D8               	btfsc	status,2,c
  6273  000D48  EF14  F006         	goto	l5943
  6274  000D4C  0A01               	xorlw	1	; case 13
  6275  000D4E  B4D8               	btfsc	status,2,c
  6276  000D50  EF2F  F006         	goto	l5947
  6277  000D54  0A03               	xorlw	3	; case 14
  6278  000D56  B4D8               	btfsc	status,2,c
  6279  000D58  EF4A  F006         	goto	l5951
  6280  000D5C  EFB0  F006         	goto	l5961
  6281  000D60                     l5961:
  6282  000D60  0100               	movlb	0	; () banked
  6283  000D62  BFCF               	btfsc	(Pong@z+1)& (0+255),7,b
  6284  000D64  EFBF  F006         	goto	u4000
  6285  000D68  51CF               	movf	(Pong@z+1)& (0+255),w,b
  6286  000D6A  E107               	bnz	u4001
  6287  000D6C  0E02               	movlw	2
  6288  000D6E  5DCE               	subwf	Pong@z& (0+255),w,b
  6289  000D70  B0D8               	btfsc	status,0,c
  6290  000D72  EFBD  F006         	goto	u4001
  6291  000D76  EFBF  F006         	goto	u4000
  6292  000D7A                     u4001:
  6293  000D7A  EFC1  F006         	goto	l5965
  6294  000D7E                     u4000:
  6295  000D7E  EFDB  F006         	goto	l494
  6296  000D82                     l5965:
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;Projekt.c: 1119:             _delay((unsigned long)((15)*(32E6/4000.0)));
  6300  000D82  0E9C               	movlw	156
  6301  000D84  0100               	movlb	0	; () banked
  6302  000D86  6F7A               	movwf	??_Pong& (0+255),b
  6303  000D88  0ED7               	movlw	215
  6304  000D8A                     u4457:
  6305  000D8A  2EE8               	decfsz	wreg,f,c
  6306  000D8C  D7FE               	bra	u4457
  6307  000D8E  2F7A               	decfsz	??_Pong& (0+255),f,b
  6308  000D90  D7FC               	bra	u4457
  6309  000D92                     
  6310                           ;Projekt.c: 1120:             }
  6311  000D92  0100               	movlb	0	; () banked
  6312  000D94  07CE               	decf	Pong@z& (0+255),f,b
  6313  000D96  A0D8               	btfss	status,0,c
  6314  000D98  07CF               	decf	(Pong@z+1)& (0+255),f,b
  6315  000D9A  BFCF               	btfsc	(Pong@z+1)& (0+255),7,b
  6316  000D9C  EFDB  F006         	goto	u4010
  6317  000DA0  51CF               	movf	(Pong@z+1)& (0+255),w,b
  6318  000DA2  E107               	bnz	u4011
  6319  000DA4  0E02               	movlw	2
  6320  000DA6  5DCE               	subwf	Pong@z& (0+255),w,b
  6321  000DA8  B0D8               	btfsc	status,0,c
  6322  000DAA  EFD9  F006         	goto	u4011
  6323  000DAE  EFDB  F006         	goto	u4010
  6324  000DB2                     u4011:
  6325  000DB2  EFC1  F006         	goto	l5965
  6326  000DB6                     u4010:
  6327  000DB6                     l494:
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;Projekt.c: 1121:             z=t;
  6331  000DB6  C0C6  F0CE         	movff	Pong@t,Pong@z
  6332  000DBA  C0C7  F0CF         	movff	Pong@t+1,Pong@z+1
  6333  000DBE                     
  6334                           ; BSR set to: 0
  6335                           ;Projekt.c: 1122:         }
  6336  000DBE  07CC               	decf	Pong@j& (0+255),f,b
  6337  000DC0  A0D8               	btfss	status,0,c
  6338  000DC2  07CD               	decf	(Pong@j+1)& (0+255),f,b
  6339  000DC4  EFC9  F003         	goto	l5815
  6340  000DC8                     l5973:
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;Projekt.c: 1123:      i=1;
  6344  000DC8  0E00               	movlw	0
  6345  000DCA  6FCB               	movwf	(Pong@i+1)& (0+255),b
  6346  000DCC  0E01               	movlw	1
  6347  000DCE  6FCA               	movwf	Pong@i& (0+255),b
  6348                           
  6349                           ;Projekt.c: 1124:      j=14;
  6350  000DD0  0E00               	movlw	0
  6351  000DD2  6FCD               	movwf	(Pong@j+1)& (0+255),b
  6352  000DD4  0E0E               	movlw	14
  6353  000DD6  6FCC               	movwf	Pong@j& (0+255),b
  6354  000DD8  EF6C  F000         	goto	l5643
  6355  000DDC                     l464:
  6356  000DDC  0012               	return		;funcret
  6357  000DDE                     __end_of_Pong:
  6358                           	opt callstack 0
  6359                           
  6360 ;; *************** function _Pong_init *****************
  6361 ;; Defined at:
  6362 ;;		line 194 in file "Projekt.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;		None
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;		None
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      void 
  6369 ;; Registers used:
  6370 ;;		None
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;Total ram usage:        0 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    1
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_Pong
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text7
  6391  00326A                     __ptext7:
  6392                           	opt callstack 0
  6393  00326A                     _Pong_init:
  6394                           	opt callstack 28
  6395  00326A                     
  6396                           ;Projekt.c: 195:     TRISCbits.RC0 = 1;
  6397  00326A  8094               	bsf	148,0,c	;volatile
  6398                           
  6399                           ;Projekt.c: 196:     TRISAbits.RA2 = 1;
  6400  00326C  8492               	bsf	146,2,c	;volatile
  6401                           
  6402                           ;Projekt.c: 197:     ANSELAbits.ANSA2 = 0;
  6403  00326E  010F               	movlb	15	; () banked
  6404  003270  9538               	bcf	56,2,b	;volatile
  6405  003272                     
  6406                           ; BSR set to: 15
  6407  003272  0012               	return		;funcret
  6408  003274                     __end_of_Pong_init:
  6409                           	opt callstack 0
  6410                           
  6411 ;; *************** function _PWM_motor_led *****************
  6412 ;; Defined at:
  6413 ;;		line 526 in file "Projekt.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;  strida          2   28[BANK0 ] int 
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  1    wreg      void 
  6420 ;; Registers used:
  6421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;Total ram usage:        4 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:    9
  6434 ;; This function calls:
  6435 ;;		_LCD_Clear
  6436 ;;		_LCD_ShowString
  6437 ;;		_PWM_init
  6438 ;;		_sprintf
  6439 ;; This function is called by:
  6440 ;;		_main
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text8
  6445  002C20                     __ptext8:
  6446                           	opt callstack 0
  6447  002C20                     _PWM_motor_led:
  6448                           	opt callstack 21
  6449  002C20                     
  6450                           ;Projekt.c: 527:     PWM_init();
  6451  002C20  EC86  F017         	call	_PWM_init	;wreg free
  6452  002C24                     
  6453                           ;Projekt.c: 528:     LCD_Clear();
  6454  002C24  ECA1  F018         	call	_LCD_Clear	;wreg free
  6455  002C28                     
  6456                           ;Projekt.c: 530:     LATDbits.LATD2 = 1;
  6457  002C28  848C               	bsf	140,2,c	;volatile
  6458  002C2A                     
  6459                           ;Projekt.c: 531:     LATDbits.LATD3 = 1;
  6460  002C2A  868C               	bsf	140,3,c	;volatile
  6461  002C2C                     
  6462                           ;Projekt.c: 532:     LATCbits.LATC4 = 1;
  6463  002C2C  888B               	bsf	139,4,c	;volatile
  6464  002C2E                     
  6465                           ;Projekt.c: 533:     LATDbits.LATD4 = 1;
  6466  002C2E  888C               	bsf	140,4,c	;volatile
  6467  002C30                     
  6468                           ;Projekt.c: 534:     LATDbits.LATD5 = 1;
  6469  002C30  8A8C               	bsf	140,5,c	;volatile
  6470  002C32                     
  6471                           ;Projekt.c: 535:     LATDbits.LATD6 = 1;
  6472  002C32  8C8C               	bsf	140,6,c	;volatile
  6473  002C34                     l5457:
  6474                           
  6475                           ;Projekt.c: 540:         sprintf(nadpis1,"PMW Control     ");
  6476  002C34  0EEC               	movlw	low _nadpis1
  6477  002C36  0100               	movlb	0	; () banked
  6478  002C38  6F68               	movwf	sprintf@s& (0+255),b
  6479  002C3A  0E00               	movlw	high _nadpis1
  6480  002C3C  6F69               	movwf	(sprintf@s+1)& (0+255),b
  6481  002C3E  0E67               	movlw	low STR_67
  6482  002C40  6F6A               	movwf	sprintf@fmt& (0+255),b
  6483  002C42  0EFD               	movlw	high STR_67
  6484  002C44  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  6485  002C46  EC1B  F018         	call	_sprintf	;wreg free
  6486  002C4A                     
  6487                           ;Projekt.c: 541:         LCD_ShowString(1,nadpis1);
  6488  002C4A  0EEC               	movlw	low _nadpis1
  6489  002C4C  6E06               	movwf	LCD_ShowString@textData^0,c
  6490  002C4E  0E00               	movlw	high _nadpis1
  6491  002C50  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  6492  002C52  0E01               	movlw	1
  6493  002C54  EC3D  F017         	call	_LCD_ShowString
  6494  002C58                     
  6495                           ;Projekt.c: 542:         GODONE = 1;
  6496  002C58  82C2               	bsf	4034,1,c	;volatile
  6497  002C5A                     l333:
  6498  002C5A  B2C2               	btfsc	4034,1,c	;volatile
  6499  002C5C  EF32  F016         	goto	u3551
  6500  002C60  EF34  F016         	goto	u3550
  6501  002C64                     u3551:
  6502  002C64  EF2D  F016         	goto	l333
  6503  002C68                     u3550:
  6504  002C68                     
  6505                           ;Projekt.c: 544:         strida=pot1/4;
  6506  002C68  C0D9  F07A         	movff	_pot1,??_PWM_motor_led	;volatile
  6507  002C6C  C0DA  F07B         	movff	_pot1+1,??_PWM_motor_led+1	;volatile
  6508  002C70  0100               	movlb	0	; () banked
  6509  002C72  90D8               	bcf	status,0,c
  6510  002C74  337B               	rrcf	(??_PWM_motor_led+1)& (0+255),f,b
  6511  002C76  337A               	rrcf	??_PWM_motor_led& (0+255),f,b
  6512  002C78  90D8               	bcf	status,0,c
  6513  002C7A  337B               	rrcf	(??_PWM_motor_led+1)& (0+255),f,b
  6514  002C7C  337A               	rrcf	??_PWM_motor_led& (0+255),f,b
  6515  002C7E  C07A  F07C         	movff	??_PWM_motor_led,PWM_motor_led@strida
  6516  002C82  C07B  F07D         	movff	??_PWM_motor_led+1,PWM_motor_led@strida+1
  6517  002C86                     
  6518                           ; BSR set to: 0
  6519                           ;Projekt.c: 545:         CCPR1L = strida;
  6520  002C86  C07C  FFBE         	movff	PWM_motor_led@strida,4030	;volatile
  6521  002C8A                     
  6522                           ; BSR set to: 0
  6523                           ;Projekt.c: 546:         sprintf(text, "Duty = %d             ", strida);
  6524  002C8A  0E52               	movlw	low _text
  6525  002C8C  6F68               	movwf	sprintf@s& (0+255),b
  6526  002C8E  0E01               	movlw	high _text
  6527  002C90  6F69               	movwf	(sprintf@s+1)& (0+255),b
  6528  002C92  0E35               	movlw	low STR_68
  6529  002C94  6F6A               	movwf	sprintf@fmt& (0+255),b
  6530  002C96  0EFB               	movlw	high STR_68
  6531  002C98  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  6532  002C9A  C07C  F06C         	movff	PWM_motor_led@strida,?_sprintf+4
  6533  002C9E  C07D  F06D         	movff	PWM_motor_led@strida+1,?_sprintf+5
  6534  002CA2  EC1B  F018         	call	_sprintf	;wreg free
  6535  002CA6                     
  6536                           ;Projekt.c: 547:         LCD_ShowString(2, text);
  6537  002CA6  0E52               	movlw	low _text
  6538  002CA8  6E06               	movwf	LCD_ShowString@textData^0,c
  6539  002CAA  0E01               	movlw	high _text
  6540  002CAC  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  6541  002CAE  0E02               	movlw	2
  6542  002CB0  EC3D  F017         	call	_LCD_ShowString
  6543  002CB4                     
  6544                           ;Projekt.c: 549:         if (PORTAbits.RA2){
  6545  002CB4  A480               	btfss	128,2,c	;volatile
  6546  002CB6  EF5F  F016         	goto	u3561
  6547  002CBA  EF61  F016         	goto	u3560
  6548  002CBE                     u3561:
  6549  002CBE  EF1A  F016         	goto	l5457
  6550  002CC2                     u3560:
  6551  002CC2                     
  6552                           ;Projekt.c: 550:              PSTR1CONbits.STR1B = 0;
  6553  002CC2  92B9               	bcf	185,1,c	;volatile
  6554                           
  6555                           ;Projekt.c: 551:              TRISCbits.RC2 = 1;
  6556  002CC4  8494               	bsf	148,2,c	;volatile
  6557                           
  6558                           ;Projekt.c: 552:              LATDbits.LATD2=0;
  6559  002CC6  948C               	bcf	140,2,c	;volatile
  6560                           
  6561                           ;Projekt.c: 553:              LATDbits.LATD3=0;
  6562  002CC8  968C               	bcf	140,3,c	;volatile
  6563                           
  6564                           ;Projekt.c: 554:              LATCbits.LATC4=0;
  6565  002CCA  988B               	bcf	139,4,c	;volatile
  6566                           
  6567                           ;Projekt.c: 555:              LATDbits.LATD4=0;
  6568  002CCC  988C               	bcf	140,4,c	;volatile
  6569                           
  6570                           ;Projekt.c: 556:              LATDbits.LATD5=0;
  6571  002CCE  9A8C               	bcf	140,5,c	;volatile
  6572                           
  6573                           ;Projekt.c: 557:              LATDbits.LATD6=0;
  6574  002CD0  9C8C               	bcf	140,6,c	;volatile
  6575  002CD2                     
  6576                           ;Projekt.c: 558:              _delay((unsigned long)((200)*(32E6/4000.0)));
  6577  002CD2  0E09               	movlw	9
  6578  002CD4  0100               	movlb	0	; () banked
  6579  002CD6  6F7B               	movwf	(??_PWM_motor_led+1)& (0+255),b
  6580  002CD8  0E1E               	movlw	30
  6581  002CDA  6F7A               	movwf	??_PWM_motor_led& (0+255),b
  6582  002CDC  0EE4               	movlw	228
  6583  002CDE                     u4467:
  6584  002CDE  2EE8               	decfsz	wreg,f,c
  6585  002CE0  D7FE               	bra	u4467
  6586  002CE2  2F7A               	decfsz	??_PWM_motor_led& (0+255),f,b
  6587  002CE4  D7FC               	bra	u4467
  6588  002CE6  2F7B               	decfsz	(??_PWM_motor_led+1)& (0+255),f,b
  6589  002CE8  D7FA               	bra	u4467
  6590  002CEA  F000               	nop	
  6591  002CEC  0012               	return		;funcret
  6592  002CEE                     __end_of_PWM_motor_led:
  6593                           	opt callstack 0
  6594                           
  6595 ;; *************** function _PWM_init *****************
  6596 ;; Defined at:
  6597 ;;		line 140 in file "Projekt.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;		None
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;		None
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  1    wreg      void 
  6604 ;; Registers used:
  6605 ;;		wreg, status,2
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6615 ;;Total ram usage:        0 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:    1
  6618 ;; This function calls:
  6619 ;;		Nothing
  6620 ;; This function is called by:
  6621 ;;		_PWM_motor_led
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           	psect	text9
  6626  002F0C                     __ptext9:
  6627                           	opt callstack 0
  6628  002F0C                     _PWM_init:
  6629                           	opt callstack 28
  6630  002F0C                     
  6631                           ;Projekt.c: 141:     TRISD = 0b10000011;
  6632  002F0C  0E83               	movlw	131
  6633  002F0E  6E95               	movwf	149,c	;volatile
  6634  002F10                     
  6635                           ;Projekt.c: 142:     TRISCbits.RC4 = 0;
  6636  002F10  9894               	bcf	148,4,c	;volatile
  6637  002F12                     
  6638                           ;Projekt.c: 144:     TRISDbits.RD5 = 1;
  6639  002F12  8A95               	bsf	149,5,c	;volatile
  6640  002F14                     
  6641                           ;Projekt.c: 145:     TRISCbits.RC2 = 1;
  6642  002F14  8494               	bsf	148,2,c	;volatile
  6643  002F16                     
  6644                           ;Projekt.c: 146:     PSTR1CONbits.STR1A = 1;
  6645  002F16  80B9               	bsf	185,0,c	;volatile
  6646  002F18                     
  6647                           ;Projekt.c: 147:     PSTR1CONbits.STR1B = 1;
  6648  002F18  82B9               	bsf	185,1,c	;volatile
  6649                           
  6650                           ;Projekt.c: 149:     CCPTMRS0bits.C1TSEL = 0b00;
  6651  002F1A  0EFC               	movlw	-4
  6652  002F1C  010F               	movlb	15	; () banked
  6653  002F1E  1749               	andwf	73,f,b	;volatile
  6654                           
  6655                           ;Projekt.c: 150:     PR2 = 199;
  6656  002F20  0EC7               	movlw	199
  6657  002F22  6EBB               	movwf	187,c	;volatile
  6658                           
  6659                           ;Projekt.c: 151:     CCP1CONbits.P1M = 0b00;
  6660  002F24  0E3F               	movlw	-193
  6661  002F26  16BD               	andwf	189,f,c	;volatile
  6662                           
  6663                           ;Projekt.c: 152:     CCP1CONbits.CCP1M = 0b1101;
  6664  002F28  50BD               	movf	189,w,c	;volatile
  6665  002F2A  0BF0               	andlw	-16
  6666  002F2C  090D               	iorlw	13
  6667  002F2E  6EBD               	movwf	189,c	;volatile
  6668                           
  6669                           ;Projekt.c: 153:     CCPR1L = 0;
  6670  002F30  0E00               	movlw	0
  6671  002F32  6EBE               	movwf	190,c	;volatile
  6672                           
  6673                           ;Projekt.c: 154:     T2CONbits.T2CKPS = 0b00;
  6674  002F34  0EFC               	movlw	-4
  6675  002F36  16BA               	andwf	186,f,c	;volatile
  6676  002F38                     
  6677                           ; BSR set to: 15
  6678                           ;Projekt.c: 155:     TMR2IF = 0;
  6679  002F38  929E               	bcf	3998,1,c	;volatile
  6680  002F3A                     
  6681                           ; BSR set to: 15
  6682                           ;Projekt.c: 156:     TMR2ON = 1;
  6683  002F3A  84BA               	bsf	4026,2,c	;volatile
  6684  002F3C                     l202:
  6685  002F3C  A29E               	btfss	3998,1,c	;volatile
  6686  002F3E  EFA3  F017         	goto	u2151
  6687  002F42  EFA5  F017         	goto	u2150
  6688  002F46                     u2151:
  6689  002F46  EF9E  F017         	goto	l202
  6690  002F4A                     u2150:
  6691  002F4A                     
  6692                           ;Projekt.c: 159:     TRISDbits.RD5 = 0;
  6693  002F4A  9A95               	bcf	149,5,c	;volatile
  6694                           
  6695                           ;Projekt.c: 160:     TRISCbits.RC2 = 0;
  6696  002F4C  9494               	bcf	148,2,c	;volatile
  6697  002F4E                     
  6698                           ;Projekt.c: 162:     ANSELE = 0b1;
  6699  002F4E  0E01               	movlw	1
  6700  002F50  010F               	movlb	15	; () banked
  6701  002F52  6F3C               	movwf	60,b	;volatile
  6702  002F54                     
  6703                           ; BSR set to: 15
  6704                           ;Projekt.c: 163:     ADCON2bits.ADFM = 1;
  6705  002F54  8EC0               	bsf	192,7,c	;volatile
  6706                           
  6707                           ;Projekt.c: 164:     ADCON2bits.ADCS = 0b110;
  6708  002F56  50C0               	movf	192,w,c	;volatile
  6709  002F58  0BF8               	andlw	-8
  6710  002F5A  0906               	iorlw	6
  6711  002F5C  6EC0               	movwf	192,c	;volatile
  6712                           
  6713                           ;Projekt.c: 165:     ADCON2bits.ACQT = 0b110;
  6714  002F5E  50C0               	movf	192,w,c	;volatile
  6715  002F60  0BC7               	andlw	-57
  6716  002F62  0930               	iorlw	48
  6717  002F64  6EC0               	movwf	192,c	;volatile
  6718  002F66                     
  6719                           ; BSR set to: 15
  6720                           ;Projekt.c: 166:     ADCON0bits.ADON = 1;
  6721  002F66  80C2               	bsf	194,0,c	;volatile
  6722                           
  6723                           ;Projekt.c: 167:     ADCON0bits.CHS = 5;
  6724  002F68  50C2               	movf	194,w,c	;volatile
  6725  002F6A  0B83               	andlw	-125
  6726  002F6C  0914               	iorlw	20
  6727  002F6E  6EC2               	movwf	194,c	;volatile
  6728  002F70                     
  6729                           ; BSR set to: 15
  6730                           ;Projekt.c: 169:     ADIF = 0;
  6731  002F70  9C9E               	bcf	3998,6,c	;volatile
  6732  002F72                     
  6733                           ; BSR set to: 15
  6734                           ;Projekt.c: 170:     ADIE = 1;
  6735  002F72  8C9D               	bsf	3997,6,c	;volatile
  6736  002F74                     
  6737                           ; BSR set to: 15
  6738                           ;Projekt.c: 171:     PEIE = 1;
  6739  002F74  8CF2               	bsf	4082,6,c	;volatile
  6740  002F76                     
  6741                           ; BSR set to: 15
  6742                           ;Projekt.c: 172:     GIE = 1;
  6743  002F76  8EF2               	bsf	4082,7,c	;volatile
  6744  002F78                     
  6745                           ; BSR set to: 15
  6746  002F78  0012               	return		;funcret
  6747  002F7A                     __end_of_PWM_init:
  6748                           	opt callstack 0
  6749                           
  6750 ;; *************** function _Morseovka *****************
  6751 ;; Defined at:
  6752 ;;		line 340 in file "Projekt.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  i               2   31[BANK0 ] int 
  6757 ;;  j               2    0        int 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  1    wreg      void 
  6760 ;; Registers used:
  6761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;Total ram usage:        7 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    9
  6774 ;; This function calls:
  6775 ;;		_LCD_Clear
  6776 ;;		_LCD_ShowString
  6777 ;;		_Morseovka_init
  6778 ;;		_printf
  6779 ;;		_sprintf
  6780 ;; This function is called by:
  6781 ;;		_main
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           	psect	text10
  6786  000DDE                     __ptext10:
  6787                           	opt callstack 0
  6788  000DDE                     _Morseovka:
  6789                           	opt callstack 21
  6790  000DDE                     
  6791                           ;Projekt.c: 341:     Morseovka_init();
  6792  000DDE  EC11  F019         	call	_Morseovka_init	;wreg free
  6793  000DE2                     
  6794                           ;Projekt.c: 342:     LCD_Clear();
  6795  000DE2  ECA1  F018         	call	_LCD_Clear	;wreg free
  6796  000DE6                     
  6797                           ;Projekt.c: 346:     printf("Enter only valid characters :)\n\n\n");
  6798  000DE6  0E13               	movlw	low STR_21
  6799  000DE8  0100               	movlb	0	; () banked
  6800  000DEA  6F68               	movwf	printf@fmt& (0+255),b
  6801  000DEC  0EFB               	movlw	high STR_21
  6802  000DEE  6F69               	movwf	(printf@fmt+1)& (0+255),b
  6803  000DF0  ECEA  F018         	call	_printf	;wreg free
  6804  000DF4                     l5323:
  6805                           
  6806                           ;Projekt.c: 349:         sprintf(nadpis1,"Morse translator");
  6807  000DF4  0EEC               	movlw	low _nadpis1
  6808  000DF6  0100               	movlb	0	; () banked
  6809  000DF8  6F68               	movwf	sprintf@s& (0+255),b
  6810  000DFA  0E00               	movlw	high _nadpis1
  6811  000DFC  6F69               	movwf	(sprintf@s+1)& (0+255),b
  6812  000DFE  0ECC               	movlw	low STR_22
  6813  000E00  6F6A               	movwf	sprintf@fmt& (0+255),b
  6814  000E02  0EFE               	movlw	high STR_22
  6815  000E04  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  6816  000E06  EC1B  F018         	call	_sprintf	;wreg free
  6817  000E0A                     
  6818                           ;Projekt.c: 350:         LCD_ShowString(1,nadpis1);
  6819  000E0A  0EEC               	movlw	low _nadpis1
  6820  000E0C  6E06               	movwf	LCD_ShowString@textData^0,c
  6821  000E0E  0E00               	movlw	high _nadpis1
  6822  000E10  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  6823  000E12  0E01               	movlw	1
  6824  000E14  EC3D  F017         	call	_LCD_ShowString
  6825  000E18                     
  6826                           ;Projekt.c: 351:         sprintf(nadpis2,"translating...  ");
  6827  000E18  0EDB               	movlw	low _nadpis2
  6828  000E1A  0100               	movlb	0	; () banked
  6829  000E1C  6F68               	movwf	sprintf@s& (0+255),b
  6830  000E1E  0E00               	movlw	high _nadpis2
  6831  000E20  6F69               	movwf	(sprintf@s+1)& (0+255),b
  6832  000E22  0E33               	movlw	low STR_23
  6833  000E24  6F6A               	movwf	sprintf@fmt& (0+255),b
  6834  000E26  0EFE               	movlw	high STR_23
  6835  000E28  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  6836  000E2A  EC1B  F018         	call	_sprintf	;wreg free
  6837  000E2E                     
  6838                           ;Projekt.c: 352:         LCD_ShowString(2,nadpis2);
  6839  000E2E  0EDB               	movlw	low _nadpis2
  6840  000E30  6E06               	movwf	LCD_ShowString@textData^0,c
  6841  000E32  0E00               	movlw	high _nadpis2
  6842  000E34  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  6843  000E36  0E02               	movlw	2
  6844  000E38  EC3D  F017         	call	_LCD_ShowString
  6845  000E3C                     
  6846                           ;Projekt.c: 353:         if (n!=0){
  6847  000E3C  0100               	movlb	0	; () banked
  6848  000E3E  51D2               	movf	_n& (0+255),w,b	;volatile
  6849  000E40  11D3               	iorwf	(_n+1)& (0+255),w,b	;volatile
  6850  000E42  11D4               	iorwf	(_n+2)& (0+255),w,b	;volatile
  6851  000E44  B4D8               	btfsc	status,2,c
  6852  000E46  EF27  F007         	goto	u3521
  6853  000E4A  EF29  F007         	goto	u3520
  6854  000E4E                     u3521:
  6855  000E4E  EFC0  F009         	goto	l5431
  6856  000E52                     u3520:
  6857  000E52                     
  6858                           ; BSR set to: 0
  6859                           ;Projekt.c: 354:         printf("\nPREKLAD:  ");
  6860  000E52  0EBB               	movlw	low STR_24
  6861  000E54  6F68               	movwf	printf@fmt& (0+255),b
  6862  000E56  0EFF               	movlw	high STR_24
  6863  000E58  6F69               	movwf	(printf@fmt+1)& (0+255),b
  6864  000E5A  ECEA  F018         	call	_printf	;wreg free
  6865  000E5E                     
  6866                           ;Projekt.c: 355:         for(i=0;i<n;i++){
  6867  000E5E  0E00               	movlw	0
  6868  000E60  0100               	movlb	0	; () banked
  6869  000E62  6F80               	movwf	(Morseovka@i+1)& (0+255),b
  6870  000E64  0E00               	movlw	0
  6871  000E66  6F7F               	movwf	Morseovka@i& (0+255),b
  6872  000E68  EFA0  F009         	goto	l5425
  6873  000E6C                     l5337:
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;Projekt.c: 360:                     printf(" . - |");
  6877  000E6C  0ED6               	movlw	low (STR_41+4)
  6878  000E6E  6F68               	movwf	printf@fmt& (0+255),b
  6879  000E70  0EFF               	movlw	high (STR_41+4)
  6880  000E72  6F69               	movwf	(printf@fmt+1)& (0+255),b
  6881  000E74  ECEA  F018         	call	_printf	;wreg free
  6882                           
  6883                           ;Projekt.c: 361:                     break;
  6884  000E78  EF9D  F009         	goto	l5423
  6885  000E7C                     l5339:
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;Projekt.c: 364:                     printf(" - . . . |");
  6889  000E7C  0E96               	movlw	low (STR_58+2)
  6890  000E7E  6F68               	movwf	printf@fmt& (0+255),b
  6891  000E80  0EFF               	movlw	high (STR_58+2)
  6892  000E82  6F69               	movwf	(printf@fmt+1)& (0+255),b
  6893  000E84  ECEA  F018         	call	_printf	;wreg free
  6894                           
  6895                           ;Projekt.c: 365:                     break;
  6896  000E88  EF9D  F009         	goto	l5423
  6897  000E8C                     l5341:
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;Projekt.c: 368:                     printf(" - . - . |");
  6901  000E8C  0EE3               	movlw	low (STR_61+6)
  6902  000E8E  6F68               	movwf	printf@fmt& (0+255),b
  6903  000E90  0EFE               	movlw	high (STR_61+6)
  6904  000E92  6F69               	movwf	(printf@fmt+1)& (0+255),b
  6905  000E94  ECEA  F018         	call	_printf	;wreg free
  6906                           
  6907                           ;Projekt.c: 369:                     break;
  6908  000E98  EF9D  F009         	goto	l5423
  6909  000E9C                     l5343:
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;Projekt.c: 372:                     printf(" - . . |");
  6913  000E9C  0E8B               	movlw	low (STR_59+4)
  6914  000E9E  6F68               	movwf	printf@fmt& (0+255),b
  6915  000EA0  0EFF               	movlw	high (STR_59+4)
  6916  000EA2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  6917  000EA4  ECEA  F018         	call	_printf	;wreg free
  6918                           
  6919                           ;Projekt.c: 373:                     break;
  6920  000EA8  EF9D  F009         	goto	l5423
  6921  000EAC                     l5345:
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;Projekt.c: 376:                     printf(" . |");
  6925  000EAC  0E82               	movlw	low (STR_60+8)
  6926  000EAE  6F68               	movwf	printf@fmt& (0+255),b
  6927  000EB0  0EFF               	movlw	high (STR_60+8)
  6928  000EB2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  6929  000EB4  ECEA  F018         	call	_printf	;wreg free
  6930                           
  6931                           ;Projekt.c: 377:                     break;
  6932  000EB8  EF9D  F009         	goto	l5423
  6933  000EBC                     l5347:
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;Projekt.c: 380:                     printf(" . . - . |");
  6937  000EBC  0EE8               	movlw	low STR_30
  6938  000EBE  6F68               	movwf	printf@fmt& (0+255),b
  6939  000EC0  0EFF               	movlw	high STR_30
  6940  000EC2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  6941  000EC4  ECEA  F018         	call	_printf	;wreg free
  6942                           
  6943                           ;Projekt.c: 381:                     break;
  6944  000EC8  EF9D  F009         	goto	l5423
  6945  000ECC                     l5349:
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;Projekt.c: 384:                     printf(" - - . |");
  6949  000ECC  0E7E               	movlw	low (STR_60+4)
  6950  000ECE  6F68               	movwf	printf@fmt& (0+255),b
  6951  000ED0  0EFF               	movlw	high (STR_60+4)
  6952  000ED2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  6953  000ED4  ECEA  F018         	call	_printf	;wreg free
  6954                           
  6955                           ;Projekt.c: 385:                     break;
  6956  000ED8  EF9D  F009         	goto	l5423
  6957  000EDC                     l5351:
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;Projekt.c: 388:                     printf(" . . . . |");
  6961  000EDC  0EA3               	movlw	low (STR_57+2)
  6962  000EDE  6F68               	movwf	printf@fmt& (0+255),b
  6963  000EE0  0EFF               	movlw	high (STR_57+2)
  6964  000EE2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  6965  000EE4  ECEA  F018         	call	_printf	;wreg free
  6966                           
  6967                           ;Projekt.c: 389:                     break;
  6968  000EE8  EF9D  F009         	goto	l5423
  6969  000EEC                     l5353:
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;Projekt.c: 392:                     printf(" . . |");
  6973  000EEC  0E8D               	movlw	low (STR_59+6)
  6974  000EEE  6F68               	movwf	printf@fmt& (0+255),b
  6975  000EF0  0EFF               	movlw	high (STR_59+6)
  6976  000EF2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  6977  000EF4  ECEA  F018         	call	_printf	;wreg free
  6978                           
  6979                           ;Projekt.c: 393:                     break;
  6980  000EF8  EF9D  F009         	goto	l5423
  6981  000EFC                     l5355:
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;Projekt.c: 396:                     printf(" . - - - |");
  6985  000EFC  0E48               	movlw	low (STR_53+2)
  6986  000EFE  6F68               	movwf	printf@fmt& (0+255),b
  6987  000F00  0EFF               	movlw	high (STR_53+2)
  6988  000F02  6F69               	movwf	(printf@fmt+1)& (0+255),b
  6989  000F04  ECEA  F018         	call	_printf	;wreg free
  6990                           
  6991                           ;Projekt.c: 397:                     break;
  6992  000F08  EF9D  F009         	goto	l5423
  6993  000F0C                     l5357:
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;Projekt.c: 400:                     printf(" - . - |");
  6997  000F0C  0ED4               	movlw	low (STR_41+2)
  6998  000F0E  6F68               	movwf	printf@fmt& (0+255),b
  6999  000F10  0EFF               	movlw	high (STR_41+2)
  7000  000F12  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7001  000F14  ECEA  F018         	call	_printf	;wreg free
  7002                           
  7003                           ;Projekt.c: 401:                     break;
  7004  000F18  EF9D  F009         	goto	l5423
  7005  000F1C                     l5359:
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;Projekt.c: 404:                     printf(" . - . . |");
  7009  000F1C  0EF3               	movlw	low STR_36
  7010  000F1E  6F68               	movwf	printf@fmt& (0+255),b
  7011  000F20  0EFF               	movlw	high STR_36
  7012  000F22  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7013  000F24  ECEA  F018         	call	_printf	;wreg free
  7014                           
  7015                           ;Projekt.c: 405:                     break;
  7016  000F28  EF9D  F009         	goto	l5423
  7017  000F2C                     l5361:
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;Projekt.c: 408:                     printf(" - - |");
  7021  000F2C  0E32               	movlw	low (STR_51+6)
  7022  000F2E  6F68               	movwf	printf@fmt& (0+255),b
  7023  000F30  0EFF               	movlw	high (STR_51+6)
  7024  000F32  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7025  000F34  ECEA  F018         	call	_printf	;wreg free
  7026                           
  7027                           ;Projekt.c: 409:                     break;
  7028  000F38  EF9D  F009         	goto	l5423
  7029  000F3C                     l5363:
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;Projekt.c: 412:                     printf(" - . |");
  7033  000F3C  0E80               	movlw	low (STR_60+6)
  7034  000F3E  6F68               	movwf	printf@fmt& (0+255),b
  7035  000F40  0EFF               	movlw	high (STR_60+6)
  7036  000F42  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7037  000F44  ECEA  F018         	call	_printf	;wreg free
  7038                           
  7039                           ;Projekt.c: 413:                     break;
  7040  000F48  EF9D  F009         	goto	l5423
  7041  000F4C                     l5365:
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;Projekt.c: 416:                     printf(" - - - |");
  7045  000F4C  0E30               	movlw	low (STR_51+4)
  7046  000F4E  6F68               	movwf	printf@fmt& (0+255),b
  7047  000F50  0EFF               	movlw	high (STR_51+4)
  7048  000F52  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7049  000F54  ECEA  F018         	call	_printf	;wreg free
  7050                           
  7051                           ;Projekt.c: 417:                     break;
  7052  000F58  EF9D  F009         	goto	l5423
  7053  000F5C                     l5367:
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;Projekt.c: 420:                     printf(" . - - . |");
  7057  000F5C  0EDD               	movlw	low STR_40
  7058  000F5E  6F68               	movwf	printf@fmt& (0+255),b
  7059  000F60  0EFF               	movlw	high STR_40
  7060  000F62  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7061  000F64  ECEA  F018         	call	_printf	;wreg free
  7062                           
  7063                           ;Projekt.c: 421:                     break;
  7064  000F68  EF9D  F009         	goto	l5423
  7065  000F6C                     l5369:
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;Projekt.c: 424:                     printf(" - - . - |");
  7069  000F6C  0ED2               	movlw	low STR_41
  7070  000F6E  6F68               	movwf	printf@fmt& (0+255),b
  7071  000F70  0EFF               	movlw	high STR_41
  7072  000F72  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7073  000F74  ECEA  F018         	call	_printf	;wreg free
  7074                           
  7075                           ;Projekt.c: 425:                     break;
  7076  000F78  EF9D  F009         	goto	l5423
  7077  000F7C                     l5371:
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;Projekt.c: 428:                     printf(" . - . |");
  7081  000F7C  0EE5               	movlw	low (STR_61+8)
  7082  000F7E  6F68               	movwf	printf@fmt& (0+255),b
  7083  000F80  0EFE               	movlw	high (STR_61+8)
  7084  000F82  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7085  000F84  ECEA  F018         	call	_printf	;wreg free
  7086                           
  7087                           ;Projekt.c: 429:                     break;
  7088  000F88  EF9D  F009         	goto	l5423
  7089  000F8C                     l5373:
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;Projekt.c: 432:                     printf(" . . . |");
  7093  000F8C  0E98               	movlw	low (STR_58+4)
  7094  000F8E  6F68               	movwf	printf@fmt& (0+255),b
  7095  000F90  0EFF               	movlw	high (STR_58+4)
  7096  000F92  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7097  000F94  ECEA  F018         	call	_printf	;wreg free
  7098                           
  7099                           ;Projekt.c: 433:                     break;
  7100  000F98  EF9D  F009         	goto	l5423
  7101  000F9C                     l5375:
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;Projekt.c: 436:                     printf(" - |");
  7105  000F9C  0E34               	movlw	low (STR_51+8)
  7106  000F9E  6F68               	movwf	printf@fmt& (0+255),b
  7107  000FA0  0EFF               	movlw	high (STR_51+8)
  7108  000FA2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7109  000FA4  ECEA  F018         	call	_printf	;wreg free
  7110                           
  7111                           ;Projekt.c: 437:                     break;
  7112  000FA8  EF9D  F009         	goto	l5423
  7113  000FAC                     l5377:
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;Projekt.c: 440:                     printf(" . . - |");
  7117  000FAC  0E64               	movlw	low (STR_63+4)
  7118  000FAE  6F68               	movwf	printf@fmt& (0+255),b
  7119  000FB0  0EFF               	movlw	high (STR_63+4)
  7120  000FB2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7121  000FB4  ECEA  F018         	call	_printf	;wreg free
  7122                           
  7123                           ;Projekt.c: 441:                     break;
  7124  000FB8  EF9D  F009         	goto	l5423
  7125  000FBC                     l5379:
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;Projekt.c: 444:                     printf(" . . . - |");
  7129  000FBC  0E6F               	movlw	low (STR_55+2)
  7130  000FBE  6F68               	movwf	printf@fmt& (0+255),b
  7131  000FC0  0EFF               	movlw	high (STR_55+2)
  7132  000FC2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7133  000FC4  ECEA  F018         	call	_printf	;wreg free
  7134                           
  7135                           ;Projekt.c: 445:                     break;
  7136  000FC8  EF9D  F009         	goto	l5423
  7137  000FCC                     l5381:
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;Projekt.c: 448:                     printf(" . - - |");
  7141  000FCC  0EC9               	movlw	low (STR_49+2)
  7142  000FCE  6F68               	movwf	printf@fmt& (0+255),b
  7143  000FD0  0EFF               	movlw	high (STR_49+2)
  7144  000FD2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7145  000FD4  ECEA  F018         	call	_printf	;wreg free
  7146                           
  7147                           ;Projekt.c: 449:                     break;
  7148  000FD8  EF9D  F009         	goto	l5423
  7149  000FDC                     l5383:
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;Projekt.c: 452:                     printf(" - . . - |");
  7153  000FDC  0E62               	movlw	low (STR_63+2)
  7154  000FDE  6F68               	movwf	printf@fmt& (0+255),b
  7155  000FE0  0EFF               	movlw	high (STR_63+2)
  7156  000FE2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7157  000FE4  ECEA  F018         	call	_printf	;wreg free
  7158                           
  7159                           ;Projekt.c: 453:                     break;
  7160  000FE8  EF9D  F009         	goto	l5423
  7161  000FEC                     l5385:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;Projekt.c: 456:                     printf(" - . - - |");
  7165  000FEC  0EC7               	movlw	low STR_49
  7166  000FEE  6F68               	movwf	printf@fmt& (0+255),b
  7167  000FF0  0EFF               	movlw	high STR_49
  7168  000FF2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7169  000FF4  ECEA  F018         	call	_printf	;wreg free
  7170                           
  7171                           ;Projekt.c: 457:                     break;
  7172  000FF8  EF9D  F009         	goto	l5423
  7173  000FFC                     l5387:
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;Projekt.c: 460:                     printf(" - - . . |");
  7177  000FFC  0E89               	movlw	low (STR_59+2)
  7178  000FFE  6F68               	movwf	printf@fmt& (0+255),b
  7179  001000  0EFF               	movlw	high (STR_59+2)
  7180  001002  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7181  001004  ECEA  F018         	call	_printf	;wreg free
  7182                           
  7183                           ;Projekt.c: 461:                     break;
  7184  001008  EF9D  F009         	goto	l5423
  7185  00100C                     l5389:
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;Projekt.c: 463:                     printf(" - - - - - |");
  7189  00100C  0E2C               	movlw	low STR_51
  7190  00100E  6F68               	movwf	printf@fmt& (0+255),b
  7191  001010  0EFF               	movlw	high STR_51
  7192  001012  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7193  001014  ECEA  F018         	call	_printf	;wreg free
  7194                           
  7195                           ;Projekt.c: 464:                     break;
  7196  001018  EF9D  F009         	goto	l5423
  7197  00101C                     l5391:
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;Projekt.c: 466:                     printf(" . - - - - |");
  7201  00101C  0E39               	movlw	low STR_52
  7202  00101E  6F68               	movwf	printf@fmt& (0+255),b
  7203  001020  0EFF               	movlw	high STR_52
  7204  001022  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7205  001024  ECEA  F018         	call	_printf	;wreg free
  7206                           
  7207                           ;Projekt.c: 467:                     break;
  7208  001028  EF9D  F009         	goto	l5423
  7209  00102C                     l5393:
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;Projekt.c: 469:                     printf(" . . - - - |");
  7213  00102C  0E46               	movlw	low STR_53
  7214  00102E  6F68               	movwf	printf@fmt& (0+255),b
  7215  001030  0EFF               	movlw	high STR_53
  7216  001032  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7217  001034  ECEA  F018         	call	_printf	;wreg free
  7218                           
  7219                           ;Projekt.c: 470:                     break;
  7220  001038  EF9D  F009         	goto	l5423
  7221  00103C                     l5395:
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;Projekt.c: 472:                     printf(" . . . - - |");
  7225  00103C  0E53               	movlw	low STR_54
  7226  00103E  6F68               	movwf	printf@fmt& (0+255),b
  7227  001040  0EFF               	movlw	high STR_54
  7228  001042  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7229  001044  ECEA  F018         	call	_printf	;wreg free
  7230                           
  7231                           ;Projekt.c: 473:                     break;
  7232  001048  EF9D  F009         	goto	l5423
  7233  00104C                     l5397:
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;Projekt.c: 475:                     printf(" . . . . - |");
  7237  00104C  0E6D               	movlw	low STR_55
  7238  00104E  6F68               	movwf	printf@fmt& (0+255),b
  7239  001050  0EFF               	movlw	high STR_55
  7240  001052  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7241  001054  ECEA  F018         	call	_printf	;wreg free
  7242                           
  7243                           ;Projekt.c: 476:                     break;
  7244  001058  EF9D  F009         	goto	l5423
  7245  00105C                     l5399:
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;Projekt.c: 478:                     printf(" . . . . . |");
  7249  00105C  0EAE               	movlw	low STR_56
  7250  00105E  6F68               	movwf	printf@fmt& (0+255),b
  7251  001060  0EFF               	movlw	high STR_56
  7252  001062  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7253  001064  ECEA  F018         	call	_printf	;wreg free
  7254                           
  7255                           ;Projekt.c: 479:                     break;
  7256  001068  EF9D  F009         	goto	l5423
  7257  00106C                     l5401:
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;Projekt.c: 481:                     printf(" - . . . . |");
  7261  00106C  0EA1               	movlw	low STR_57
  7262  00106E  6F68               	movwf	printf@fmt& (0+255),b
  7263  001070  0EFF               	movlw	high STR_57
  7264  001072  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7265  001074  ECEA  F018         	call	_printf	;wreg free
  7266                           
  7267                           ;Projekt.c: 482:                     break;
  7268  001078  EF9D  F009         	goto	l5423
  7269  00107C                     l5403:
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;Projekt.c: 484:                     printf(" - - . . . |");
  7273  00107C  0E94               	movlw	low STR_58
  7274  00107E  6F68               	movwf	printf@fmt& (0+255),b
  7275  001080  0EFF               	movlw	high STR_58
  7276  001082  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7277  001084  ECEA  F018         	call	_printf	;wreg free
  7278                           
  7279                           ;Projekt.c: 485:                     break;
  7280  001088  EF9D  F009         	goto	l5423
  7281  00108C                     l5405:
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;Projekt.c: 487:                     printf(" - - - . . |");
  7285  00108C  0E87               	movlw	low STR_59
  7286  00108E  6F68               	movwf	printf@fmt& (0+255),b
  7287  001090  0EFF               	movlw	high STR_59
  7288  001092  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7289  001094  ECEA  F018         	call	_printf	;wreg free
  7290                           
  7291                           ;Projekt.c: 488:                     break;
  7292  001098  EF9D  F009         	goto	l5423
  7293  00109C                     l5407:
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;Projekt.c: 490:                     printf(" - - - - . |");
  7297  00109C  0E7A               	movlw	low STR_60
  7298  00109E  6F68               	movwf	printf@fmt& (0+255),b
  7299  0010A0  0EFF               	movlw	high STR_60
  7300  0010A2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7301  0010A4  ECEA  F018         	call	_printf	;wreg free
  7302                           
  7303                           ;Projekt.c: 491:                     break;
  7304  0010A8  EF9D  F009         	goto	l5423
  7305  0010AC                     l5409:
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;Projekt.c: 493:                     printf(" . - . - . - . |");
  7309  0010AC  0EDD               	movlw	low STR_61
  7310  0010AE  6F68               	movwf	printf@fmt& (0+255),b
  7311  0010B0  0EFE               	movlw	high STR_61
  7312  0010B2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7313  0010B4  ECEA  F018         	call	_printf	;wreg free
  7314                           
  7315                           ;Projekt.c: 494:                     break;
  7316  0010B8  EF9D  F009         	goto	l5423
  7317  0010BC                     l5411:
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;Projekt.c: 496:                     printf(" - - . . - - |");
  7321  0010BC  0E0E               	movlw	low STR_62
  7322  0010BE  6F68               	movwf	printf@fmt& (0+255),b
  7323  0010C0  0EFF               	movlw	high STR_62
  7324  0010C2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7325  0010C4  ECEA  F018         	call	_printf	;wreg free
  7326                           
  7327                           ;Projekt.c: 497:                     break;
  7328  0010C8  EF9D  F009         	goto	l5423
  7329  0010CC                     l5413:
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;Projekt.c: 499:                     printf(" - - . . - |");
  7333  0010CC  0E60               	movlw	low STR_63
  7334  0010CE  6F68               	movwf	printf@fmt& (0+255),b
  7335  0010D0  0EFF               	movlw	high STR_63
  7336  0010D2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7337  0010D4  ECEA  F018         	call	_printf	;wreg free
  7338                           
  7339                           ;Projekt.c: 500:                     break;
  7340  0010D8  EF9D  F009         	goto	l5423
  7341  0010DC                     l5415:
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;Projekt.c: 502:                     printf(" . . - - . . |");
  7345  0010DC  0E1D               	movlw	low STR_64
  7346  0010DE  6F68               	movwf	printf@fmt& (0+255),b
  7347  0010E0  0EFF               	movlw	high STR_64
  7348  0010E2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7349  0010E4  ECEA  F018         	call	_printf	;wreg free
  7350                           
  7351                           ;Projekt.c: 503:                     break;
  7352  0010E8  EF9D  F009         	goto	l5423
  7353  0010EC                     l5417:
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;Projekt.c: 505:                     printf("|");
  7357  0010EC  0E37               	movlw	low (STR_51+11)
  7358  0010EE  6F68               	movwf	printf@fmt& (0+255),b
  7359  0010F0  0EFF               	movlw	high (STR_51+11)
  7360  0010F2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7361  0010F4  ECEA  F018         	call	_printf	;wreg free
  7362                           
  7363                           ;Projekt.c: 506:                     break;
  7364  0010F8  EF9D  F009         	goto	l5423
  7365  0010FC                     l5421:
  7366                           
  7367                           ; BSR set to: 0
  7368  0010FC  0E00               	movlw	low _zapis
  7369  0010FE  257F               	addwf	Morseovka@i& (0+255),w,b
  7370  001100  6ED9               	movwf	fsr2l,c
  7371  001102  0E01               	movlw	high _zapis
  7372  001104  2180               	addwfc	(Morseovka@i+1)& (0+255),w,b
  7373  001106  6EDA               	movwf	fsr2h,c
  7374  001108  50DF               	movf	indf2,w,c
  7375  00110A  6F7A               	movwf	??_Morseovka& (0+255),b
  7376  00110C  6B7B               	clrf	(??_Morseovka+1)& (0+255),b
  7377                           
  7378                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7379                           ; Switch size 1, requested type "simple"
  7380                           ; Number of cases is 1, Range of values is 0 to 0
  7381                           ; switch strategies available:
  7382                           ; Name         Instructions Cycles
  7383                           ; simple_byte            4     3 (average)
  7384                           ;	Chosen strategy is simple_byte
  7385  00110E  517B               	movf	(??_Morseovka+1)& (0+255),w,b
  7386  001110  0A00               	xorlw	0	; case 0
  7387  001112  B4D8               	btfsc	status,2,c
  7388  001114  EF8E  F008         	goto	l6387
  7389  001118  EF9D  F009         	goto	l5423
  7390  00111C                     l6387:
  7391                           
  7392                           ; BSR set to: 0
  7393                           ; Switch size 1, requested type "simple"
  7394                           ; Number of cases is 67, Range of values is 32 to 122
  7395                           ; switch strategies available:
  7396                           ; Name         Instructions Cycles
  7397                           ; simple_byte          202   102 (average)
  7398                           ;	Chosen strategy is simple_byte
  7399  00111C  517A               	movf	??_Morseovka& (0+255),w,b
  7400  00111E  0A20               	xorlw	32	; case 32
  7401  001120  B4D8               	btfsc	status,2,c
  7402  001122  EF76  F008         	goto	l5417
  7403  001126  0A01               	xorlw	1	; case 33
  7404  001128  B4D8               	btfsc	status,2,c
  7405  00112A  EF66  F008         	goto	l5413
  7406  00112E  0A0D               	xorlw	13	; case 44
  7407  001130  B4D8               	btfsc	status,2,c
  7408  001132  EF5E  F008         	goto	l5411
  7409  001136  0A02               	xorlw	2	; case 46
  7410  001138  B4D8               	btfsc	status,2,c
  7411  00113A  EF56  F008         	goto	l5409
  7412  00113E  0A1E               	xorlw	30	; case 48
  7413  001140  B4D8               	btfsc	status,2,c
  7414  001142  EF06  F008         	goto	l5389
  7415  001146  0A01               	xorlw	1	; case 49
  7416  001148  B4D8               	btfsc	status,2,c
  7417  00114A  EF0E  F008         	goto	l5391
  7418  00114E  0A03               	xorlw	3	; case 50
  7419  001150  B4D8               	btfsc	status,2,c
  7420  001152  EF16  F008         	goto	l5393
  7421  001156  0A01               	xorlw	1	; case 51
  7422  001158  B4D8               	btfsc	status,2,c
  7423  00115A  EF1E  F008         	goto	l5395
  7424  00115E  0A07               	xorlw	7	; case 52
  7425  001160  B4D8               	btfsc	status,2,c
  7426  001162  EF26  F008         	goto	l5397
  7427  001166  0A01               	xorlw	1	; case 53
  7428  001168  B4D8               	btfsc	status,2,c
  7429  00116A  EF2E  F008         	goto	l5399
  7430  00116E  0A03               	xorlw	3	; case 54
  7431  001170  B4D8               	btfsc	status,2,c
  7432  001172  EF36  F008         	goto	l5401
  7433  001176  0A01               	xorlw	1	; case 55
  7434  001178  B4D8               	btfsc	status,2,c
  7435  00117A  EF3E  F008         	goto	l5403
  7436  00117E  0A0F               	xorlw	15	; case 56
  7437  001180  B4D8               	btfsc	status,2,c
  7438  001182  EF46  F008         	goto	l5405
  7439  001186  0A01               	xorlw	1	; case 57
  7440  001188  B4D8               	btfsc	status,2,c
  7441  00118A  EF4E  F008         	goto	l5407
  7442  00118E  0A06               	xorlw	6	; case 63
  7443  001190  B4D8               	btfsc	status,2,c
  7444  001192  EF6E  F008         	goto	l5415
  7445  001196  0A7E               	xorlw	126	; case 65
  7446  001198  B4D8               	btfsc	status,2,c
  7447  00119A  EF36  F007         	goto	l5337
  7448  00119E  0A03               	xorlw	3	; case 66
  7449  0011A0  B4D8               	btfsc	status,2,c
  7450  0011A2  EF3E  F007         	goto	l5339
  7451  0011A6  0A01               	xorlw	1	; case 67
  7452  0011A8  B4D8               	btfsc	status,2,c
  7453  0011AA  EF46  F007         	goto	l5341
  7454  0011AE  0A07               	xorlw	7	; case 68
  7455  0011B0  B4D8               	btfsc	status,2,c
  7456  0011B2  EF4E  F007         	goto	l5343
  7457  0011B6  0A01               	xorlw	1	; case 69
  7458  0011B8  B4D8               	btfsc	status,2,c
  7459  0011BA  EF56  F007         	goto	l5345
  7460  0011BE  0A03               	xorlw	3	; case 70
  7461  0011C0  B4D8               	btfsc	status,2,c
  7462  0011C2  EF5E  F007         	goto	l5347
  7463  0011C6  0A01               	xorlw	1	; case 71
  7464  0011C8  B4D8               	btfsc	status,2,c
  7465  0011CA  EF66  F007         	goto	l5349
  7466  0011CE  0A0F               	xorlw	15	; case 72
  7467  0011D0  B4D8               	btfsc	status,2,c
  7468  0011D2  EF6E  F007         	goto	l5351
  7469  0011D6  0A01               	xorlw	1	; case 73
  7470  0011D8  B4D8               	btfsc	status,2,c
  7471  0011DA  EF76  F007         	goto	l5353
  7472  0011DE  0A03               	xorlw	3	; case 74
  7473  0011E0  B4D8               	btfsc	status,2,c
  7474  0011E2  EF7E  F007         	goto	l5355
  7475  0011E6  0A01               	xorlw	1	; case 75
  7476  0011E8  B4D8               	btfsc	status,2,c
  7477  0011EA  EF86  F007         	goto	l5357
  7478  0011EE  0A07               	xorlw	7	; case 76
  7479  0011F0  B4D8               	btfsc	status,2,c
  7480  0011F2  EF8E  F007         	goto	l5359
  7481  0011F6  0A01               	xorlw	1	; case 77
  7482  0011F8  B4D8               	btfsc	status,2,c
  7483  0011FA  EF96  F007         	goto	l5361
  7484  0011FE  0A03               	xorlw	3	; case 78
  7485  001200  B4D8               	btfsc	status,2,c
  7486  001202  EF9E  F007         	goto	l5363
  7487  001206  0A01               	xorlw	1	; case 79
  7488  001208  B4D8               	btfsc	status,2,c
  7489  00120A  EFA6  F007         	goto	l5365
  7490  00120E  0A1F               	xorlw	31	; case 80
  7491  001210  B4D8               	btfsc	status,2,c
  7492  001212  EFAE  F007         	goto	l5367
  7493  001216  0A01               	xorlw	1	; case 81
  7494  001218  B4D8               	btfsc	status,2,c
  7495  00121A  EFB6  F007         	goto	l5369
  7496  00121E  0A03               	xorlw	3	; case 82
  7497  001220  B4D8               	btfsc	status,2,c
  7498  001222  EFBE  F007         	goto	l5371
  7499  001226  0A01               	xorlw	1	; case 83
  7500  001228  B4D8               	btfsc	status,2,c
  7501  00122A  EFC6  F007         	goto	l5373
  7502  00122E  0A07               	xorlw	7	; case 84
  7503  001230  B4D8               	btfsc	status,2,c
  7504  001232  EFCE  F007         	goto	l5375
  7505  001236  0A01               	xorlw	1	; case 85
  7506  001238  B4D8               	btfsc	status,2,c
  7507  00123A  EFD6  F007         	goto	l5377
  7508  00123E  0A03               	xorlw	3	; case 86
  7509  001240  B4D8               	btfsc	status,2,c
  7510  001242  EFDE  F007         	goto	l5379
  7511  001246  0A01               	xorlw	1	; case 87
  7512  001248  B4D8               	btfsc	status,2,c
  7513  00124A  EFE6  F007         	goto	l5381
  7514  00124E  0A0F               	xorlw	15	; case 88
  7515  001250  B4D8               	btfsc	status,2,c
  7516  001252  EFEE  F007         	goto	l5383
  7517  001256  0A01               	xorlw	1	; case 89
  7518  001258  B4D8               	btfsc	status,2,c
  7519  00125A  EFF6  F007         	goto	l5385
  7520  00125E  0A03               	xorlw	3	; case 90
  7521  001260  B4D8               	btfsc	status,2,c
  7522  001262  EFFE  F007         	goto	l5387
  7523  001266  0A3B               	xorlw	59	; case 97
  7524  001268  B4D8               	btfsc	status,2,c
  7525  00126A  EF36  F007         	goto	l5337
  7526  00126E  0A03               	xorlw	3	; case 98
  7527  001270  B4D8               	btfsc	status,2,c
  7528  001272  EF3E  F007         	goto	l5339
  7529  001276  0A01               	xorlw	1	; case 99
  7530  001278  B4D8               	btfsc	status,2,c
  7531  00127A  EF46  F007         	goto	l5341
  7532  00127E  0A07               	xorlw	7	; case 100
  7533  001280  B4D8               	btfsc	status,2,c
  7534  001282  EF4E  F007         	goto	l5343
  7535  001286  0A01               	xorlw	1	; case 101
  7536  001288  B4D8               	btfsc	status,2,c
  7537  00128A  EF56  F007         	goto	l5345
  7538  00128E  0A03               	xorlw	3	; case 102
  7539  001290  B4D8               	btfsc	status,2,c
  7540  001292  EF5E  F007         	goto	l5347
  7541  001296  0A01               	xorlw	1	; case 103
  7542  001298  B4D8               	btfsc	status,2,c
  7543  00129A  EF66  F007         	goto	l5349
  7544  00129E  0A0F               	xorlw	15	; case 104
  7545  0012A0  B4D8               	btfsc	status,2,c
  7546  0012A2  EF6E  F007         	goto	l5351
  7547  0012A6  0A01               	xorlw	1	; case 105
  7548  0012A8  B4D8               	btfsc	status,2,c
  7549  0012AA  EF76  F007         	goto	l5353
  7550  0012AE  0A03               	xorlw	3	; case 106
  7551  0012B0  B4D8               	btfsc	status,2,c
  7552  0012B2  EF7E  F007         	goto	l5355
  7553  0012B6  0A01               	xorlw	1	; case 107
  7554  0012B8  B4D8               	btfsc	status,2,c
  7555  0012BA  EF86  F007         	goto	l5357
  7556  0012BE  0A07               	xorlw	7	; case 108
  7557  0012C0  B4D8               	btfsc	status,2,c
  7558  0012C2  EF8E  F007         	goto	l5359
  7559  0012C6  0A01               	xorlw	1	; case 109
  7560  0012C8  B4D8               	btfsc	status,2,c
  7561  0012CA  EF96  F007         	goto	l5361
  7562  0012CE  0A03               	xorlw	3	; case 110
  7563  0012D0  B4D8               	btfsc	status,2,c
  7564  0012D2  EF9E  F007         	goto	l5363
  7565  0012D6  0A01               	xorlw	1	; case 111
  7566  0012D8  B4D8               	btfsc	status,2,c
  7567  0012DA  EFA6  F007         	goto	l5365
  7568  0012DE  0A1F               	xorlw	31	; case 112
  7569  0012E0  B4D8               	btfsc	status,2,c
  7570  0012E2  EFAE  F007         	goto	l5367
  7571  0012E6  0A01               	xorlw	1	; case 113
  7572  0012E8  B4D8               	btfsc	status,2,c
  7573  0012EA  EFB6  F007         	goto	l5369
  7574  0012EE  0A03               	xorlw	3	; case 114
  7575  0012F0  B4D8               	btfsc	status,2,c
  7576  0012F2  EFBE  F007         	goto	l5371
  7577  0012F6  0A01               	xorlw	1	; case 115
  7578  0012F8  B4D8               	btfsc	status,2,c
  7579  0012FA  EFC6  F007         	goto	l5373
  7580  0012FE  0A07               	xorlw	7	; case 116
  7581  001300  B4D8               	btfsc	status,2,c
  7582  001302  EFCE  F007         	goto	l5375
  7583  001306  0A01               	xorlw	1	; case 117
  7584  001308  B4D8               	btfsc	status,2,c
  7585  00130A  EFD6  F007         	goto	l5377
  7586  00130E  0A03               	xorlw	3	; case 118
  7587  001310  B4D8               	btfsc	status,2,c
  7588  001312  EFDE  F007         	goto	l5379
  7589  001316  0A01               	xorlw	1	; case 119
  7590  001318  B4D8               	btfsc	status,2,c
  7591  00131A  EFE6  F007         	goto	l5381
  7592  00131E  0A0F               	xorlw	15	; case 120
  7593  001320  B4D8               	btfsc	status,2,c
  7594  001322  EFEE  F007         	goto	l5383
  7595  001326  0A01               	xorlw	1	; case 121
  7596  001328  B4D8               	btfsc	status,2,c
  7597  00132A  EFF6  F007         	goto	l5385
  7598  00132E  0A03               	xorlw	3	; case 122
  7599  001330  B4D8               	btfsc	status,2,c
  7600  001332  EFFE  F007         	goto	l5387
  7601  001336  EF9D  F009         	goto	l5423
  7602  00133A                     l5423:
  7603                           
  7604                           ;Projekt.c: 508:         }
  7605  00133A  0100               	movlb	0	; () banked
  7606  00133C  4B7F               	infsnz	Morseovka@i& (0+255),f,b
  7607  00133E  2B80               	incf	(Morseovka@i+1)& (0+255),f,b
  7608  001340                     l5425:
  7609                           
  7610                           ; BSR set to: 0
  7611  001340  C07F  F07A         	movff	Morseovka@i,??_Morseovka
  7612  001344  C080  F07B         	movff	Morseovka@i+1,??_Morseovka+1
  7613  001348  6B7C               	clrf	(??_Morseovka+2)& (0+255),b
  7614  00134A  BF7B               	btfsc	(??_Morseovka+1)& (0+255),7,b
  7615  00134C  697C               	setf	(??_Morseovka+2)& (0+255),b
  7616  00134E  51D2               	movf	_n& (0+255),w,b	;volatile
  7617  001350  5D7A               	subwf	??_Morseovka& (0+255),w,b
  7618  001352  51D3               	movf	(_n+1)& (0+255),w,b	;volatile
  7619  001354  597B               	subwfb	(??_Morseovka+1)& (0+255),w,b
  7620  001356  51D4               	movf	(_n+2)& (0+255),w,b	;volatile
  7621  001358  597C               	subwfb	(??_Morseovka+2)& (0+255),w,b
  7622  00135A  A0D8               	btfss	status,0,c
  7623  00135C  EFB2  F009         	goto	u3531
  7624  001360  EFB4  F009         	goto	u3530
  7625  001364                     u3531:
  7626  001364  EF7E  F008         	goto	l5421
  7627  001368                     u3530:
  7628  001368                     
  7629                           ; BSR set to: 0
  7630                           ;Projekt.c: 509:         n=0;
  7631  001368  0E00               	movlw	0
  7632  00136A  6FD2               	movwf	_n& (0+255),b	;volatile
  7633  00136C  0E00               	movlw	0
  7634  00136E  6FD3               	movwf	(_n+1)& (0+255),b	;volatile
  7635  001370  0E00               	movlw	0
  7636  001372  6FD4               	movwf	(_n+2)& (0+255),b	;volatile
  7637  001374                     
  7638                           ; BSR set to: 0
  7639                           ;Projekt.c: 511:         printf("\n\n");
  7640  001374  0E32               	movlw	low (STR_21+31)
  7641  001376  6F68               	movwf	printf@fmt& (0+255),b
  7642  001378  0EFB               	movlw	high (STR_21+31)
  7643  00137A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  7644  00137C  ECEA  F018         	call	_printf	;wreg free
  7645  001380                     l5431:
  7646                           
  7647                           ;Projekt.c: 513:         if (PORTAbits.RA2){
  7648  001380  A480               	btfss	128,2,c	;volatile
  7649  001382  EFC5  F009         	goto	u3541
  7650  001386  EFC7  F009         	goto	u3540
  7651  00138A                     u3541:
  7652  00138A  EFFA  F006         	goto	l5323
  7653  00138E                     u3540:
  7654  00138E                     
  7655                           ;Projekt.c: 514:             _delay((unsigned long)((200)*(32E6/4000.0)));
  7656  00138E  0E09               	movlw	9
  7657  001390  0100               	movlb	0	; () banked
  7658  001392  6F7B               	movwf	(??_Morseovka+1)& (0+255),b
  7659  001394  0E1E               	movlw	30
  7660  001396  6F7A               	movwf	??_Morseovka& (0+255),b
  7661  001398  0EE4               	movlw	228
  7662  00139A                     u4477:
  7663  00139A  2EE8               	decfsz	wreg,f,c
  7664  00139C  D7FE               	bra	u4477
  7665  00139E  2F7A               	decfsz	??_Morseovka& (0+255),f,b
  7666  0013A0  D7FC               	bra	u4477
  7667  0013A2  2F7B               	decfsz	(??_Morseovka+1)& (0+255),f,b
  7668  0013A4  D7FA               	bra	u4477
  7669  0013A6  F000               	nop	
  7670  0013A8  0012               	return		;funcret
  7671  0013AA                     __end_of_Morseovka:
  7672                           	opt callstack 0
  7673                           
  7674 ;; *************** function _printf *****************
  7675 ;; Defined at:
  7676 ;;		line 5 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\printf.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  7679 ;;		 -> STR_66(3), STR_65(2), STR_64(15), STR_63(13), 
  7680 ;;		 -> STR_62(15), STR_61(17), STR_60(13), STR_59(13), 
  7681 ;;		 -> STR_58(13), STR_57(13), STR_56(13), STR_55(13), 
  7682 ;;		 -> STR_54(13), STR_53(13), STR_52(13), STR_51(13), 
  7683 ;;		 -> STR_50(11), STR_49(11), STR_48(11), STR_47(9), 
  7684 ;;		 -> STR_46(11), STR_45(9), STR_44(5), STR_43(9), 
  7685 ;;		 -> STR_42(9), STR_41(11), STR_40(11), STR_39(9), 
  7686 ;;		 -> STR_38(7), STR_37(7), STR_36(11), STR_35(9), 
  7687 ;;		 -> STR_34(11), STR_33(7), STR_32(11), STR_31(9), 
  7688 ;;		 -> STR_30(11), STR_29(5), STR_28(9), STR_27(11), 
  7689 ;;		 -> STR_26(11), STR_25(7), STR_24(12), STR_21(34), 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;  ap              2   12[BANK0 ] PTR void [1]
  7692 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7693 ;;  ret             2    0        int 
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  2    8[BANK0 ] int 
  7696 ;; Registers used:
  7697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7703 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;Total ram usage:        6 bytes
  7708 ;; Hardware stack levels used:    1
  7709 ;; Hardware stack levels required when called:    8
  7710 ;; This function calls:
  7711 ;;		_vfprintf
  7712 ;; This function is called by:
  7713 ;;		_Morseovka
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           	psect	text11
  7718  0031D4                     __ptext11:
  7719                           	opt callstack 0
  7720  0031D4                     _printf:
  7721                           	opt callstack 21
  7722  0031D4  0E6A               	movlw	low (?_printf+2)
  7723  0031D6  0100               	movlb	0	; () banked
  7724  0031D8  6F6C               	movwf	printf@ap& (0+255),b
  7725  0031DA  0E00               	movlw	high (?_printf+2)
  7726  0031DC  6F6D               	movwf	(printf@ap+1)& (0+255),b
  7727  0031DE                     
  7728                           ; BSR set to: 0
  7729  0031DE  0E00               	movlw	0
  7730  0031E0  6F60               	movwf	vfprintf@fp& (0+255),b
  7731  0031E2  0E00               	movlw	0
  7732  0031E4  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  7733  0031E6  C068  F062         	movff	printf@fmt,vfprintf@fmt
  7734  0031EA  C069  F063         	movff	printf@fmt+1,vfprintf@fmt+1
  7735  0031EE  0E6C               	movlw	low printf@ap
  7736  0031F0  6F64               	movwf	vfprintf@ap& (0+255),b
  7737  0031F2  0E00               	movlw	high printf@ap
  7738  0031F4  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  7739  0031F6  ECBD  F017         	call	_vfprintf	;wreg free
  7740  0031FA  0012               	return		;funcret
  7741  0031FC                     __end_of_printf:
  7742                           	opt callstack 0
  7743                           
  7744 ;; *************** function _Morseovka_init *****************
  7745 ;; Defined at:
  7746 ;;		line 121 in file "Projekt.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;		None
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;		None
  7751 ;; Return value:  Size  Location     Type
  7752 ;;                  1    wreg      void 
  7753 ;; Registers used:
  7754 ;;		wreg, status,2
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;Total ram usage:        0 bytes
  7765 ;; Hardware stack levels used:    1
  7766 ;; Hardware stack levels required when called:    1
  7767 ;; This function calls:
  7768 ;;		Nothing
  7769 ;; This function is called by:
  7770 ;;		_Morseovka
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           	psect	text12
  7775  003222                     __ptext12:
  7776                           	opt callstack 0
  7777  003222                     _Morseovka_init:
  7778                           	opt callstack 28
  7779  003222                     
  7780                           ;Projekt.c: 122:     PEIE = 1;
  7781  003222  8CF2               	bsf	4082,6,c	;volatile
  7782                           
  7783                           ;Projekt.c: 123:     GIE = 1;
  7784  003224  8EF2               	bsf	4082,7,c	;volatile
  7785                           
  7786                           ;Projekt.c: 124:     RC1IE = 1;
  7787  003226  8A9D               	bsf	3997,5,c	;volatile
  7788  003228                     
  7789                           ;Projekt.c: 126:     ANSELC = 0x00;
  7790  003228  0E00               	movlw	0
  7791  00322A  010F               	movlb	15	; () banked
  7792  00322C  6F3A               	movwf	58,b	;volatile
  7793  00322E                     
  7794                           ; BSR set to: 15
  7795                           ;Projekt.c: 128:     TRISCbits.TRISC6 = 1;
  7796  00322E  8C94               	bsf	148,6,c	;volatile
  7797  003230                     
  7798                           ; BSR set to: 15
  7799                           ;Projekt.c: 129:     TRISCbits.TRISC7 = 1;
  7800  003230  8E94               	bsf	148,7,c	;volatile
  7801                           
  7802                           ;Projekt.c: 131:     SPBRG1 = 51;
  7803  003232  0E33               	movlw	51
  7804  003234  6EAF               	movwf	175,c	;volatile
  7805  003236                     
  7806                           ; BSR set to: 15
  7807                           ;Projekt.c: 132:     RCSTA1bits.SPEN = 1;
  7808  003236  8EAB               	bsf	171,7,c	;volatile
  7809  003238                     
  7810                           ; BSR set to: 15
  7811                           ;Projekt.c: 133:     TXSTA1bits.SYNC = 0;
  7812  003238  98AC               	bcf	172,4,c	;volatile
  7813  00323A                     
  7814                           ; BSR set to: 15
  7815                           ;Projekt.c: 134:     TXSTA1bits.TXEN = 1;
  7816  00323A  8AAC               	bsf	172,5,c	;volatile
  7817  00323C                     
  7818                           ; BSR set to: 15
  7819                           ;Projekt.c: 135:     RCSTA1bits.CREN = 1;
  7820  00323C  88AB               	bsf	171,4,c	;volatile
  7821  00323E                     
  7822                           ; BSR set to: 15
  7823  00323E  0012               	return		;funcret
  7824  003240                     __end_of_Morseovka_init:
  7825                           	opt callstack 0
  7826                           
  7827 ;; *************** function _Bargraph *****************
  7828 ;; Defined at:
  7829 ;;		line 771 in file "Projekt.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;		None
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;  graph          17   45[BANK0 ] unsigned char [17]
  7834 ;;  text           17   28[BANK0 ] unsigned char [17]
  7835 ;;  n               2    0        int 
  7836 ;;  i               2    0        int 
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7848 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7849 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7850 ;;Total ram usage:       36 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    9
  7853 ;; This function calls:
  7854 ;;		_Bargraph_init
  7855 ;;		_LCD_Clear
  7856 ;;		_LCD_ShowString
  7857 ;;		_sprintf
  7858 ;; This function is called by:
  7859 ;;		_main
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text13
  7864  0013AA                     __ptext13:
  7865                           	opt callstack 0
  7866  0013AA                     _Bargraph:
  7867                           	opt callstack 21
  7868  0013AA                     
  7869                           ;Projekt.c: 772:     Bargraph_init();
  7870  0013AA  ECD3  F018         	call	_Bargraph_init	;wreg free
  7871  0013AE                     
  7872                           ;Projekt.c: 773:     LCD_Clear();
  7873  0013AE  ECA1  F018         	call	_LCD_Clear	;wreg free
  7874  0013B2                     l5483:
  7875                           
  7876                           ;Projekt.c: 781:          GODONE = 1;
  7877  0013B2  82C2               	bsf	4034,1,c	;volatile
  7878  0013B4                     
  7879                           ;Projekt.c: 782:         _delay((unsigned long)((50)*(32E6/4000.0)));
  7880  0013B4  0E03               	movlw	3
  7881  0013B6  0100               	movlb	0	; () banked
  7882  0013B8  6F7B               	movwf	(??_Bargraph+1)& (0+255),b
  7883  0013BA  0E08               	movlw	8
  7884  0013BC  6F7A               	movwf	??_Bargraph& (0+255),b
  7885  0013BE  0E77               	movlw	119
  7886  0013C0                     u4487:
  7887  0013C0  2EE8               	decfsz	wreg,f,c
  7888  0013C2  D7FE               	bra	u4487
  7889  0013C4  2F7A               	decfsz	??_Bargraph& (0+255),f,b
  7890  0013C6  D7FC               	bra	u4487
  7891  0013C8  2F7B               	decfsz	(??_Bargraph+1)& (0+255),f,b
  7892  0013CA  D7FA               	bra	u4487
  7893  0013CC                     
  7894                           ;Projekt.c: 783:         sprintf(text, "VALUE = %d       ",pot1);
  7895  0013CC  0E7C               	movlw	low Bargraph@text
  7896  0013CE  0100               	movlb	0	; () banked
  7897  0013D0  6F68               	movwf	sprintf@s& (0+255),b
  7898  0013D2  0E00               	movlw	high Bargraph@text
  7899  0013D4  6F69               	movwf	(sprintf@s+1)& (0+255),b
  7900  0013D6  0E56               	movlw	low STR_73
  7901  0013D8  6F6A               	movwf	sprintf@fmt& (0+255),b
  7902  0013DA  0EFC               	movlw	high STR_73
  7903  0013DC  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  7904  0013DE  C0D9  F06C         	movff	_pot1,?_sprintf+4	;volatile
  7905  0013E2  C0DA  F06D         	movff	_pot1+1,?_sprintf+5	;volatile
  7906  0013E6  EC1B  F018         	call	_sprintf	;wreg free
  7907  0013EA                     
  7908                           ;Projekt.c: 784:         LCD_ShowString(1, text);
  7909  0013EA  0E7C               	movlw	low Bargraph@text
  7910  0013EC  6E06               	movwf	LCD_ShowString@textData^0,c
  7911  0013EE  0E00               	movlw	high Bargraph@text
  7912  0013F0  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  7913  0013F2  0E01               	movlw	1
  7914  0013F4  EC3D  F017         	call	_LCD_ShowString
  7915  0013F8                     
  7916                           ;Projekt.c: 786:         if ((pot1>1) && (pot1<65)){
  7917  0013F8  0100               	movlb	0	; () banked
  7918  0013FA  51DA               	movf	(_pot1+1)& (0+255),w,b	;volatile
  7919  0013FC  E109               	bnz	u3570
  7920  0013FE  0E02               	movlw	2
  7921  001400  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  7922  001402  A0D8               	btfss	status,0,c
  7923  001404  EF06  F00A         	goto	u3571
  7924  001408  EF08  F00A         	goto	u3570
  7925  00140C                     u3571:
  7926  00140C  EF26  F00A         	goto	l5499
  7927  001410                     u3570:
  7928  001410                     
  7929                           ; BSR set to: 0
  7930  001410  51DA               	movf	(_pot1+1)& (0+255),w,b	;volatile
  7931  001412  E107               	bnz	u3581
  7932  001414  0E41               	movlw	65
  7933  001416  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  7934  001418  B0D8               	btfsc	status,0,c
  7935  00141A  EF11  F00A         	goto	u3581
  7936  00141E  EF13  F00A         	goto	u3580
  7937  001422                     u3581:
  7938  001422  EF26  F00A         	goto	l5499
  7939  001426                     u3580:
  7940  001426                     
  7941                           ; BSR set to: 0
  7942                           ;Projekt.c: 787:         sprintf(graph, "O               ");
  7943  001426  0E8D               	movlw	low Bargraph@graph
  7944  001428  6F68               	movwf	sprintf@s& (0+255),b
  7945  00142A  0E00               	movlw	high Bargraph@graph
  7946  00142C  6F69               	movwf	(sprintf@s+1)& (0+255),b
  7947  00142E  0E68               	movlw	low STR_74
  7948  001430  6F6A               	movwf	sprintf@fmt& (0+255),b
  7949  001432  0EFC               	movlw	high STR_74
  7950  001434  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  7951  001436  EC1B  F018         	call	_sprintf	;wreg free
  7952  00143A                     
  7953                           ;Projekt.c: 788:         LCD_ShowString(2, graph);
  7954  00143A  0E8D               	movlw	low Bargraph@graph
  7955  00143C  6E06               	movwf	LCD_ShowString@textData^0,c
  7956  00143E  0E00               	movlw	high Bargraph@graph
  7957  001440  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  7958  001442  0E02               	movlw	2
  7959  001444  EC3D  F017         	call	_LCD_ShowString
  7960                           
  7961                           ;Projekt.c: 789:         }
  7962  001448  EF82  F00C         	goto	l5617
  7963  00144C                     l5499:
  7964                           
  7965                           ; BSR set to: 0
  7966  00144C  51DA               	movf	(_pot1+1)& (0+255),w,b	;volatile
  7967  00144E  E109               	bnz	u3590
  7968  001450  0E42               	movlw	66
  7969  001452  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  7970  001454  A0D8               	btfss	status,0,c
  7971  001456  EF2F  F00A         	goto	u3591
  7972  00145A  EF31  F00A         	goto	u3590
  7973  00145E                     u3591:
  7974  00145E  EF4F  F00A         	goto	l5507
  7975  001462                     u3590:
  7976  001462                     
  7977                           ; BSR set to: 0
  7978  001462  51DA               	movf	(_pot1+1)& (0+255),w,b	;volatile
  7979  001464  E107               	bnz	u3601
  7980  001466  0E82               	movlw	130
  7981  001468  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  7982  00146A  B0D8               	btfsc	status,0,c
  7983  00146C  EF3A  F00A         	goto	u3601
  7984  001470  EF3C  F00A         	goto	u3600
  7985  001474                     u3601:
  7986  001474  EF4F  F00A         	goto	l5507
  7987  001478                     u3600:
  7988  001478                     
  7989                           ; BSR set to: 0
  7990                           ;Projekt.c: 792:         sprintf(graph, "OO              ");
  7991  001478  0E8D               	movlw	low Bargraph@graph
  7992  00147A  6F68               	movwf	sprintf@s& (0+255),b
  7993  00147C  0E00               	movlw	high Bargraph@graph
  7994  00147E  6F69               	movwf	(sprintf@s+1)& (0+255),b
  7995  001480  0E79               	movlw	low STR_75
  7996  001482  6F6A               	movwf	sprintf@fmt& (0+255),b
  7997  001484  0EFC               	movlw	high STR_75
  7998  001486  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  7999  001488  EC1B  F018         	call	_sprintf	;wreg free
  8000  00148C                     
  8001                           ;Projekt.c: 793:         LCD_ShowString(2, graph);
  8002  00148C  0E8D               	movlw	low Bargraph@graph
  8003  00148E  6E06               	movwf	LCD_ShowString@textData^0,c
  8004  001490  0E00               	movlw	high Bargraph@graph
  8005  001492  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8006  001494  0E02               	movlw	2
  8007  001496  EC3D  F017         	call	_LCD_ShowString
  8008                           
  8009                           ;Projekt.c: 794:         }
  8010  00149A  EF82  F00C         	goto	l5617
  8011  00149E                     l5507:
  8012                           
  8013                           ; BSR set to: 0
  8014  00149E  51DA               	movf	(_pot1+1)& (0+255),w,b	;volatile
  8015  0014A0  E109               	bnz	u3610
  8016  0014A2  0E83               	movlw	131
  8017  0014A4  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8018  0014A6  A0D8               	btfss	status,0,c
  8019  0014A8  EF58  F00A         	goto	u3611
  8020  0014AC  EF5A  F00A         	goto	u3610
  8021  0014B0                     u3611:
  8022  0014B0  EF78  F00A         	goto	l5515
  8023  0014B4                     u3610:
  8024  0014B4                     
  8025                           ; BSR set to: 0
  8026  0014B4  51DA               	movf	(_pot1+1)& (0+255),w,b	;volatile
  8027  0014B6  E107               	bnz	u3621
  8028  0014B8  0EC3               	movlw	195
  8029  0014BA  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8030  0014BC  B0D8               	btfsc	status,0,c
  8031  0014BE  EF63  F00A         	goto	u3621
  8032  0014C2  EF65  F00A         	goto	u3620
  8033  0014C6                     u3621:
  8034  0014C6  EF78  F00A         	goto	l5515
  8035  0014CA                     u3620:
  8036  0014CA                     
  8037                           ; BSR set to: 0
  8038                           ;Projekt.c: 796:         sprintf(graph, "OOO             ");
  8039  0014CA  0E8D               	movlw	low Bargraph@graph
  8040  0014CC  6F68               	movwf	sprintf@s& (0+255),b
  8041  0014CE  0E00               	movlw	high Bargraph@graph
  8042  0014D0  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8043  0014D2  0E8A               	movlw	low STR_76
  8044  0014D4  6F6A               	movwf	sprintf@fmt& (0+255),b
  8045  0014D6  0EFC               	movlw	high STR_76
  8046  0014D8  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8047  0014DA  EC1B  F018         	call	_sprintf	;wreg free
  8048  0014DE                     
  8049                           ;Projekt.c: 797:         LCD_ShowString(2, graph);
  8050  0014DE  0E8D               	movlw	low Bargraph@graph
  8051  0014E0  6E06               	movwf	LCD_ShowString@textData^0,c
  8052  0014E2  0E00               	movlw	high Bargraph@graph
  8053  0014E4  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8054  0014E6  0E02               	movlw	2
  8055  0014E8  EC3D  F017         	call	_LCD_ShowString
  8056                           
  8057                           ;Projekt.c: 798:         }
  8058  0014EC  EF82  F00C         	goto	l5617
  8059  0014F0                     l5515:
  8060                           
  8061                           ; BSR set to: 0
  8062  0014F0  51DA               	movf	(_pot1+1)& (0+255),w,b	;volatile
  8063  0014F2  E109               	bnz	u3630
  8064  0014F4  0EC4               	movlw	196
  8065  0014F6  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8066  0014F8  A0D8               	btfss	status,0,c
  8067  0014FA  EF81  F00A         	goto	u3631
  8068  0014FE  EF83  F00A         	goto	u3630
  8069  001502                     u3631:
  8070  001502  EFA1  F00A         	goto	l5523
  8071  001506                     u3630:
  8072  001506                     
  8073                           ; BSR set to: 0
  8074  001506  0E04               	movlw	4
  8075  001508  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8076  00150A  0E01               	movlw	1
  8077  00150C  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8078  00150E  B0D8               	btfsc	status,0,c
  8079  001510  EF8C  F00A         	goto	u3641
  8080  001514  EF8E  F00A         	goto	u3640
  8081  001518                     u3641:
  8082  001518  EFA1  F00A         	goto	l5523
  8083  00151C                     u3640:
  8084  00151C                     
  8085                           ; BSR set to: 0
  8086                           ;Projekt.c: 800:         sprintf(graph, "OOOO            ");
  8087  00151C  0E8D               	movlw	low Bargraph@graph
  8088  00151E  6F68               	movwf	sprintf@s& (0+255),b
  8089  001520  0E00               	movlw	high Bargraph@graph
  8090  001522  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8091  001524  0E9B               	movlw	low STR_77
  8092  001526  6F6A               	movwf	sprintf@fmt& (0+255),b
  8093  001528  0EFC               	movlw	high STR_77
  8094  00152A  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8095  00152C  EC1B  F018         	call	_sprintf	;wreg free
  8096  001530                     
  8097                           ;Projekt.c: 801:         LCD_ShowString(2, graph);
  8098  001530  0E8D               	movlw	low Bargraph@graph
  8099  001532  6E06               	movwf	LCD_ShowString@textData^0,c
  8100  001534  0E00               	movlw	high Bargraph@graph
  8101  001536  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8102  001538  0E02               	movlw	2
  8103  00153A  EC3D  F017         	call	_LCD_ShowString
  8104                           
  8105                           ;Projekt.c: 802:         }
  8106  00153E  EF82  F00C         	goto	l5617
  8107  001542                     l5523:
  8108                           
  8109                           ; BSR set to: 0
  8110  001542  0E05               	movlw	5
  8111  001544  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8112  001546  0E01               	movlw	1
  8113  001548  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8114  00154A  A0D8               	btfss	status,0,c
  8115  00154C  EFAA  F00A         	goto	u3651
  8116  001550  EFAC  F00A         	goto	u3650
  8117  001554                     u3651:
  8118  001554  EFCA  F00A         	goto	l5531
  8119  001558                     u3650:
  8120  001558                     
  8121                           ; BSR set to: 0
  8122  001558  0E45               	movlw	69
  8123  00155A  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8124  00155C  0E01               	movlw	1
  8125  00155E  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8126  001560  B0D8               	btfsc	status,0,c
  8127  001562  EFB5  F00A         	goto	u3661
  8128  001566  EFB7  F00A         	goto	u3660
  8129  00156A                     u3661:
  8130  00156A  EFCA  F00A         	goto	l5531
  8131  00156E                     u3660:
  8132  00156E                     
  8133                           ; BSR set to: 0
  8134                           ;Projekt.c: 804:         sprintf(graph, "OOOOO           ");
  8135  00156E  0E8D               	movlw	low Bargraph@graph
  8136  001570  6F68               	movwf	sprintf@s& (0+255),b
  8137  001572  0E00               	movlw	high Bargraph@graph
  8138  001574  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8139  001576  0EAC               	movlw	low STR_78
  8140  001578  6F6A               	movwf	sprintf@fmt& (0+255),b
  8141  00157A  0EFC               	movlw	high STR_78
  8142  00157C  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8143  00157E  EC1B  F018         	call	_sprintf	;wreg free
  8144  001582                     
  8145                           ;Projekt.c: 805:         LCD_ShowString(2, graph);
  8146  001582  0E8D               	movlw	low Bargraph@graph
  8147  001584  6E06               	movwf	LCD_ShowString@textData^0,c
  8148  001586  0E00               	movlw	high Bargraph@graph
  8149  001588  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8150  00158A  0E02               	movlw	2
  8151  00158C  EC3D  F017         	call	_LCD_ShowString
  8152                           
  8153                           ;Projekt.c: 806:         }
  8154  001590  EF82  F00C         	goto	l5617
  8155  001594                     l5531:
  8156                           
  8157                           ; BSR set to: 0
  8158  001594  0E46               	movlw	70
  8159  001596  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8160  001598  0E01               	movlw	1
  8161  00159A  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8162  00159C  A0D8               	btfss	status,0,c
  8163  00159E  EFD3  F00A         	goto	u3671
  8164  0015A2  EFD5  F00A         	goto	u3670
  8165  0015A6                     u3671:
  8166  0015A6  EFF3  F00A         	goto	l5539
  8167  0015AA                     u3670:
  8168  0015AA                     
  8169                           ; BSR set to: 0
  8170  0015AA  0E86               	movlw	134
  8171  0015AC  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8172  0015AE  0E01               	movlw	1
  8173  0015B0  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8174  0015B2  B0D8               	btfsc	status,0,c
  8175  0015B4  EFDE  F00A         	goto	u3681
  8176  0015B8  EFE0  F00A         	goto	u3680
  8177  0015BC                     u3681:
  8178  0015BC  EFF3  F00A         	goto	l5539
  8179  0015C0                     u3680:
  8180  0015C0                     
  8181                           ; BSR set to: 0
  8182                           ;Projekt.c: 808:         sprintf(graph, "OOOOOO          ");
  8183  0015C0  0E8D               	movlw	low Bargraph@graph
  8184  0015C2  6F68               	movwf	sprintf@s& (0+255),b
  8185  0015C4  0E00               	movlw	high Bargraph@graph
  8186  0015C6  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8187  0015C8  0EBD               	movlw	low STR_79
  8188  0015CA  6F6A               	movwf	sprintf@fmt& (0+255),b
  8189  0015CC  0EFC               	movlw	high STR_79
  8190  0015CE  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8191  0015D0  EC1B  F018         	call	_sprintf	;wreg free
  8192  0015D4                     
  8193                           ;Projekt.c: 809:         LCD_ShowString(2, graph);
  8194  0015D4  0E8D               	movlw	low Bargraph@graph
  8195  0015D6  6E06               	movwf	LCD_ShowString@textData^0,c
  8196  0015D8  0E00               	movlw	high Bargraph@graph
  8197  0015DA  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8198  0015DC  0E02               	movlw	2
  8199  0015DE  EC3D  F017         	call	_LCD_ShowString
  8200                           
  8201                           ;Projekt.c: 810:         }
  8202  0015E2  EF82  F00C         	goto	l5617
  8203  0015E6                     l5539:
  8204                           
  8205                           ; BSR set to: 0
  8206  0015E6  0E87               	movlw	135
  8207  0015E8  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8208  0015EA  0E01               	movlw	1
  8209  0015EC  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8210  0015EE  A0D8               	btfss	status,0,c
  8211  0015F0  EFFC  F00A         	goto	u3691
  8212  0015F4  EFFE  F00A         	goto	u3690
  8213  0015F8                     u3691:
  8214  0015F8  EF1C  F00B         	goto	l5547
  8215  0015FC                     u3690:
  8216  0015FC                     
  8217                           ; BSR set to: 0
  8218  0015FC  0EC7               	movlw	199
  8219  0015FE  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8220  001600  0E01               	movlw	1
  8221  001602  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8222  001604  B0D8               	btfsc	status,0,c
  8223  001606  EF07  F00B         	goto	u3701
  8224  00160A  EF09  F00B         	goto	u3700
  8225  00160E                     u3701:
  8226  00160E  EF1C  F00B         	goto	l5547
  8227  001612                     u3700:
  8228  001612                     
  8229                           ; BSR set to: 0
  8230                           ;Projekt.c: 812:         sprintf(graph, "OOOOOOO         ");
  8231  001612  0E8D               	movlw	low Bargraph@graph
  8232  001614  6F68               	movwf	sprintf@s& (0+255),b
  8233  001616  0E00               	movlw	high Bargraph@graph
  8234  001618  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8235  00161A  0ECE               	movlw	low STR_80
  8236  00161C  6F6A               	movwf	sprintf@fmt& (0+255),b
  8237  00161E  0EFC               	movlw	high STR_80
  8238  001620  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8239  001622  EC1B  F018         	call	_sprintf	;wreg free
  8240  001626                     
  8241                           ;Projekt.c: 813:         LCD_ShowString(2, graph);
  8242  001626  0E8D               	movlw	low Bargraph@graph
  8243  001628  6E06               	movwf	LCD_ShowString@textData^0,c
  8244  00162A  0E00               	movlw	high Bargraph@graph
  8245  00162C  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8246  00162E  0E02               	movlw	2
  8247  001630  EC3D  F017         	call	_LCD_ShowString
  8248                           
  8249                           ;Projekt.c: 814:         }
  8250  001634  EF82  F00C         	goto	l5617
  8251  001638                     l5547:
  8252                           
  8253                           ; BSR set to: 0
  8254  001638  0EC8               	movlw	200
  8255  00163A  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8256  00163C  0E01               	movlw	1
  8257  00163E  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8258  001640  A0D8               	btfss	status,0,c
  8259  001642  EF25  F00B         	goto	u3711
  8260  001646  EF27  F00B         	goto	u3710
  8261  00164A                     u3711:
  8262  00164A  EF45  F00B         	goto	l5555
  8263  00164E                     u3710:
  8264  00164E                     
  8265                           ; BSR set to: 0
  8266  00164E  0E08               	movlw	8
  8267  001650  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8268  001652  0E02               	movlw	2
  8269  001654  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8270  001656  B0D8               	btfsc	status,0,c
  8271  001658  EF30  F00B         	goto	u3721
  8272  00165C  EF32  F00B         	goto	u3720
  8273  001660                     u3721:
  8274  001660  EF45  F00B         	goto	l5555
  8275  001664                     u3720:
  8276  001664                     
  8277                           ; BSR set to: 0
  8278                           ;Projekt.c: 816:         sprintf(graph, "OOOOOOOO        ");
  8279  001664  0E8D               	movlw	low Bargraph@graph
  8280  001666  6F68               	movwf	sprintf@s& (0+255),b
  8281  001668  0E00               	movlw	high Bargraph@graph
  8282  00166A  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8283  00166C  0EDF               	movlw	low STR_81
  8284  00166E  6F6A               	movwf	sprintf@fmt& (0+255),b
  8285  001670  0EFC               	movlw	high STR_81
  8286  001672  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8287  001674  EC1B  F018         	call	_sprintf	;wreg free
  8288  001678                     
  8289                           ;Projekt.c: 817:         LCD_ShowString(2, graph);
  8290  001678  0E8D               	movlw	low Bargraph@graph
  8291  00167A  6E06               	movwf	LCD_ShowString@textData^0,c
  8292  00167C  0E00               	movlw	high Bargraph@graph
  8293  00167E  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8294  001680  0E02               	movlw	2
  8295  001682  EC3D  F017         	call	_LCD_ShowString
  8296                           
  8297                           ;Projekt.c: 818:         }
  8298  001686  EF82  F00C         	goto	l5617
  8299  00168A                     l5555:
  8300                           
  8301                           ; BSR set to: 0
  8302  00168A  0E09               	movlw	9
  8303  00168C  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8304  00168E  0E02               	movlw	2
  8305  001690  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8306  001692  A0D8               	btfss	status,0,c
  8307  001694  EF4E  F00B         	goto	u3731
  8308  001698  EF50  F00B         	goto	u3730
  8309  00169C                     u3731:
  8310  00169C  EF6E  F00B         	goto	l5563
  8311  0016A0                     u3730:
  8312  0016A0                     
  8313                           ; BSR set to: 0
  8314  0016A0  0E49               	movlw	73
  8315  0016A2  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8316  0016A4  0E02               	movlw	2
  8317  0016A6  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8318  0016A8  B0D8               	btfsc	status,0,c
  8319  0016AA  EF59  F00B         	goto	u3741
  8320  0016AE  EF5B  F00B         	goto	u3740
  8321  0016B2                     u3741:
  8322  0016B2  EF6E  F00B         	goto	l5563
  8323  0016B6                     u3740:
  8324  0016B6                     
  8325                           ; BSR set to: 0
  8326                           ;Projekt.c: 820:         sprintf(graph, "OOOOOOOOO       ");
  8327  0016B6  0E8D               	movlw	low Bargraph@graph
  8328  0016B8  6F68               	movwf	sprintf@s& (0+255),b
  8329  0016BA  0E00               	movlw	high Bargraph@graph
  8330  0016BC  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8331  0016BE  0EF0               	movlw	low STR_82
  8332  0016C0  6F6A               	movwf	sprintf@fmt& (0+255),b
  8333  0016C2  0EFC               	movlw	high STR_82
  8334  0016C4  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8335  0016C6  EC1B  F018         	call	_sprintf	;wreg free
  8336  0016CA                     
  8337                           ;Projekt.c: 821:         LCD_ShowString(2, graph);
  8338  0016CA  0E8D               	movlw	low Bargraph@graph
  8339  0016CC  6E06               	movwf	LCD_ShowString@textData^0,c
  8340  0016CE  0E00               	movlw	high Bargraph@graph
  8341  0016D0  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8342  0016D2  0E02               	movlw	2
  8343  0016D4  EC3D  F017         	call	_LCD_ShowString
  8344                           
  8345                           ;Projekt.c: 822:         }
  8346  0016D8  EF82  F00C         	goto	l5617
  8347  0016DC                     l5563:
  8348                           
  8349                           ; BSR set to: 0
  8350  0016DC  0E4A               	movlw	74
  8351  0016DE  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8352  0016E0  0E02               	movlw	2
  8353  0016E2  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8354  0016E4  A0D8               	btfss	status,0,c
  8355  0016E6  EF77  F00B         	goto	u3751
  8356  0016EA  EF79  F00B         	goto	u3750
  8357  0016EE                     u3751:
  8358  0016EE  EF97  F00B         	goto	l5571
  8359  0016F2                     u3750:
  8360  0016F2                     
  8361                           ; BSR set to: 0
  8362  0016F2  0E8A               	movlw	138
  8363  0016F4  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8364  0016F6  0E02               	movlw	2
  8365  0016F8  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8366  0016FA  B0D8               	btfsc	status,0,c
  8367  0016FC  EF82  F00B         	goto	u3761
  8368  001700  EF84  F00B         	goto	u3760
  8369  001704                     u3761:
  8370  001704  EF97  F00B         	goto	l5571
  8371  001708                     u3760:
  8372  001708                     
  8373                           ; BSR set to: 0
  8374                           ;Projekt.c: 824:         sprintf(graph, "OOOOOOOOOO      ");
  8375  001708  0E8D               	movlw	low Bargraph@graph
  8376  00170A  6F68               	movwf	sprintf@s& (0+255),b
  8377  00170C  0E00               	movlw	high Bargraph@graph
  8378  00170E  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8379  001710  0E01               	movlw	low STR_83
  8380  001712  6F6A               	movwf	sprintf@fmt& (0+255),b
  8381  001714  0EFD               	movlw	high STR_83
  8382  001716  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8383  001718  EC1B  F018         	call	_sprintf	;wreg free
  8384  00171C                     
  8385                           ;Projekt.c: 825:         LCD_ShowString(2, graph);
  8386  00171C  0E8D               	movlw	low Bargraph@graph
  8387  00171E  6E06               	movwf	LCD_ShowString@textData^0,c
  8388  001720  0E00               	movlw	high Bargraph@graph
  8389  001722  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8390  001724  0E02               	movlw	2
  8391  001726  EC3D  F017         	call	_LCD_ShowString
  8392                           
  8393                           ;Projekt.c: 826:         }
  8394  00172A  EF82  F00C         	goto	l5617
  8395  00172E                     l5571:
  8396                           
  8397                           ; BSR set to: 0
  8398  00172E  0E8B               	movlw	139
  8399  001730  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8400  001732  0E02               	movlw	2
  8401  001734  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8402  001736  A0D8               	btfss	status,0,c
  8403  001738  EFA0  F00B         	goto	u3771
  8404  00173C  EFA2  F00B         	goto	u3770
  8405  001740                     u3771:
  8406  001740  EFC0  F00B         	goto	l5579
  8407  001744                     u3770:
  8408  001744                     
  8409                           ; BSR set to: 0
  8410  001744  0ECB               	movlw	203
  8411  001746  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8412  001748  0E02               	movlw	2
  8413  00174A  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8414  00174C  B0D8               	btfsc	status,0,c
  8415  00174E  EFAB  F00B         	goto	u3781
  8416  001752  EFAD  F00B         	goto	u3780
  8417  001756                     u3781:
  8418  001756  EFC0  F00B         	goto	l5579
  8419  00175A                     u3780:
  8420  00175A                     
  8421                           ; BSR set to: 0
  8422                           ;Projekt.c: 828:         sprintf(graph, "OOOOOOOOOOO     ");
  8423  00175A  0E8D               	movlw	low Bargraph@graph
  8424  00175C  6F68               	movwf	sprintf@s& (0+255),b
  8425  00175E  0E00               	movlw	high Bargraph@graph
  8426  001760  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8427  001762  0E34               	movlw	low STR_84
  8428  001764  6F6A               	movwf	sprintf@fmt& (0+255),b
  8429  001766  0EFD               	movlw	high STR_84
  8430  001768  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8431  00176A  EC1B  F018         	call	_sprintf	;wreg free
  8432  00176E                     
  8433                           ;Projekt.c: 829:         LCD_ShowString(2, graph);
  8434  00176E  0E8D               	movlw	low Bargraph@graph
  8435  001770  6E06               	movwf	LCD_ShowString@textData^0,c
  8436  001772  0E00               	movlw	high Bargraph@graph
  8437  001774  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8438  001776  0E02               	movlw	2
  8439  001778  EC3D  F017         	call	_LCD_ShowString
  8440                           
  8441                           ;Projekt.c: 830:         }
  8442  00177C  EF82  F00C         	goto	l5617
  8443  001780                     l5579:
  8444                           
  8445                           ; BSR set to: 0
  8446  001780  0ECC               	movlw	204
  8447  001782  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8448  001784  0E02               	movlw	2
  8449  001786  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8450  001788  A0D8               	btfss	status,0,c
  8451  00178A  EFC9  F00B         	goto	u3791
  8452  00178E  EFCB  F00B         	goto	u3790
  8453  001792                     u3791:
  8454  001792  EFE9  F00B         	goto	l5587
  8455  001796                     u3790:
  8456  001796                     
  8457                           ; BSR set to: 0
  8458  001796  0E0C               	movlw	12
  8459  001798  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8460  00179A  0E03               	movlw	3
  8461  00179C  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8462  00179E  B0D8               	btfsc	status,0,c
  8463  0017A0  EFD4  F00B         	goto	u3801
  8464  0017A4  EFD6  F00B         	goto	u3800
  8465  0017A8                     u3801:
  8466  0017A8  EFE9  F00B         	goto	l5587
  8467  0017AC                     u3800:
  8468  0017AC                     
  8469                           ; BSR set to: 0
  8470                           ;Projekt.c: 832:         sprintf(graph, "OOOOOOOOOOOO    ");
  8471  0017AC  0E8D               	movlw	low Bargraph@graph
  8472  0017AE  6F68               	movwf	sprintf@s& (0+255),b
  8473  0017B0  0E00               	movlw	high Bargraph@graph
  8474  0017B2  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8475  0017B4  0EDE               	movlw	low STR_85
  8476  0017B6  6F6A               	movwf	sprintf@fmt& (0+255),b
  8477  0017B8  0EFD               	movlw	high STR_85
  8478  0017BA  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8479  0017BC  EC1B  F018         	call	_sprintf	;wreg free
  8480  0017C0                     
  8481                           ;Projekt.c: 833:         LCD_ShowString(2, graph);
  8482  0017C0  0E8D               	movlw	low Bargraph@graph
  8483  0017C2  6E06               	movwf	LCD_ShowString@textData^0,c
  8484  0017C4  0E00               	movlw	high Bargraph@graph
  8485  0017C6  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8486  0017C8  0E02               	movlw	2
  8487  0017CA  EC3D  F017         	call	_LCD_ShowString
  8488                           
  8489                           ;Projekt.c: 834:         }
  8490  0017CE  EF82  F00C         	goto	l5617
  8491  0017D2                     l5587:
  8492                           
  8493                           ; BSR set to: 0
  8494  0017D2  0E0D               	movlw	13
  8495  0017D4  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8496  0017D6  0E03               	movlw	3
  8497  0017D8  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8498  0017DA  A0D8               	btfss	status,0,c
  8499  0017DC  EFF2  F00B         	goto	u3811
  8500  0017E0  EFF4  F00B         	goto	u3810
  8501  0017E4                     u3811:
  8502  0017E4  EF12  F00C         	goto	l5595
  8503  0017E8                     u3810:
  8504  0017E8                     
  8505                           ; BSR set to: 0
  8506  0017E8  0E4D               	movlw	77
  8507  0017EA  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8508  0017EC  0E03               	movlw	3
  8509  0017EE  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8510  0017F0  B0D8               	btfsc	status,0,c
  8511  0017F2  EFFD  F00B         	goto	u3821
  8512  0017F6  EFFF  F00B         	goto	u3820
  8513  0017FA                     u3821:
  8514  0017FA  EF12  F00C         	goto	l5595
  8515  0017FE                     u3820:
  8516  0017FE                     
  8517                           ; BSR set to: 0
  8518                           ;Projekt.c: 836:         sprintf(graph, "OOOOOOOOOOOOO   ");
  8519  0017FE  0E8D               	movlw	low Bargraph@graph
  8520  001800  6F68               	movwf	sprintf@s& (0+255),b
  8521  001802  0E00               	movlw	high Bargraph@graph
  8522  001804  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8523  001806  0E22               	movlw	low STR_86
  8524  001808  6F6A               	movwf	sprintf@fmt& (0+255),b
  8525  00180A  0EFE               	movlw	high STR_86
  8526  00180C  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8527  00180E  EC1B  F018         	call	_sprintf	;wreg free
  8528  001812                     
  8529                           ;Projekt.c: 837:         LCD_ShowString(2, graph);
  8530  001812  0E8D               	movlw	low Bargraph@graph
  8531  001814  6E06               	movwf	LCD_ShowString@textData^0,c
  8532  001816  0E00               	movlw	high Bargraph@graph
  8533  001818  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8534  00181A  0E02               	movlw	2
  8535  00181C  EC3D  F017         	call	_LCD_ShowString
  8536                           
  8537                           ;Projekt.c: 838:         }
  8538  001820  EF82  F00C         	goto	l5617
  8539  001824                     l5595:
  8540                           
  8541                           ; BSR set to: 0
  8542  001824  0E4E               	movlw	78
  8543  001826  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8544  001828  0E03               	movlw	3
  8545  00182A  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8546  00182C  A0D8               	btfss	status,0,c
  8547  00182E  EF1B  F00C         	goto	u3831
  8548  001832  EF1D  F00C         	goto	u3830
  8549  001836                     u3831:
  8550  001836  EF3B  F00C         	goto	l5603
  8551  00183A                     u3830:
  8552  00183A                     
  8553                           ; BSR set to: 0
  8554  00183A  0E8E               	movlw	142
  8555  00183C  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8556  00183E  0E03               	movlw	3
  8557  001840  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8558  001842  B0D8               	btfsc	status,0,c
  8559  001844  EF26  F00C         	goto	u3841
  8560  001848  EF28  F00C         	goto	u3840
  8561  00184C                     u3841:
  8562  00184C  EF3B  F00C         	goto	l5603
  8563  001850                     u3840:
  8564  001850                     
  8565                           ; BSR set to: 0
  8566                           ;Projekt.c: 840:         sprintf(graph, "OOOOOOOOOOOOOO  ");
  8567  001850  0E8D               	movlw	low Bargraph@graph
  8568  001852  6F68               	movwf	sprintf@s& (0+255),b
  8569  001854  0E00               	movlw	high Bargraph@graph
  8570  001856  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8571  001858  0E44               	movlw	low STR_87
  8572  00185A  6F6A               	movwf	sprintf@fmt& (0+255),b
  8573  00185C  0EFE               	movlw	high STR_87
  8574  00185E  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8575  001860  EC1B  F018         	call	_sprintf	;wreg free
  8576  001864                     
  8577                           ;Projekt.c: 841:         LCD_ShowString(2, graph);
  8578  001864  0E8D               	movlw	low Bargraph@graph
  8579  001866  6E06               	movwf	LCD_ShowString@textData^0,c
  8580  001868  0E00               	movlw	high Bargraph@graph
  8581  00186A  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8582  00186C  0E02               	movlw	2
  8583  00186E  EC3D  F017         	call	_LCD_ShowString
  8584                           
  8585                           ;Projekt.c: 842:         }
  8586  001872  EF82  F00C         	goto	l5617
  8587  001876                     l5603:
  8588                           
  8589                           ; BSR set to: 0
  8590  001876  0E8F               	movlw	143
  8591  001878  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8592  00187A  0E03               	movlw	3
  8593  00187C  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8594  00187E  A0D8               	btfss	status,0,c
  8595  001880  EF44  F00C         	goto	u3851
  8596  001884  EF46  F00C         	goto	u3850
  8597  001888                     u3851:
  8598  001888  EF64  F00C         	goto	l5611
  8599  00188C                     u3850:
  8600  00188C                     
  8601                           ; BSR set to: 0
  8602  00188C  0ECF               	movlw	207
  8603  00188E  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8604  001890  0E03               	movlw	3
  8605  001892  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8606  001894  B0D8               	btfsc	status,0,c
  8607  001896  EF4F  F00C         	goto	u3861
  8608  00189A  EF51  F00C         	goto	u3860
  8609  00189E                     u3861:
  8610  00189E  EF64  F00C         	goto	l5611
  8611  0018A2                     u3860:
  8612  0018A2                     
  8613                           ; BSR set to: 0
  8614                           ;Projekt.c: 844:         sprintf(graph, "OOOOOOOOOOOOOOO ");
  8615  0018A2  0E8D               	movlw	low Bargraph@graph
  8616  0018A4  6F68               	movwf	sprintf@s& (0+255),b
  8617  0018A6  0E00               	movlw	high Bargraph@graph
  8618  0018A8  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8619  0018AA  0E77               	movlw	low STR_88
  8620  0018AC  6F6A               	movwf	sprintf@fmt& (0+255),b
  8621  0018AE  0EFE               	movlw	high STR_88
  8622  0018B0  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8623  0018B2  EC1B  F018         	call	_sprintf	;wreg free
  8624  0018B6                     
  8625                           ;Projekt.c: 845:         LCD_ShowString(2, graph);
  8626  0018B6  0E8D               	movlw	low Bargraph@graph
  8627  0018B8  6E06               	movwf	LCD_ShowString@textData^0,c
  8628  0018BA  0E00               	movlw	high Bargraph@graph
  8629  0018BC  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8630  0018BE  0E02               	movlw	2
  8631  0018C0  EC3D  F017         	call	_LCD_ShowString
  8632                           
  8633                           ;Projekt.c: 846:         }
  8634  0018C4  EF82  F00C         	goto	l5617
  8635  0018C8                     l5611:
  8636                           
  8637                           ; BSR set to: 0
  8638  0018C8  0ED0               	movlw	208
  8639  0018CA  5DD9               	subwf	_pot1& (0+255),w,b	;volatile
  8640  0018CC  0E03               	movlw	3
  8641  0018CE  59DA               	subwfb	(_pot1+1)& (0+255),w,b	;volatile
  8642  0018D0  A0D8               	btfss	status,0,c
  8643  0018D2  EF6D  F00C         	goto	u3871
  8644  0018D6  EF6F  F00C         	goto	u3870
  8645  0018DA                     u3871:
  8646  0018DA  EF82  F00C         	goto	l424
  8647  0018DE                     u3870:
  8648  0018DE                     
  8649                           ; BSR set to: 0
  8650                           ;Projekt.c: 848:         sprintf(graph, "OOOOOOOOOOOOOOOO");
  8651  0018DE  0E8D               	movlw	low Bargraph@graph
  8652  0018E0  6F68               	movwf	sprintf@s& (0+255),b
  8653  0018E2  0E00               	movlw	high Bargraph@graph
  8654  0018E4  6F69               	movwf	(sprintf@s+1)& (0+255),b
  8655  0018E6  0E99               	movlw	low STR_89
  8656  0018E8  6F6A               	movwf	sprintf@fmt& (0+255),b
  8657  0018EA  0EFE               	movlw	high STR_89
  8658  0018EC  6F6B               	movwf	(sprintf@fmt+1)& (0+255),b
  8659  0018EE  EC1B  F018         	call	_sprintf	;wreg free
  8660  0018F2                     
  8661                           ;Projekt.c: 849:         LCD_ShowString(2, graph);
  8662  0018F2  0E8D               	movlw	low Bargraph@graph
  8663  0018F4  6E06               	movwf	LCD_ShowString@textData^0,c
  8664  0018F6  0E00               	movlw	high Bargraph@graph
  8665  0018F8  6E07               	movwf	(LCD_ShowString@textData+1)^0,c
  8666  0018FA  0E02               	movlw	2
  8667  0018FC  EC3D  F017         	call	_LCD_ShowString
  8668  001900  EF82  F00C         	goto	l5617
  8669  001904                     l424:
  8670  001904                     l5617:
  8671                           
  8672                           ;Projekt.c: 852:      if (PORTAbits.RA2){
  8673  001904  A480               	btfss	128,2,c	;volatile
  8674  001906  EF87  F00C         	goto	u3881
  8675  00190A  EF89  F00C         	goto	u3880
  8676  00190E                     u3881:
  8677  00190E  EFD9  F009         	goto	l5483
  8678  001912                     u3880:
  8679  001912                     
  8680                           ;Projekt.c: 853:          _delay((unsigned long)((200)*(32E6/4000.0)));
  8681  001912  0E09               	movlw	9
  8682  001914  0100               	movlb	0	; () banked
  8683  001916  6F7B               	movwf	(??_Bargraph+1)& (0+255),b
  8684  001918  0E1E               	movlw	30
  8685  00191A  6F7A               	movwf	??_Bargraph& (0+255),b
  8686  00191C  0EE4               	movlw	228
  8687  00191E                     u4497:
  8688  00191E  2EE8               	decfsz	wreg,f,c
  8689  001920  D7FE               	bra	u4497
  8690  001922  2F7A               	decfsz	??_Bargraph& (0+255),f,b
  8691  001924  D7FC               	bra	u4497
  8692  001926  2F7B               	decfsz	(??_Bargraph+1)& (0+255),f,b
  8693  001928  D7FA               	bra	u4497
  8694  00192A  F000               	nop	
  8695  00192C  0012               	return		;funcret
  8696  00192E                     __end_of_Bargraph:
  8697                           	opt callstack 0
  8698                           
  8699 ;; *************** function _sprintf *****************
  8700 ;; Defined at:
  8701 ;;		line 9 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\nf_sprintf.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;  s               2    8[BANK0 ] PTR unsigned char 
  8704 ;;		 -> Pong@vitez(17), Pong@gameover(17), Pong@micek(17), Pong@zivoty(17), 
  8705 ;;		 -> Bargraph@graph(17), Bargraph@text(17), text(17), nadpis2(17), 
  8706 ;;		 -> nadpis1(17), main@pong(17), main@barg(17), main@pwm(17), 
  8707 ;;		 -> main@mor(17), main@k_r(17), kr_init@mor(17), kr_init@k_r(17), 
  8708 ;;  fmt             2   10[BANK0 ] PTR const unsigned char 
  8709 ;;		 -> STR_122(19), STR_121(19), STR_120(19), STR_119(19), 
  8710 ;;		 -> STR_118(19), STR_117(19), STR_116(19), STR_115(19), 
  8711 ;;		 -> STR_114(19), STR_113(19), STR_112(19), STR_111(19), 
  8712 ;;		 -> STR_110(19), STR_109(16), STR_108(17), STR_107(19), 
  8713 ;;		 -> STR_106(16), STR_105(17), STR_104(19), STR_103(19), 
  8714 ;;		 -> STR_102(19), STR_101(19), STR_100(19), STR_99(19), 
  8715 ;;		 -> STR_98(19), STR_97(19), STR_96(19), STR_95(19), 
  8716 ;;		 -> STR_94(19), STR_93(19), STR_92(19), STR_91(19), 
  8717 ;;		 -> STR_90(17), STR_89(17), STR_88(17), STR_87(17), 
  8718 ;;		 -> STR_86(17), STR_85(17), STR_84(17), STR_83(17), 
  8719 ;;		 -> STR_82(17), STR_81(17), STR_80(17), STR_79(17), 
  8720 ;;		 -> STR_78(17), STR_77(17), STR_76(17), STR_75(17), 
  8721 ;;		 -> STR_74(17), STR_73(18), STR_72(17), STR_71(17), 
  8722 ;;		 -> STR_70(17), STR_69(17), STR_68(23), STR_67(17), 
  8723 ;;		 -> STR_23(17), STR_22(17), STR_20(17), STR_19(17), 
  8724 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(17), 
  8725 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(17), 
  8726 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
  8727 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  8728 ;;		 -> STR_2(17), STR_1(17), 
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;  f               6   20[BANK0 ] struct _IO_FILE
  8731 ;;  ap              2   18[BANK0 ] PTR void [1]
  8732 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8733 ;;  ret             2    0        int 
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  2    8[BANK0 ] int 
  8736 ;; Registers used:
  8737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8743 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8744 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8746 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8747 ;;Total ram usage:       18 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; Hardware stack levels required when called:    8
  8750 ;; This function calls:
  8751 ;;		_vfprintf
  8752 ;; This function is called by:
  8753 ;;		_kr_init
  8754 ;;		_main
  8755 ;;		_Morseovka
  8756 ;;		_PWM_motor_led
  8757 ;;		_Knight_rider_3000
  8758 ;;		_Knight_rider_2000
  8759 ;;		_Bargraph
  8760 ;;		_Pong
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           	psect	text14
  8765  003036                     __ptext14:
  8766                           	opt callstack 0
  8767  003036                     _sprintf:
  8768                           	opt callstack 22
  8769  003036  0E6C               	movlw	low (?_sprintf+4)
  8770  003038  0100               	movlb	0	; () banked
  8771  00303A  6F72               	movwf	sprintf@ap& (0+255),b
  8772  00303C  0E00               	movlw	high (?_sprintf+4)
  8773  00303E  6F73               	movwf	(sprintf@ap+1)& (0+255),b
  8774  003040  C068  F074         	movff	sprintf@s,sprintf@f
  8775  003044  C069  F075         	movff	sprintf@s+1,sprintf@f+1
  8776  003048                     
  8777                           ; BSR set to: 0
  8778  003048  0E00               	movlw	0
  8779  00304A  6F77               	movwf	(sprintf@f+3)& (0+255),b
  8780  00304C  0E00               	movlw	0
  8781  00304E  6F76               	movwf	(sprintf@f+2)& (0+255),b
  8782  003050                     
  8783                           ; BSR set to: 0
  8784  003050  0E00               	movlw	0
  8785  003052  6F79               	movwf	(sprintf@f+5)& (0+255),b
  8786  003054  0E00               	movlw	0
  8787  003056  6F78               	movwf	(sprintf@f+4)& (0+255),b
  8788  003058                     
  8789                           ; BSR set to: 0
  8790  003058  0E74               	movlw	low sprintf@f
  8791  00305A  6F60               	movwf	vfprintf@fp& (0+255),b
  8792  00305C  0E00               	movlw	high sprintf@f
  8793  00305E  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  8794  003060  C06A  F062         	movff	sprintf@fmt,vfprintf@fmt
  8795  003064  C06B  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8796  003068  0E72               	movlw	low sprintf@ap
  8797  00306A  6F64               	movwf	vfprintf@ap& (0+255),b
  8798  00306C  0E00               	movlw	high sprintf@ap
  8799  00306E  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  8800  003070  ECBD  F017         	call	_vfprintf	;wreg free
  8801  003074  0100               	movlb	0	; () banked
  8802  003076  5176               	movf	(sprintf@f+2)& (0+255),w,b
  8803  003078  2568               	addwf	sprintf@s& (0+255),w,b
  8804  00307A  6ED9               	movwf	fsr2l,c
  8805  00307C  5177               	movf	(sprintf@f+3)& (0+255),w,b
  8806  00307E  2169               	addwfc	(sprintf@s+1)& (0+255),w,b
  8807  003080  6EDA               	movwf	fsr2h,c
  8808  003082  0E00               	movlw	0
  8809  003084  6EDF               	movwf	indf2,c
  8810  003086                     
  8811                           ; BSR set to: 0
  8812  003086  0012               	return		;funcret
  8813  003088                     __end_of_sprintf:
  8814                           	opt callstack 0
  8815                           
  8816 ;; *************** function _vfprintf *****************
  8817 ;; Defined at:
  8818 ;;		line 1368 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8821 ;;		 -> sprintf@f(6), NULL(0), 
  8822 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  8823 ;;		 -> STR_122(19), STR_121(19), STR_120(19), STR_119(19), 
  8824 ;;		 -> STR_118(19), STR_117(19), STR_116(19), STR_115(19), 
  8825 ;;		 -> STR_114(19), STR_113(19), STR_112(19), STR_111(19), 
  8826 ;;		 -> STR_110(19), STR_109(16), STR_108(17), STR_107(19), 
  8827 ;;		 -> STR_106(16), STR_105(17), STR_104(19), STR_103(19), 
  8828 ;;		 -> STR_102(19), STR_101(19), STR_100(19), STR_99(19), 
  8829 ;;		 -> STR_98(19), STR_97(19), STR_96(19), STR_95(19), 
  8830 ;;		 -> STR_94(19), STR_93(19), STR_92(19), STR_91(19), 
  8831 ;;		 -> STR_90(17), STR_89(17), STR_88(17), STR_87(17), 
  8832 ;;		 -> STR_86(17), STR_85(17), STR_84(17), STR_83(17), 
  8833 ;;		 -> STR_82(17), STR_81(17), STR_80(17), STR_79(17), 
  8834 ;;		 -> STR_78(17), STR_77(17), STR_76(17), STR_75(17), 
  8835 ;;		 -> STR_74(17), STR_73(18), STR_72(17), STR_71(17), 
  8836 ;;		 -> STR_70(17), STR_69(17), STR_68(23), STR_67(17), 
  8837 ;;		 -> STR_66(3), STR_65(2), STR_64(15), STR_63(13), 
  8838 ;;		 -> STR_62(15), STR_61(17), STR_60(13), STR_59(13), 
  8839 ;;		 -> STR_58(13), STR_57(13), STR_56(13), STR_55(13), 
  8840 ;;		 -> STR_54(13), STR_53(13), STR_52(13), STR_51(13), 
  8841 ;;		 -> STR_50(11), STR_49(11), STR_48(11), STR_47(9), 
  8842 ;;		 -> STR_46(11), STR_45(9), STR_44(5), STR_43(9), 
  8843 ;;		 -> STR_42(9), STR_41(11), STR_40(11), STR_39(9), 
  8844 ;;		 -> STR_38(7), STR_37(7), STR_36(11), STR_35(9), 
  8845 ;;		 -> STR_34(11), STR_33(7), STR_32(11), STR_31(9), 
  8846 ;;		 -> STR_30(11), STR_29(5), STR_28(9), STR_27(11), 
  8847 ;;		 -> STR_26(11), STR_25(7), STR_24(12), STR_23(17), 
  8848 ;;		 -> STR_22(17), STR_21(34), STR_20(17), STR_19(17), 
  8849 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(17), 
  8850 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(17), 
  8851 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
  8852 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  8853 ;;		 -> STR_2(17), STR_1(17), 
  8854 ;;  ap              2    4[BANK0 ] PTR PTR void 
  8855 ;;		 -> printf@ap(2), sprintf@ap(2), 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
  8858 ;;		 -> STR_122(19), STR_121(19), STR_120(19), STR_119(19), 
  8859 ;;		 -> STR_118(19), STR_117(19), STR_116(19), STR_115(19), 
  8860 ;;		 -> STR_114(19), STR_113(19), STR_112(19), STR_111(19), 
  8861 ;;		 -> STR_110(19), STR_109(16), STR_108(17), STR_107(19), 
  8862 ;;		 -> STR_106(16), STR_105(17), STR_104(19), STR_103(19), 
  8863 ;;		 -> STR_102(19), STR_101(19), STR_100(19), STR_99(19), 
  8864 ;;		 -> STR_98(19), STR_97(19), STR_96(19), STR_95(19), 
  8865 ;;		 -> STR_94(19), STR_93(19), STR_92(19), STR_91(19), 
  8866 ;;		 -> STR_90(17), STR_89(17), STR_88(17), STR_87(17), 
  8867 ;;		 -> STR_86(17), STR_85(17), STR_84(17), STR_83(17), 
  8868 ;;		 -> STR_82(17), STR_81(17), STR_80(17), STR_79(17), 
  8869 ;;		 -> STR_78(17), STR_77(17), STR_76(17), STR_75(17), 
  8870 ;;		 -> STR_74(17), STR_73(18), STR_72(17), STR_71(17), 
  8871 ;;		 -> STR_70(17), STR_69(17), STR_68(23), STR_67(17), 
  8872 ;;		 -> STR_66(3), STR_65(2), STR_64(15), STR_63(13), 
  8873 ;;		 -> STR_62(15), STR_61(17), STR_60(13), STR_59(13), 
  8874 ;;		 -> STR_58(13), STR_57(13), STR_56(13), STR_55(13), 
  8875 ;;		 -> STR_54(13), STR_53(13), STR_52(13), STR_51(13), 
  8876 ;;		 -> STR_50(11), STR_49(11), STR_48(11), STR_47(9), 
  8877 ;;		 -> STR_46(11), STR_45(9), STR_44(5), STR_43(9), 
  8878 ;;		 -> STR_42(9), STR_41(11), STR_40(11), STR_39(9), 
  8879 ;;		 -> STR_38(7), STR_37(7), STR_36(11), STR_35(9), 
  8880 ;;		 -> STR_34(11), STR_33(7), STR_32(11), STR_31(9), 
  8881 ;;		 -> STR_30(11), STR_29(5), STR_28(9), STR_27(11), 
  8882 ;;		 -> STR_26(11), STR_25(7), STR_24(12), STR_23(17), 
  8883 ;;		 -> STR_22(17), STR_21(34), STR_20(17), STR_19(17), 
  8884 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(17), 
  8885 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(17), 
  8886 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
  8887 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  8888 ;;		 -> STR_2(17), STR_1(17), 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  2    0[BANK0 ] int 
  8891 ;; Registers used:
  8892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8898 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8902 ;;Total ram usage:        8 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:    7
  8905 ;; This function calls:
  8906 ;;		_vfpfcnvrt
  8907 ;; This function is called by:
  8908 ;;		_sprintf
  8909 ;;		_printf
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text15
  8914  002F7A                     __ptext15:
  8915                           	opt callstack 0
  8916  002F7A                     _vfprintf:
  8917                           	opt callstack 22
  8918  002F7A                     
  8919                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FILE
      +                           *fp, const char *fmt, va_list ap);T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common
      +                          \doprnt.c: 1369: {;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1371:
      +                               char *cfmt;;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1373:  
      +                             cfmt = (char *)fmt;
  8920  002F7A  C062  F066         	movff	vfprintf@fmt,vfprintf@cfmt
  8921  002F7E  C063  F067         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8922  002F82                     
  8923                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  8924  002F82  0E00               	movlw	0
  8925  002F84  0100               	movlb	0	; () banked
  8926  002F86  6FD6               	movwf	(_nout+1)& (0+255),b
  8927  002F88  0E00               	movlw	0
  8928  002F8A  6FD5               	movwf	_nout& (0+255),b
  8929                           
  8930                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt)
      +                           {
  8931  002F8C  EFDB  F017         	goto	l5057
  8932  002F90                     l5055:
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1376:         nout += v
      +                          fpfcnvrt(fp, &cfmt, ap);
  8936  002F90  C060  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  8937  002F94  C061  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8938  002F98  0E66               	movlw	low vfprintf@cfmt
  8939  002F9A  6E47               	movwf	vfpfcnvrt@fmt^0,c
  8940  002F9C  0E00               	movlw	high vfprintf@cfmt
  8941  002F9E  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  8942  002FA0  C064  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  8943  002FA4  C065  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8944  002FA8  EC67  F011         	call	_vfpfcnvrt	;wreg free
  8945  002FAC  5045               	movf	?_vfpfcnvrt^0,w,c
  8946  002FAE  0100               	movlb	0	; () banked
  8947  002FB0  27D5               	addwf	_nout& (0+255),f,b
  8948  002FB2  5046               	movf	(?_vfpfcnvrt+1)^0,w,c
  8949  002FB4  23D6               	addwfc	(_nout+1)& (0+255),f,b
  8950  002FB6                     l5057:
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt)
      +                           {
  8954  002FB6  C066  FFF6         	movff	vfprintf@cfmt,tblptrl
  8955  002FBA  C067  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8956  002FBE                     	if	0	;tblptru may be non-zero
  8957  002FBE                     	endif
  8958  002FBE                     	if	0	;tblptru may be non-zero
  8959  002FBE                     	endif
  8960  002FBE  0008               	tblrd		*
  8961  002FC0  50F5               	movf	tablat,w,c
  8962  002FC2  0900               	iorlw	0
  8963  002FC4  A4D8               	btfss	status,2,c
  8964  002FC6  EFE7  F017         	goto	u3331
  8965  002FCA  EFE9  F017         	goto	u3330
  8966  002FCE                     u3331:
  8967  002FCE  EFC8  F017         	goto	l5055
  8968  002FD2                     u3330:
  8969  002FD2                     
  8970                           ; BSR set to: 0
  8971                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  8972  002FD2  C0D5  F060         	movff	_nout,?_vfprintf
  8973  002FD6  C0D6  F061         	movff	_nout+1,?_vfprintf+1
  8974  002FDA                     
  8975                           ; BSR set to: 0
  8976  002FDA  0012               	return		;funcret
  8977  002FDC                     __end_of_vfprintf:
  8978                           	opt callstack 0
  8979                           
  8980 ;; *************** function _vfpfcnvrt *****************
  8981 ;; Defined at:
  8982 ;;		line 670 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  8985 ;;		 -> sprintf@f(6), NULL(0), 
  8986 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  8987 ;;		 -> vfprintf@cfmt(2), 
  8988 ;;  ap              2   72[COMRAM] PTR PTR void 
  8989 ;;		 -> printf@ap(2), sprintf@ap(2), 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;  ll              8   76[COMRAM] long long 
  8992 ;;  llu             8    0        unsigned long long 
  8993 ;;  f               4    0        unsigned long long 
  8994 ;;  vp              3    0        PTR void 
  8995 ;;  ct              3    0        unsigned char [3]
  8996 ;;  cp              3    0        PTR unsigned char 
  8997 ;;  i               2    0        int 
  8998 ;;  done            2    0        int 
  8999 ;;  c               1   84[COMRAM] unsigned char 
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  2   68[COMRAM] int 
  9002 ;; Registers used:
  9003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9009 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9010 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9012 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9013 ;;Total ram usage:       17 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; Hardware stack levels required when called:    6
  9016 ;; This function calls:
  9017 ;;		_ctoa
  9018 ;;		_dtoa
  9019 ;;		_fputc
  9020 ;; This function is called by:
  9021 ;;		_vfprintf
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           	psect	text16
  9026  0022CE                     __ptext16:
  9027                           	opt callstack 0
  9028  0022CE                     _vfpfcnvrt:
  9029                           	opt callstack 22
  9030  0022CE                     
  9031                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 670: static int vfpfcnv
      +                          rt(FILE *fp, char *fmt[], va_list ap);T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\com
      +                          mon\doprnt.c: 671: {;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 672
      +                          :     char c, *cp, ct[3];;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c
      +                          : 673:     int done, i;;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 
      +                          674:     long long ll;;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 6
      +                          75:     unsigned long long llu;
  9032  0022CE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9033  0022D2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9034  0022D6  CFDE FFF6          	movff	postinc2,tblptrl
  9035  0022DA  CFDD FFF7          	movff	postdec2,tblptrh
  9036  0022DE                     	if	0	;tblptru may be non-zero
  9037  0022DE                     	endif
  9038  0022DE                     	if	0	;tblptru may be non-zero
  9039  0022DE                     	endif
  9040  0022DE  0008               	tblrd		*
  9041  0022E0  50F5               	movf	tablat,w,c
  9042  0022E2  0A25               	xorlw	37
  9043  0022E4  A4D8               	btfss	status,2,c
  9044  0022E6  EF77  F011         	goto	u3281
  9045  0022EA  EF79  F011         	goto	u3280
  9046  0022EE                     u3281:
  9047  0022EE  EF5E  F012         	goto	l5043
  9048  0022F2                     u3280:
  9049  0022F2                     
  9050                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  9051  0022F2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9052  0022F6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9053  0022FA  2ADE               	incf	postinc2,f,c
  9054  0022FC  0E00               	movlw	0
  9055  0022FE  22DD               	addwfc	postdec2,f,c
  9056  002300                     
  9057                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 683:         flags = wi
      +                          dth = 0;
  9058  002300  0E00               	movlw	0
  9059  002302  6E57               	movwf	(_width+1)^0,c
  9060  002304  0E00               	movlw	0
  9061  002306  6E56               	movwf	_width^0,c
  9062  002308  C056  F058         	movff	_width,_flags
  9063  00230C  C057  F059         	movff	_width+1,_flags+1
  9064  002310                     
  9065                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 684:         prec = -1;
  9066  002310  0100               	movlb	0	; () banked
  9067  002312  69D7               	setf	_prec& (0+255),b
  9068  002314  69D8               	setf	(_prec+1)& (0+255),b
  9069  002316                     
  9070                           ; BSR set to: 0
  9071                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 792:         if (*fmt[0
      +                          ] == 'c') {
  9072  002316  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9073  00231A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9074  00231E  CFDE FFF6          	movff	postinc2,tblptrl
  9075  002322  CFDD FFF7          	movff	postdec2,tblptrh
  9076  002326                     	if	0	;tblptru may be non-zero
  9077  002326                     	endif
  9078  002326                     	if	0	;tblptru may be non-zero
  9079  002326                     	endif
  9080  002326  0008               	tblrd		*
  9081  002328  50F5               	movf	tablat,w,c
  9082  00232A  0A63               	xorlw	99
  9083  00232C  A4D8               	btfss	status,2,c
  9084  00232E  EF9B  F011         	goto	u3291
  9085  002332  EF9D  F011         	goto	u3290
  9086  002336                     u3291:
  9087  002336  EFC4  F011         	goto	l5017
  9088  00233A                     u3290:
  9089  00233A                     
  9090                           ; BSR set to: 0
  9091                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 793:             ++*fmt
      +                          ;
  9092  00233A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9093  00233E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9094  002342  2ADE               	incf	postinc2,f,c
  9095  002344  0E00               	movlw	0
  9096  002346  22DD               	addwfc	postdec2,f,c
  9097                           
  9098                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 794:             c = (u
      +                          nsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9099  002348  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9100  00234C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9101  002350  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  9102  002354  0E02               	movlw	2
  9103  002356  26DE               	addwf	postinc2,f,c
  9104  002358  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  9105  00235C  0E00               	movlw	0
  9106  00235E  22DD               	addwfc	postdec2,f,c
  9107  002360  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9108  002364  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9109  002368  50DF               	movf	indf2,w,c
  9110  00236A  6E55               	movwf	vfpfcnvrt@c^0,c
  9111  00236C                     
  9112                           ; BSR set to: 0
  9113                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 795:             return
      +                           ctoa(fp, c);
  9114  00236C  C045  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  9115  002370  C046  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  9116  002374  C055  F023         	movff	vfpfcnvrt@c,ctoa@c
  9117  002378  ECEE  F017         	call	_ctoa	;wreg free
  9118  00237C  C021  F045         	movff	?_ctoa,?_vfpfcnvrt
  9119  002380  C022  F046         	movff	?_ctoa+1,?_vfpfcnvrt+1
  9120  002384  EF79  F012         	goto	l572
  9121  002388                     l5017:
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt[
      +                          0] == 'd') || (*fmt[0] == 'i')) {
  9125  002388  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9126  00238C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9127  002390  CFDE FFF6          	movff	postinc2,tblptrl
  9128  002394  CFDD FFF7          	movff	postdec2,tblptrh
  9129  002398                     	if	0	;tblptru may be non-zero
  9130  002398                     	endif
  9131  002398                     	if	0	;tblptru may be non-zero
  9132  002398                     	endif
  9133  002398  0008               	tblrd		*
  9134  00239A  50F5               	movf	tablat,w,c
  9135  00239C  0A64               	xorlw	100
  9136  00239E  B4D8               	btfsc	status,2,c
  9137  0023A0  EFD4  F011         	goto	u3301
  9138  0023A4  EFD6  F011         	goto	u3300
  9139  0023A8                     u3301:
  9140  0023A8  EFE8  F011         	goto	l5021
  9141  0023AC                     u3300:
  9142  0023AC                     
  9143                           ; BSR set to: 0
  9144  0023AC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9145  0023B0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9146  0023B4  CFDE FFF6          	movff	postinc2,tblptrl
  9147  0023B8  CFDD FFF7          	movff	postdec2,tblptrh
  9148  0023BC                     	if	0	;tblptru may be non-zero
  9149  0023BC                     	endif
  9150  0023BC                     	if	0	;tblptru may be non-zero
  9151  0023BC                     	endif
  9152  0023BC  0008               	tblrd		*
  9153  0023BE  50F5               	movf	tablat,w,c
  9154  0023C0  0A69               	xorlw	105
  9155  0023C2  A4D8               	btfss	status,2,c
  9156  0023C4  EFE6  F011         	goto	u3311
  9157  0023C8  EFE8  F011         	goto	u3310
  9158  0023CC                     u3311:
  9159  0023CC  EF28  F012         	goto	l5027
  9160  0023D0                     u3310:
  9161  0023D0                     l5021:
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 827:             ++*fmt
      +                          ;
  9165  0023D0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9166  0023D4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9167  0023D8  2ADE               	incf	postinc2,f,c
  9168  0023DA  0E00               	movlw	0
  9169  0023DC  22DD               	addwfc	postdec2,f,c
  9170                           
  9171                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 828:             ll = (
      +                          long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9172  0023DE  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9173  0023E2  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9174  0023E6  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  9175  0023EA  0E02               	movlw	2
  9176  0023EC  26DE               	addwf	postinc2,f,c
  9177  0023EE  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  9178  0023F2  0E00               	movlw	0
  9179  0023F4  22DD               	addwfc	postdec2,f,c
  9180  0023F6  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9181  0023FA  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9182  0023FE  CFDE F04D          	movff	postinc2,vfpfcnvrt@ll
  9183  002402  CFDD F04E          	movff	postdec2,vfpfcnvrt@ll+1
  9184  002406  0E00               	movlw	0
  9185  002408  BE4E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  9186  00240A  0EFF               	movlw	-1
  9187  00240C  6E4F               	movwf	(vfpfcnvrt@ll+2)^0,c
  9188  00240E  6E50               	movwf	(vfpfcnvrt@ll+3)^0,c
  9189  002410  6E51               	movwf	(vfpfcnvrt@ll+4)^0,c
  9190  002412  6E52               	movwf	(vfpfcnvrt@ll+5)^0,c
  9191  002414  6E53               	movwf	(vfpfcnvrt@ll+6)^0,c
  9192  002416  6E54               	movwf	(vfpfcnvrt@ll+7)^0,c
  9193  002418                     
  9194                           ; BSR set to: 0
  9195                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 830:             return
      +                           dtoa(fp, ll);
  9196  002418  C045  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  9197  00241C  C046  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9198  002420  C04D  F023         	movff	vfpfcnvrt@ll,dtoa@d
  9199  002424  C04E  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9200  002428  C04F  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9201  00242C  C050  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9202  002430  C051  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9203  002434  C052  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9204  002438  C053  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9205  00243C  C054  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9206  002440  EC9D  F00E         	call	_dtoa	;wreg free
  9207  002444  C021  F045         	movff	?_dtoa,?_vfpfcnvrt
  9208  002448  C022  F046         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9209  00244C  EF79  F012         	goto	l572
  9210  002450                     l5027:
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1350:         if ((*fmt
      +                          )[0] == '%') {
  9214  002450  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9215  002454  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9216  002458  CFDE FFF6          	movff	postinc2,tblptrl
  9217  00245C  CFDD FFF7          	movff	postdec2,tblptrh
  9218  002460                     	if	0	;tblptru may be non-zero
  9219  002460                     	endif
  9220  002460                     	if	0	;tblptru may be non-zero
  9221  002460                     	endif
  9222  002460  0008               	tblrd		*
  9223  002462  50F5               	movf	tablat,w,c
  9224  002464  0A25               	xorlw	37
  9225  002466  A4D8               	btfss	status,2,c
  9226  002468  EF38  F012         	goto	u3321
  9227  00246C  EF3A  F012         	goto	u3320
  9228  002470                     u3321:
  9229  002470  EF51  F012         	goto	l5037
  9230  002474                     u3320:
  9231  002474                     
  9232                           ; BSR set to: 0
  9233                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1351:             ++*fm
      +                          t;
  9234  002474  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9235  002478  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9236  00247C  2ADE               	incf	postinc2,f,c
  9237  00247E  0E00               	movlw	0
  9238  002480  22DD               	addwfc	postdec2,f,c
  9239  002482                     
  9240                           ; BSR set to: 0
  9241                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1352:             fputc
      +                          ((int)'%', fp);
  9242  002482  0E00               	movlw	0
  9243  002484  6E07               	movwf	(fputc@c+1)^0,c
  9244  002486  0E25               	movlw	37
  9245  002488  6E06               	movwf	fputc@c^0,c
  9246  00248A  C045  F008         	movff	vfpfcnvrt@fp,fputc@fp
  9247  00248E  C046  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9248  002492  EC77  F016         	call	_fputc	;wreg free
  9249  002496                     l5033:
  9250                           
  9251                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1353:             retur
      +                          n 1;
  9252  002496  0E00               	movlw	0
  9253  002498  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  9254  00249A  0E01               	movlw	1
  9255  00249C  6E45               	movwf	?_vfpfcnvrt^0,c
  9256  00249E  EF79  F012         	goto	l572
  9257  0024A2                     l5037:
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  9261  0024A2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9262  0024A6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9263  0024AA  2ADE               	incf	postinc2,f,c
  9264  0024AC  0E00               	movlw	0
  9265  0024AE  22DD               	addwfc	postdec2,f,c
  9266  0024B0                     
  9267                           ; BSR set to: 0
  9268                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1358:         return 0;
  9269  0024B0  0E00               	movlw	0
  9270  0024B2  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  9271  0024B4  0E00               	movlw	0
  9272  0024B6  6E45               	movwf	?_vfpfcnvrt^0,c
  9273  0024B8  EF79  F012         	goto	l572
  9274  0024BC                     l5043:
  9275                           
  9276                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(*
      +                          fmt)[0], fp);
  9277  0024BC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9278  0024C0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9279  0024C4  CFDE FFF6          	movff	postinc2,tblptrl
  9280  0024C8  CFDD FFF7          	movff	postdec2,tblptrh
  9281  0024CC                     	if	0	;tblptru may be non-zero
  9282  0024CC                     	endif
  9283  0024CC                     	if	0	;tblptru may be non-zero
  9284  0024CC                     	endif
  9285  0024CC  0008               	tblrd		*
  9286  0024CE  50F5               	movf	tablat,w,c
  9287  0024D0  6E06               	movwf	fputc@c^0,c
  9288  0024D2  6A07               	clrf	(fputc@c+1)^0,c
  9289  0024D4  C045  F008         	movff	vfpfcnvrt@fp,fputc@fp
  9290  0024D8  C046  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9291  0024DC  EC77  F016         	call	_fputc	;wreg free
  9292  0024E0                     
  9293                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  9294  0024E0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9295  0024E4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9296  0024E8  2ADE               	incf	postinc2,f,c
  9297  0024EA  0E00               	movlw	0
  9298  0024EC  22DD               	addwfc	postdec2,f,c
  9299  0024EE  EF4B  F012         	goto	l5033
  9300  0024F2                     l572:
  9301  0024F2  0012               	return		;funcret
  9302  0024F4                     __end_of_vfpfcnvrt:
  9303                           	opt callstack 0
  9304                           
  9305 ;; *************** function _dtoa *****************
  9306 ;; Defined at:
  9307 ;;		line 274 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  9310 ;;		 -> sprintf@f(6), NULL(0), 
  9311 ;;  d               8   34[COMRAM] long long 
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;  n               8   58[COMRAM] long long 
  9314 ;;  i               2   66[COMRAM] int 
  9315 ;;  s               2   56[COMRAM] int 
  9316 ;;  w               2   54[COMRAM] int 
  9317 ;;  p               2   52[COMRAM] int 
  9318 ;; Return value:  Size  Location     Type
  9319 ;;                  2   32[COMRAM] int 
  9320 ;; Registers used:
  9321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9322 ;; Tracked objects:
  9323 ;;		On entry : 0/0
  9324 ;;		On exit  : 0/0
  9325 ;;		Unchanged: 0/0
  9326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9327 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9328 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9329 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9330 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9331 ;;Total ram usage:       36 bytes
  9332 ;; Hardware stack levels used:    1
  9333 ;; Hardware stack levels required when called:    5
  9334 ;; This function calls:
  9335 ;;		___aodiv
  9336 ;;		___aomod
  9337 ;;		_abs
  9338 ;;		_pad
  9339 ;; This function is called by:
  9340 ;;		_vfpfcnvrt
  9341 ;; This function uses a non-reentrant model
  9342 ;;
  9343                           
  9344                           	psect	text17
  9345  001D3A                     __ptext17:
  9346                           	opt callstack 0
  9347  001D3A                     _dtoa:
  9348                           	opt callstack 22
  9349  001D3A                     
  9350                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 274: static int dtoa(FI
      +                          LE *fp, long long d);T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 275
      +                          : {;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 276:     int i, p, s
      +                          , w;;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 277:     long long 
      +                          n;;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9351  001D3A  C023  F03B         	movff	dtoa@d,dtoa@n
  9352  001D3E  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
  9353  001D42  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
  9354  001D46  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
  9355  001D4A  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
  9356  001D4E  C028  F040         	movff	dtoa@d+5,dtoa@n+5
  9357  001D52  C029  F041         	movff	dtoa@d+6,dtoa@n+6
  9358  001D56  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
  9359  001D5A                     
  9360                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1 
      +                          : 0;
  9361  001D5A  BE42               	btfsc	(dtoa@n+7)^0,7,c
  9362  001D5C  EFB2  F00E         	goto	u3131
  9363  001D60  EFB5  F00E         	goto	u3130
  9364  001D64                     u3131:
  9365  001D64  0E01               	movlw	1
  9366  001D66  EFB6  F00E         	goto	u3140
  9367  001D6A                     u3130:
  9368  001D6A  0E00               	movlw	0
  9369  001D6C                     u3140:
  9370  001D6C  6E39               	movwf	dtoa@s^0,c
  9371  001D6E  6A3A               	clrf	(dtoa@s+1)^0,c
  9372                           
  9373                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  9374  001D70  5039               	movf	dtoa@s^0,w,c
  9375  001D72  103A               	iorwf	(dtoa@s+1)^0,w,c
  9376  001D74  B4D8               	btfsc	status,2,c
  9377  001D76  EFBF  F00E         	goto	u3151
  9378  001D7A  EFC1  F00E         	goto	u3150
  9379  001D7E                     u3151:
  9380  001D7E  EFD1  F00E         	goto	l4945
  9381  001D82                     u3150:
  9382  001D82                     
  9383                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  9384  001D82  1E42               	comf	(dtoa@n+7)^0,f,c
  9385  001D84  1E41               	comf	(dtoa@n+6)^0,f,c
  9386  001D86  1E40               	comf	(dtoa@n+5)^0,f,c
  9387  001D88  1E3F               	comf	(dtoa@n+4)^0,f,c
  9388  001D8A  1E3E               	comf	(dtoa@n+3)^0,f,c
  9389  001D8C  1E3D               	comf	(dtoa@n+2)^0,f,c
  9390  001D8E  1E3C               	comf	(dtoa@n+1)^0,f,c
  9391  001D90  6C3B               	negf	dtoa@n^0,c
  9392  001D92  0E00               	movlw	0
  9393  001D94  223C               	addwfc	(dtoa@n+1)^0,f,c
  9394  001D96  223D               	addwfc	(dtoa@n+2)^0,f,c
  9395  001D98  223E               	addwfc	(dtoa@n+3)^0,f,c
  9396  001D9A  223F               	addwfc	(dtoa@n+4)^0,f,c
  9397  001D9C  2240               	addwfc	(dtoa@n+5)^0,f,c
  9398  001D9E  2241               	addwfc	(dtoa@n+6)^0,f,c
  9399  001DA0  2242               	addwfc	(dtoa@n+7)^0,f,c
  9400  001DA2                     l4945:
  9401                           
  9402                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 0
      +                          )) {
  9403  001DA2  0100               	movlb	0	; () banked
  9404  001DA4  BFD8               	btfsc	(_prec+1)& (0+255),7,b
  9405  001DA6  EFD7  F00E         	goto	u3161
  9406  001DAA  EFD9  F00E         	goto	u3160
  9407  001DAE                     u3161:
  9408  001DAE  EFDA  F00E         	goto	l4949
  9409  001DB2                     u3160:
  9410  001DB2                     
  9411                           ; BSR set to: 0
  9412                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 288:         flags &= ~
      +                          (1 << 1);
  9413  001DB2  9258               	bcf	_flags^0,1,c
  9414  001DB4                     l4949:
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec)
      +                           ? prec : 1;
  9418  001DB4  BFD8               	btfsc	(_prec+1)& (0+255),7,b
  9419  001DB6  EFE7  F00E         	goto	u3170
  9420  001DBA  51D8               	movf	(_prec+1)& (0+255),w,b
  9421  001DBC  E106               	bnz	u3171
  9422  001DBE  05D7               	decf	_prec& (0+255),w,b
  9423  001DC0  B0D8               	btfsc	status,0,c
  9424  001DC2  EFE5  F00E         	goto	u3171
  9425  001DC6  EFE7  F00E         	goto	u3170
  9426  001DCA                     u3171:
  9427  001DCA  EFED  F00E         	goto	l547
  9428  001DCE                     u3170:
  9429  001DCE                     
  9430                           ; BSR set to: 0
  9431  001DCE  0E00               	movlw	0
  9432  001DD0  6E36               	movwf	(dtoa@p+1)^0,c
  9433  001DD2  0E01               	movlw	1
  9434  001DD4  6E35               	movwf	dtoa@p^0,c
  9435  001DD6  EFF1  F00E         	goto	l549
  9436  001DDA                     l547:
  9437                           
  9438                           ; BSR set to: 0
  9439  001DDA  C0D7  F035         	movff	_prec,dtoa@p
  9440  001DDE  C0D8  F036         	movff	_prec+1,dtoa@p+1
  9441  001DE2                     l549:
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 291:     w = width;
  9445  001DE2  C056  F037         	movff	_width,dtoa@w
  9446  001DE6  C057  F038         	movff	_width+1,dtoa@w+1
  9447  001DEA                     
  9448                           ; BSR set to: 0
  9449                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 292:     if (s || (flag
      +                          s & (1 << 2))) {
  9450  001DEA  5039               	movf	dtoa@s^0,w,c
  9451  001DEC  103A               	iorwf	(dtoa@s+1)^0,w,c
  9452  001DEE  A4D8               	btfss	status,2,c
  9453  001DF0  EFFC  F00E         	goto	u3181
  9454  001DF4  EFFE  F00E         	goto	u3180
  9455  001DF8                     u3181:
  9456  001DF8  EF05  F00F         	goto	l4957
  9457  001DFC                     u3180:
  9458  001DFC                     
  9459                           ; BSR set to: 0
  9460  001DFC  A458               	btfss	_flags^0,2,c
  9461  001DFE  EF03  F00F         	goto	u3191
  9462  001E02  EF05  F00F         	goto	u3190
  9463  001E06                     u3191:
  9464  001E06  EF08  F00F         	goto	l4959
  9465  001E0A                     u3190:
  9466  001E0A                     l4957:
  9467                           
  9468                           ; BSR set to: 0
  9469                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 293:         --w;
  9470  001E0A  0637               	decf	dtoa@w^0,f,c
  9471  001E0C  A0D8               	btfss	status,0,c
  9472  001E0E  0638               	decf	(dtoa@w+1)^0,f,c
  9473  001E10                     l4959:
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(dbu
      +                          f) - 1;
  9477  001E10  0E00               	movlw	0
  9478  001E12  6E44               	movwf	(dtoa@i+1)^0,c
  9479  001E14  0E1F               	movlw	31
  9480  001E16  6E43               	movwf	dtoa@i^0,c
  9481  001E18                     
  9482                           ; BSR set to: 0
  9483                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0'
      +                          ;
  9484  001E18  0E00               	movlw	0
  9485  001E1A  0101               	movlb	1	; () banked
  9486  001E1C  6F51               	movwf	(_dbuf+31)& (0+255),b
  9487                           
  9488                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1
      +                          ) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9489  001E1E  EF8D  F00F         	goto	l4973
  9490  001E22                     l4963:
  9491                           
  9492                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 300:         --i;
  9493  001E22  0643               	decf	dtoa@i^0,f,c
  9494  001E24  A0D8               	btfss	status,0,c
  9495  001E26  0644               	decf	(dtoa@i+1)^0,f,c
  9496  001E28                     
  9497                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] = 
      +                          '0' + abs(n % 10);
  9498  001E28  0E32               	movlw	low _dbuf
  9499  001E2A  2443               	addwf	dtoa@i^0,w,c
  9500  001E2C  6ED9               	movwf	fsr2l,c
  9501  001E2E  0E01               	movlw	high _dbuf
  9502  001E30  2044               	addwfc	(dtoa@i+1)^0,w,c
  9503  001E32  6EDA               	movwf	fsr2h,c
  9504  001E34  C03B  F005         	movff	dtoa@n,___aomod@dividend
  9505  001E38  C03C  F006         	movff	dtoa@n+1,___aomod@dividend+1
  9506  001E3C  C03D  F007         	movff	dtoa@n+2,___aomod@dividend+2
  9507  001E40  C03E  F008         	movff	dtoa@n+3,___aomod@dividend+3
  9508  001E44  C03F  F009         	movff	dtoa@n+4,___aomod@dividend+4
  9509  001E48  C040  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  9510  001E4C  C041  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  9511  001E50  C042  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  9512  001E54  0E0A               	movlw	10
  9513  001E56  6E0D               	movwf	___aomod@divisor^0,c
  9514  001E58  0E00               	movlw	0
  9515  001E5A  6E0E               	movwf	(___aomod@divisor+1)^0,c
  9516  001E5C  0E00               	movlw	0
  9517  001E5E  6E0F               	movwf	(___aomod@divisor+2)^0,c
  9518  001E60  0E00               	movlw	0
  9519  001E62  6E10               	movwf	(___aomod@divisor+3)^0,c
  9520  001E64  0E00               	movlw	0
  9521  001E66  6E11               	movwf	(___aomod@divisor+4)^0,c
  9522  001E68  0E00               	movlw	0
  9523  001E6A  6E12               	movwf	(___aomod@divisor+5)^0,c
  9524  001E6C  0E00               	movlw	0
  9525  001E6E  6E13               	movwf	(___aomod@divisor+6)^0,c
  9526  001E70  0E00               	movlw	0
  9527  001E72  6E14               	movwf	(___aomod@divisor+7)^0,c
  9528  001E74  ECF1  F014         	call	___aomod	;wreg free
  9529  001E78  C005  F02B         	movff	?___aomod,??_dtoa
  9530  001E7C  C006  F02C         	movff	?___aomod+1,??_dtoa+1
  9531  001E80  C007  F02D         	movff	?___aomod+2,??_dtoa+2
  9532  001E84  C008  F02E         	movff	?___aomod+3,??_dtoa+3
  9533  001E88  C009  F02F         	movff	?___aomod+4,??_dtoa+4
  9534  001E8C  C00A  F030         	movff	?___aomod+5,??_dtoa+5
  9535  001E90  C00B  F031         	movff	?___aomod+6,??_dtoa+6
  9536  001E94  C00C  F032         	movff	?___aomod+7,??_dtoa+7
  9537  001E98  C02B  F017         	movff	??_dtoa,abs@a
  9538  001E9C  C02D  F018         	movff	??_dtoa+2,abs@a+1
  9539  001EA0  EC66  F018         	call	_abs	;wreg free
  9540  001EA4  5017               	movf	?_abs^0,w,c
  9541  001EA6  0F30               	addlw	48
  9542  001EA8  6EDF               	movwf	indf2,c
  9543  001EAA                     
  9544                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 302:         --p;
  9545  001EAA  0635               	decf	dtoa@p^0,f,c
  9546  001EAC  A0D8               	btfss	status,0,c
  9547  001EAE  0636               	decf	(dtoa@p+1)^0,f,c
  9548  001EB0                     
  9549                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 303:         --w;
  9550  001EB0  0637               	decf	dtoa@w^0,f,c
  9551  001EB2  A0D8               	btfss	status,0,c
  9552  001EB4  0638               	decf	(dtoa@w+1)^0,f,c
  9553  001EB6                     
  9554                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 304:         n = n / 10
      +                          ;
  9555  001EB6  C03B  F005         	movff	dtoa@n,___aodiv@dividend
  9556  001EBA  C03C  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  9557  001EBE  C03D  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  9558  001EC2  C03E  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  9559  001EC6  C03F  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  9560  001ECA  C040  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  9561  001ECE  C041  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  9562  001ED2  C042  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  9563  001ED6  0E0A               	movlw	10
  9564  001ED8  6E0D               	movwf	___aodiv@divisor^0,c
  9565  001EDA  0E00               	movlw	0
  9566  001EDC  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  9567  001EDE  0E00               	movlw	0
  9568  001EE0  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  9569  001EE2  0E00               	movlw	0
  9570  001EE4  6E10               	movwf	(___aodiv@divisor+3)^0,c
  9571  001EE6  0E00               	movlw	0
  9572  001EE8  6E11               	movwf	(___aodiv@divisor+4)^0,c
  9573  001EEA  0E00               	movlw	0
  9574  001EEC  6E12               	movwf	(___aodiv@divisor+5)^0,c
  9575  001EEE  0E00               	movlw	0
  9576  001EF0  6E13               	movwf	(___aodiv@divisor+6)^0,c
  9577  001EF2  0E00               	movlw	0
  9578  001EF4  6E14               	movwf	(___aodiv@divisor+7)^0,c
  9579  001EF6  EC75  F013         	call	___aodiv	;wreg free
  9580  001EFA  C005  F03B         	movff	?___aodiv,dtoa@n
  9581  001EFE  C006  F03C         	movff	?___aodiv+1,dtoa@n+1
  9582  001F02  C007  F03D         	movff	?___aodiv+2,dtoa@n+2
  9583  001F06  C008  F03E         	movff	?___aodiv+3,dtoa@n+3
  9584  001F0A  C009  F03F         	movff	?___aodiv+4,dtoa@n+4
  9585  001F0E  C00A  F040         	movff	?___aodiv+5,dtoa@n+5
  9586  001F12  C00B  F041         	movff	?___aodiv+6,dtoa@n+6
  9587  001F16  C00C  F042         	movff	?___aodiv+7,dtoa@n+7
  9588  001F1A                     l4973:
  9589                           
  9590                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1
      +                          ) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9591  001F1A  BE44               	btfsc	(dtoa@i+1)^0,7,c
  9592  001F1C  EF98  F00F         	goto	u3201
  9593  001F20  5044               	movf	(dtoa@i+1)^0,w,c
  9594  001F22  E108               	bnz	u3200
  9595  001F24  0443               	decf	dtoa@i^0,w,c
  9596  001F26  A0D8               	btfss	status,0,c
  9597  001F28  EF98  F00F         	goto	u3201
  9598  001F2C  EF9A  F00F         	goto	u3200
  9599  001F30                     u3201:
  9600  001F30  EFCA  F00F         	goto	l4983
  9601  001F34                     u3200:
  9602  001F34  503B               	movf	dtoa@n^0,w,c
  9603  001F36  103C               	iorwf	(dtoa@n+1)^0,w,c
  9604  001F38  103D               	iorwf	(dtoa@n+2)^0,w,c
  9605  001F3A  103E               	iorwf	(dtoa@n+3)^0,w,c
  9606  001F3C  103F               	iorwf	(dtoa@n+4)^0,w,c
  9607  001F3E  1040               	iorwf	(dtoa@n+5)^0,w,c
  9608  001F40  1041               	iorwf	(dtoa@n+6)^0,w,c
  9609  001F42  1042               	iorwf	(dtoa@n+7)^0,w,c
  9610  001F44  A4D8               	btfss	status,2,c
  9611  001F46  EFA7  F00F         	goto	u3211
  9612  001F4A  EFA9  F00F         	goto	u3210
  9613  001F4E                     u3211:
  9614  001F4E  EF11  F00F         	goto	l4963
  9615  001F52                     u3210:
  9616  001F52  BE36               	btfsc	(dtoa@p+1)^0,7,c
  9617  001F54  EFB6  F00F         	goto	u3220
  9618  001F58  5036               	movf	(dtoa@p+1)^0,w,c
  9619  001F5A  E106               	bnz	u3221
  9620  001F5C  0435               	decf	dtoa@p^0,w,c
  9621  001F5E  B0D8               	btfsc	status,0,c
  9622  001F60  EFB4  F00F         	goto	u3221
  9623  001F64  EFB6  F00F         	goto	u3220
  9624  001F68                     u3221:
  9625  001F68  EF11  F00F         	goto	l4963
  9626  001F6C                     u3220:
  9627  001F6C  BE38               	btfsc	(dtoa@w+1)^0,7,c
  9628  001F6E  EFC1  F00F         	goto	u3231
  9629  001F72  5038               	movf	(dtoa@w+1)^0,w,c
  9630  001F74  E108               	bnz	u3230
  9631  001F76  0437               	decf	dtoa@w^0,w,c
  9632  001F78  A0D8               	btfss	status,0,c
  9633  001F7A  EFC1  F00F         	goto	u3231
  9634  001F7E  EFC3  F00F         	goto	u3230
  9635  001F82                     u3231:
  9636  001F82  EFCA  F00F         	goto	l4983
  9637  001F86                     u3230:
  9638  001F86  B258               	btfsc	_flags^0,1,c
  9639  001F88  EFC8  F00F         	goto	u3241
  9640  001F8C  EFCA  F00F         	goto	u3240
  9641  001F90                     u3241:
  9642  001F90  EF11  F00F         	goto	l4963
  9643  001F94                     u3240:
  9644  001F94                     l4983:
  9645                           
  9646                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 308:     if (s || (flag
      +                          s & (1 << 2))) {
  9647  001F94  5039               	movf	dtoa@s^0,w,c
  9648  001F96  103A               	iorwf	(dtoa@s+1)^0,w,c
  9649  001F98  A4D8               	btfss	status,2,c
  9650  001F9A  EFD1  F00F         	goto	u3251
  9651  001F9E  EFD3  F00F         	goto	u3250
  9652  001FA2                     u3251:
  9653  001FA2  EFDA  F00F         	goto	l4987
  9654  001FA6                     u3250:
  9655  001FA6  A458               	btfss	_flags^0,2,c
  9656  001FA8  EFD8  F00F         	goto	u3261
  9657  001FAC  EFDA  F00F         	goto	u3260
  9658  001FB0                     u3261:
  9659  001FB0  EFF8  F00F         	goto	l4997
  9660  001FB4                     u3260:
  9661  001FB4                     l4987:
  9662                           
  9663                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 309:         --i;
  9664  001FB4  0643               	decf	dtoa@i^0,f,c
  9665  001FB6  A0D8               	btfss	status,0,c
  9666  001FB8  0644               	decf	(dtoa@i+1)^0,f,c
  9667  001FBA                     
  9668                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] = 
      +                          s ? '-' : '+';
  9669  001FBA  5039               	movf	dtoa@s^0,w,c
  9670  001FBC  103A               	iorwf	(dtoa@s+1)^0,w,c
  9671  001FBE  A4D8               	btfss	status,2,c
  9672  001FC0  EFE4  F00F         	goto	u3271
  9673  001FC4  EFE6  F00F         	goto	u3270
  9674  001FC8                     u3271:
  9675  001FC8  EFEC  F00F         	goto	l4993
  9676  001FCC                     u3270:
  9677  001FCC  0E00               	movlw	0
  9678  001FCE  6E34               	movwf	(_dtoa$1781+1)^0,c
  9679  001FD0  0E2B               	movlw	43
  9680  001FD2  6E33               	movwf	_dtoa$1781^0,c
  9681  001FD4  EFF0  F00F         	goto	l4995
  9682  001FD8                     l4993:
  9683  001FD8  0E00               	movlw	0
  9684  001FDA  6E34               	movwf	(_dtoa$1781+1)^0,c
  9685  001FDC  0E2D               	movlw	45
  9686  001FDE  6E33               	movwf	_dtoa$1781^0,c
  9687  001FE0                     l4995:
  9688  001FE0  0E32               	movlw	low _dbuf
  9689  001FE2  2443               	addwf	dtoa@i^0,w,c
  9690  001FE4  6ED9               	movwf	fsr2l,c
  9691  001FE6  0E01               	movlw	high _dbuf
  9692  001FE8  2044               	addwfc	(dtoa@i+1)^0,w,c
  9693  001FEA  6EDA               	movwf	fsr2h,c
  9694  001FEC  C033  FFDF         	movff	_dtoa$1781,indf2
  9695  001FF0                     l4997:
  9696                           
  9697                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 314:     return pad(fp,
      +                           &dbuf[i], w);
  9698  001FF0  C021  F016         	movff	dtoa@fp,pad@fp
  9699  001FF4  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  9700  001FF8  0E32               	movlw	low _dbuf
  9701  001FFA  2443               	addwf	dtoa@i^0,w,c
  9702  001FFC  6E18               	movwf	pad@buf^0,c
  9703  001FFE  0E01               	movlw	high _dbuf
  9704  002000  2044               	addwfc	(dtoa@i+1)^0,w,c
  9705  002002  6E19               	movwf	(pad@buf+1)^0,c
  9706  002004  C037  F01A         	movff	dtoa@w,pad@p
  9707  002008  C038  F01B         	movff	dtoa@w+1,pad@p+1
  9708  00200C  ECDC  F016         	call	_pad	;wreg free
  9709  002010  C016  F021         	movff	?_pad,?_dtoa
  9710  002014  C017  F022         	movff	?_pad+1,?_dtoa+1
  9711  002018  0012               	return		;funcret
  9712  00201A                     __end_of_dtoa:
  9713                           	opt callstack 0
  9714                           
  9715 ;; *************** function _abs *****************
  9716 ;; Defined at:
  9717 ;;		line 1 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\abs.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  a               2   22[COMRAM] int 
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;		None
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  2   22[COMRAM] int 
  9724 ;; Registers used:
  9725 ;;		wreg, status,2, status,0
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/0
  9728 ;;		On exit  : 0/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9733 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9734 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9735 ;;Total ram usage:        4 bytes
  9736 ;; Hardware stack levels used:    1
  9737 ;; Hardware stack levels required when called:    1
  9738 ;; This function calls:
  9739 ;;		Nothing
  9740 ;; This function is called by:
  9741 ;;		_dtoa
  9742 ;; This function uses a non-reentrant model
  9743 ;;
  9744                           
  9745                           	psect	text18
  9746  0030CC                     __ptext18:
  9747                           	opt callstack 0
  9748  0030CC                     _abs:
  9749                           	opt callstack 25
  9750  0030CC  BE18               	btfsc	(abs@a+1)^0,7,c
  9751  0030CE  EF73  F018         	goto	u2980
  9752  0030D2  5018               	movf	(abs@a+1)^0,w,c
  9753  0030D4  E106               	bnz	u2981
  9754  0030D6  0417               	decf	abs@a^0,w,c
  9755  0030D8  B0D8               	btfsc	status,0,c
  9756  0030DA  EF71  F018         	goto	u2981
  9757  0030DE  EF73  F018         	goto	u2980
  9758  0030E2                     u2981:
  9759  0030E2  EF81  F018         	goto	l1260
  9760  0030E6                     u2980:
  9761  0030E6  C017  F019         	movff	abs@a,??_abs
  9762  0030EA  C018  F01A         	movff	abs@a+1,??_abs+1
  9763  0030EE  1E19               	comf	??_abs^0,f,c
  9764  0030F0  1E1A               	comf	(??_abs+1)^0,f,c
  9765  0030F2  4A19               	infsnz	??_abs^0,f,c
  9766  0030F4  2A1A               	incf	(??_abs+1)^0,f,c
  9767  0030F6  C019  F017         	movff	??_abs,?_abs
  9768  0030FA  C01A  F018         	movff	??_abs+1,?_abs+1
  9769  0030FE  EF85  F018         	goto	l1263
  9770  003102                     l1260:
  9771  003102  C017  F017         	movff	abs@a,?_abs
  9772  003106  C018  F018         	movff	abs@a+1,?_abs+1
  9773  00310A                     l1263:
  9774  00310A  0012               	return		;funcret
  9775  00310C                     __end_of_abs:
  9776                           	opt callstack 0
  9777                           
  9778 ;; *************** function ___aomod *****************
  9779 ;; Defined at:
  9780 ;;		line 9 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\aomod.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;  dividend        8    4[COMRAM] long long 
  9783 ;;  divisor         8   12[COMRAM] long long 
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;  sign            1   21[COMRAM] unsigned char 
  9786 ;;  counter         1   20[COMRAM] unsigned char 
  9787 ;; Return value:  Size  Location     Type
  9788 ;;                  8    4[COMRAM] long long 
  9789 ;; Registers used:
  9790 ;;		wreg, status,2, status,0
  9791 ;; Tracked objects:
  9792 ;;		On entry : 0/0
  9793 ;;		On exit  : 0/0
  9794 ;;		Unchanged: 0/0
  9795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9796 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9799 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9800 ;;Total ram usage:       18 bytes
  9801 ;; Hardware stack levels used:    1
  9802 ;; Hardware stack levels required when called:    1
  9803 ;; This function calls:
  9804 ;;		Nothing
  9805 ;; This function is called by:
  9806 ;;		_dtoa
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           	psect	text19
  9811  0029E2                     __ptext19:
  9812                           	opt callstack 0
  9813  0029E2                     ___aomod:
  9814                           	opt callstack 25
  9815  0029E2  0E00               	movlw	0
  9816  0029E4  6E16               	movwf	___aomod@sign^0,c
  9817  0029E6  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  9818  0029E8  EFFA  F014         	goto	u3060
  9819  0029EC  EFF8  F014         	goto	u3061
  9820  0029F0                     u3061:
  9821  0029F0  EF0C  F015         	goto	l4897
  9822  0029F4                     u3060:
  9823  0029F4  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  9824  0029F6  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  9825  0029F8  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  9826  0029FA  1E09               	comf	(___aomod@dividend+4)^0,f,c
  9827  0029FC  1E08               	comf	(___aomod@dividend+3)^0,f,c
  9828  0029FE  1E07               	comf	(___aomod@dividend+2)^0,f,c
  9829  002A00  1E06               	comf	(___aomod@dividend+1)^0,f,c
  9830  002A02  6C05               	negf	___aomod@dividend^0,c
  9831  002A04  0E00               	movlw	0
  9832  002A06  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  9833  002A08  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  9834  002A0A  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  9835  002A0C  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  9836  002A0E  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  9837  002A10  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  9838  002A12  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  9839  002A14  0E01               	movlw	1
  9840  002A16  6E16               	movwf	___aomod@sign^0,c
  9841  002A18                     l4897:
  9842  002A18  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  9843  002A1A  EF13  F015         	goto	u3070
  9844  002A1E  EF11  F015         	goto	u3071
  9845  002A22                     u3071:
  9846  002A22  EF23  F015         	goto	l4901
  9847  002A26                     u3070:
  9848  002A26  1E14               	comf	(___aomod@divisor+7)^0,f,c
  9849  002A28  1E13               	comf	(___aomod@divisor+6)^0,f,c
  9850  002A2A  1E12               	comf	(___aomod@divisor+5)^0,f,c
  9851  002A2C  1E11               	comf	(___aomod@divisor+4)^0,f,c
  9852  002A2E  1E10               	comf	(___aomod@divisor+3)^0,f,c
  9853  002A30  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  9854  002A32  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  9855  002A34  6C0D               	negf	___aomod@divisor^0,c
  9856  002A36  0E00               	movlw	0
  9857  002A38  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  9858  002A3A  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  9859  002A3C  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  9860  002A3E  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  9861  002A40  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  9862  002A42  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  9863  002A44  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  9864  002A46                     l4901:
  9865  002A46  500D               	movf	___aomod@divisor^0,w,c
  9866  002A48  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  9867  002A4A  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  9868  002A4C  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  9869  002A4E  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  9870  002A50  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  9871  002A52  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  9872  002A54  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  9873  002A56  B4D8               	btfsc	status,2,c
  9874  002A58  EF30  F015         	goto	u3081
  9875  002A5C  EF32  F015         	goto	u3080
  9876  002A60                     u3081:
  9877  002A60  EF7A  F015         	goto	l4917
  9878  002A64                     u3080:
  9879  002A64  0E01               	movlw	1
  9880  002A66  6E15               	movwf	___aomod@counter^0,c
  9881  002A68  EF40  F015         	goto	l4907
  9882  002A6C                     l4905:
  9883  002A6C  90D8               	bcf	status,0,c
  9884  002A6E  360D               	rlcf	___aomod@divisor^0,f,c
  9885  002A70  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  9886  002A72  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  9887  002A74  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  9888  002A76  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  9889  002A78  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  9890  002A7A  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  9891  002A7C  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  9892  002A7E  2A15               	incf	___aomod@counter^0,f,c
  9893  002A80                     l4907:
  9894  002A80  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  9895  002A82  EF45  F015         	goto	u3091
  9896  002A86  EF47  F015         	goto	u3090
  9897  002A8A                     u3091:
  9898  002A8A  EF36  F015         	goto	l4905
  9899  002A8E                     u3090:
  9900  002A8E                     l4909:
  9901  002A8E  500D               	movf	___aomod@divisor^0,w,c
  9902  002A90  5C05               	subwf	___aomod@dividend^0,w,c
  9903  002A92  500E               	movf	(___aomod@divisor+1)^0,w,c
  9904  002A94  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  9905  002A96  500F               	movf	(___aomod@divisor+2)^0,w,c
  9906  002A98  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  9907  002A9A  5010               	movf	(___aomod@divisor+3)^0,w,c
  9908  002A9C  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  9909  002A9E  5011               	movf	(___aomod@divisor+4)^0,w,c
  9910  002AA0  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  9911  002AA2  5012               	movf	(___aomod@divisor+5)^0,w,c
  9912  002AA4  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  9913  002AA6  5013               	movf	(___aomod@divisor+6)^0,w,c
  9914  002AA8  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  9915  002AAA  5014               	movf	(___aomod@divisor+7)^0,w,c
  9916  002AAC  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  9917  002AAE  A0D8               	btfss	status,0,c
  9918  002AB0  EF5C  F015         	goto	u3101
  9919  002AB4  EF5E  F015         	goto	u3100
  9920  002AB8                     u3101:
  9921  002AB8  EF6E  F015         	goto	l4913
  9922  002ABC                     u3100:
  9923  002ABC  500D               	movf	___aomod@divisor^0,w,c
  9924  002ABE  5E05               	subwf	___aomod@dividend^0,f,c
  9925  002AC0  500E               	movf	(___aomod@divisor+1)^0,w,c
  9926  002AC2  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  9927  002AC4  500F               	movf	(___aomod@divisor+2)^0,w,c
  9928  002AC6  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  9929  002AC8  5010               	movf	(___aomod@divisor+3)^0,w,c
  9930  002ACA  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  9931  002ACC  5011               	movf	(___aomod@divisor+4)^0,w,c
  9932  002ACE  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  9933  002AD0  5012               	movf	(___aomod@divisor+5)^0,w,c
  9934  002AD2  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  9935  002AD4  5013               	movf	(___aomod@divisor+6)^0,w,c
  9936  002AD6  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  9937  002AD8  5014               	movf	(___aomod@divisor+7)^0,w,c
  9938  002ADA  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  9939  002ADC                     l4913:
  9940  002ADC  90D8               	bcf	status,0,c
  9941  002ADE  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  9942  002AE0  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  9943  002AE2  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  9944  002AE4  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  9945  002AE6  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  9946  002AE8  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  9947  002AEA  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  9948  002AEC  320D               	rrcf	___aomod@divisor^0,f,c
  9949  002AEE  2E15               	decfsz	___aomod@counter^0,f,c
  9950  002AF0  EF47  F015         	goto	l4909
  9951  002AF4                     l4917:
  9952  002AF4  5016               	movf	___aomod@sign^0,w,c
  9953  002AF6  B4D8               	btfsc	status,2,c
  9954  002AF8  EF80  F015         	goto	u3111
  9955  002AFC  EF82  F015         	goto	u3110
  9956  002B00                     u3111:
  9957  002B00  EF92  F015         	goto	l4921
  9958  002B04                     u3110:
  9959  002B04  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  9960  002B06  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  9961  002B08  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  9962  002B0A  1E09               	comf	(___aomod@dividend+4)^0,f,c
  9963  002B0C  1E08               	comf	(___aomod@dividend+3)^0,f,c
  9964  002B0E  1E07               	comf	(___aomod@dividend+2)^0,f,c
  9965  002B10  1E06               	comf	(___aomod@dividend+1)^0,f,c
  9966  002B12  6C05               	negf	___aomod@dividend^0,c
  9967  002B14  0E00               	movlw	0
  9968  002B16  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  9969  002B18  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  9970  002B1A  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  9971  002B1C  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  9972  002B1E  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  9973  002B20  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  9974  002B22  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  9975  002B24                     l4921:
  9976  002B24  C005  F005         	movff	___aomod@dividend,?___aomod
  9977  002B28  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  9978  002B2C  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  9979  002B30  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  9980  002B34  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  9981  002B38  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  9982  002B3C  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  9983  002B40  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  9984  002B44  0012               	return		;funcret
  9985  002B46                     __end_of___aomod:
  9986                           	opt callstack 0
  9987                           
  9988 ;; *************** function ___aodiv *****************
  9989 ;; Defined at:
  9990 ;;		line 9 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\aodiv.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  dividend        8    4[COMRAM] long long 
  9993 ;;  divisor         8   12[COMRAM] long long 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;  quotient        8   22[COMRAM] long long 
  9996 ;;  sign            1   21[COMRAM] unsigned char 
  9997 ;;  counter         1   20[COMRAM] unsigned char 
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  8    4[COMRAM] long long 
 10000 ;; Registers used:
 10001 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10002 ;; Tracked objects:
 10003 ;;		On entry : 0/0
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10007 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10008 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10010 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10011 ;;Total ram usage:       26 bytes
 10012 ;; Hardware stack levels used:    1
 10013 ;; Hardware stack levels required when called:    1
 10014 ;; This function calls:
 10015 ;;		Nothing
 10016 ;; This function is called by:
 10017 ;;		_dtoa
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020                           
 10021                           	psect	text20
 10022  0026EA                     __ptext20:
 10023                           	opt callstack 0
 10024  0026EA                     ___aodiv:
 10025                           	opt callstack 25
 10026  0026EA  0E00               	movlw	0
 10027  0026EC  6E16               	movwf	___aodiv@sign^0,c
 10028  0026EE  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
 10029  0026F0  EF7E  F013         	goto	u2990
 10030  0026F4  EF7C  F013         	goto	u2991
 10031  0026F8                     u2991:
 10032  0026F8  EF90  F013         	goto	l4853
 10033  0026FC                     u2990:
 10034  0026FC  1E14               	comf	(___aodiv@divisor+7)^0,f,c
 10035  0026FE  1E13               	comf	(___aodiv@divisor+6)^0,f,c
 10036  002700  1E12               	comf	(___aodiv@divisor+5)^0,f,c
 10037  002702  1E11               	comf	(___aodiv@divisor+4)^0,f,c
 10038  002704  1E10               	comf	(___aodiv@divisor+3)^0,f,c
 10039  002706  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
 10040  002708  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
 10041  00270A  6C0D               	negf	___aodiv@divisor^0,c
 10042  00270C  0E00               	movlw	0
 10043  00270E  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
 10044  002710  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
 10045  002712  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
 10046  002714  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
 10047  002716  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
 10048  002718  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
 10049  00271A  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
 10050  00271C  0E01               	movlw	1
 10051  00271E  6E16               	movwf	___aodiv@sign^0,c
 10052  002720                     l4853:
 10053  002720  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
 10054  002722  EF97  F013         	goto	u3000
 10055  002726  EF95  F013         	goto	u3001
 10056  00272A                     u3001:
 10057  00272A  EFA9  F013         	goto	l4859
 10058  00272E                     u3000:
 10059  00272E  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
 10060  002730  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
 10061  002732  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
 10062  002734  1E09               	comf	(___aodiv@dividend+4)^0,f,c
 10063  002736  1E08               	comf	(___aodiv@dividend+3)^0,f,c
 10064  002738  1E07               	comf	(___aodiv@dividend+2)^0,f,c
 10065  00273A  1E06               	comf	(___aodiv@dividend+1)^0,f,c
 10066  00273C  6C05               	negf	___aodiv@dividend^0,c
 10067  00273E  0E00               	movlw	0
 10068  002740  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
 10069  002742  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
 10070  002744  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
 10071  002746  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
 10072  002748  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
 10073  00274A  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
 10074  00274C  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
 10075  00274E  0E01               	movlw	1
 10076  002750  1A16               	xorwf	___aodiv@sign^0,f,c
 10077  002752                     l4859:
 10078  002752  EE20  F017         	lfsr	2,___aodiv@quotient
 10079  002756  0E07               	movlw	7
 10080  002758                     u3011:
 10081  002758  6ADE               	clrf	postinc2,c
 10082  00275A  06E8               	decf	wreg,f,c
 10083  00275C  E2FD               	bc	u3011
 10084  00275E  500D               	movf	___aodiv@divisor^0,w,c
 10085  002760  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
 10086  002762  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
 10087  002764  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
 10088  002766  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
 10089  002768  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
 10090  00276A  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
 10091  00276C  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
 10092  00276E  B4D8               	btfsc	status,2,c
 10093  002770  EFBC  F013         	goto	u3021
 10094  002774  EFBE  F013         	goto	u3020
 10095  002778                     u3021:
 10096  002778  EF10  F014         	goto	l4881
 10097  00277C                     u3020:
 10098  00277C  0E01               	movlw	1
 10099  00277E  6E15               	movwf	___aodiv@counter^0,c
 10100  002780  EFCC  F013         	goto	l4867
 10101  002784                     l4865:
 10102  002784  90D8               	bcf	status,0,c
 10103  002786  360D               	rlcf	___aodiv@divisor^0,f,c
 10104  002788  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
 10105  00278A  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
 10106  00278C  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
 10107  00278E  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
 10108  002790  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
 10109  002792  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
 10110  002794  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
 10111  002796  2A15               	incf	___aodiv@counter^0,f,c
 10112  002798                     l4867:
 10113  002798  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
 10114  00279A  EFD1  F013         	goto	u3031
 10115  00279E  EFD3  F013         	goto	u3030
 10116  0027A2                     u3031:
 10117  0027A2  EFC2  F013         	goto	l4865
 10118  0027A6                     u3030:
 10119  0027A6                     l4869:
 10120  0027A6  90D8               	bcf	status,0,c
 10121  0027A8  3617               	rlcf	___aodiv@quotient^0,f,c
 10122  0027AA  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
 10123  0027AC  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
 10124  0027AE  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
 10125  0027B0  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
 10126  0027B2  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
 10127  0027B4  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
 10128  0027B6  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
 10129  0027B8  500D               	movf	___aodiv@divisor^0,w,c
 10130  0027BA  5C05               	subwf	___aodiv@dividend^0,w,c
 10131  0027BC  500E               	movf	(___aodiv@divisor+1)^0,w,c
 10132  0027BE  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
 10133  0027C0  500F               	movf	(___aodiv@divisor+2)^0,w,c
 10134  0027C2  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
 10135  0027C4  5010               	movf	(___aodiv@divisor+3)^0,w,c
 10136  0027C6  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
 10137  0027C8  5011               	movf	(___aodiv@divisor+4)^0,w,c
 10138  0027CA  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
 10139  0027CC  5012               	movf	(___aodiv@divisor+5)^0,w,c
 10140  0027CE  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
 10141  0027D0  5013               	movf	(___aodiv@divisor+6)^0,w,c
 10142  0027D2  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
 10143  0027D4  5014               	movf	(___aodiv@divisor+7)^0,w,c
 10144  0027D6  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
 10145  0027D8  A0D8               	btfss	status,0,c
 10146  0027DA  EFF1  F013         	goto	u3041
 10147  0027DE  EFF3  F013         	goto	u3040
 10148  0027E2                     u3041:
 10149  0027E2  EF04  F014         	goto	l4877
 10150  0027E6                     u3040:
 10151  0027E6  500D               	movf	___aodiv@divisor^0,w,c
 10152  0027E8  5E05               	subwf	___aodiv@dividend^0,f,c
 10153  0027EA  500E               	movf	(___aodiv@divisor+1)^0,w,c
 10154  0027EC  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
 10155  0027EE  500F               	movf	(___aodiv@divisor+2)^0,w,c
 10156  0027F0  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
 10157  0027F2  5010               	movf	(___aodiv@divisor+3)^0,w,c
 10158  0027F4  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
 10159  0027F6  5011               	movf	(___aodiv@divisor+4)^0,w,c
 10160  0027F8  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
 10161  0027FA  5012               	movf	(___aodiv@divisor+5)^0,w,c
 10162  0027FC  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
 10163  0027FE  5013               	movf	(___aodiv@divisor+6)^0,w,c
 10164  002800  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
 10165  002802  5014               	movf	(___aodiv@divisor+7)^0,w,c
 10166  002804  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
 10167  002806  8017               	bsf	___aodiv@quotient^0,0,c
 10168  002808                     l4877:
 10169  002808  90D8               	bcf	status,0,c
 10170  00280A  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
 10171  00280C  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
 10172  00280E  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
 10173  002810  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
 10174  002812  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
 10175  002814  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
 10176  002816  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
 10177  002818  320D               	rrcf	___aodiv@divisor^0,f,c
 10178  00281A  2E15               	decfsz	___aodiv@counter^0,f,c
 10179  00281C  EFD3  F013         	goto	l4869
 10180  002820                     l4881:
 10181  002820  5016               	movf	___aodiv@sign^0,w,c
 10182  002822  B4D8               	btfsc	status,2,c
 10183  002824  EF16  F014         	goto	u3051
 10184  002828  EF18  F014         	goto	u3050
 10185  00282C                     u3051:
 10186  00282C  EF28  F014         	goto	l4885
 10187  002830                     u3050:
 10188  002830  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
 10189  002832  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
 10190  002834  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 10191  002836  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 10192  002838  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 10193  00283A  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 10194  00283C  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 10195  00283E  6C17               	negf	___aodiv@quotient^0,c
 10196  002840  0E00               	movlw	0
 10197  002842  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 10198  002844  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 10199  002846  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 10200  002848  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 10201  00284A  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 10202  00284C  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 10203  00284E  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 10204  002850                     l4885:
 10205  002850  C017  F005         	movff	___aodiv@quotient,?___aodiv
 10206  002854  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 10207  002858  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 10208  00285C  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 10209  002860  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 10210  002864  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 10211  002868  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 10212  00286C  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 10213  002870  0012               	return		;funcret
 10214  002872                     __end_of___aodiv:
 10215                           	opt callstack 0
 10216                           
 10217 ;; *************** function _ctoa *****************
 10218 ;; Defined at:
 10219 ;;		line 259 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 10222 ;;		 -> sprintf@f(6), NULL(0), 
 10223 ;;  c               1   34[COMRAM] unsigned char 
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;  w               2   35[COMRAM] int 
 10226 ;;  l               2    0        int 
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  2   32[COMRAM] int 
 10229 ;; Registers used:
 10230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10236 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10237 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10239 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10240 ;;Total ram usage:        5 bytes
 10241 ;; Hardware stack levels used:    1
 10242 ;; Hardware stack levels required when called:    5
 10243 ;; This function calls:
 10244 ;;		_pad
 10245 ;; This function is called by:
 10246 ;;		_vfpfcnvrt
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250                           	psect	text21
 10251  002FDC                     __ptext21:
 10252                           	opt callstack 0
 10253  002FDC                     _ctoa:
 10254                           	opt callstack 22
 10255  002FDC                     
 10256                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 259: static int ctoa(FI
      +                          LE *fp, char c);T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 260: {;T
      +                          :\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 261:     int l, w;;T:\Pro
      +                          gramy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 264:     w = width ? width - 1
      +                           : width;
 10257  002FDC  5056               	movf	_width^0,w,c
 10258  002FDE  1057               	iorwf	(_width+1)^0,w,c
 10259  002FE0  A4D8               	btfss	status,2,c
 10260  002FE2  EFF5  F017         	goto	u3121
 10261  002FE6  EFF7  F017         	goto	u3120
 10262  002FEA                     u3121:
 10263  002FEA  EFFD  F017         	goto	l4929
 10264  002FEE                     u3120:
 10265  002FEE  C056  F024         	movff	_width,ctoa@w
 10266  002FF2  C057  F025         	movff	_width+1,ctoa@w+1
 10267  002FF6  EF03  F018         	goto	l4931
 10268  002FFA                     l4929:
 10269  002FFA  0EFF               	movlw	255
 10270  002FFC  2456               	addwf	_width^0,w,c
 10271  002FFE  6E24               	movwf	ctoa@w^0,c
 10272  003000  0EFF               	movlw	255
 10273  003002  2057               	addwfc	(_width+1)^0,w,c
 10274  003004  6E25               	movwf	(ctoa@w+1)^0,c
 10275  003006                     l4931:
 10276                           
 10277                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] = c;
 10278  003006  C023  F132         	movff	ctoa@c,_dbuf
 10279  00300A                     
 10280                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] = '\0'
      +                          ;
 10281  00300A  0E00               	movlw	0
 10282  00300C  0101               	movlb	1	; () banked
 10283  00300E  6F33               	movwf	(_dbuf+1)& (0+255),b
 10284  003010                     
 10285                           ; BSR set to: 1
 10286                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 269:     return pad(fp,
      +                           &dbuf[0], w);
 10287  003010  C021  F016         	movff	ctoa@fp,pad@fp
 10288  003014  C022  F017         	movff	ctoa@fp+1,pad@fp+1
 10289  003018  0E32               	movlw	low _dbuf
 10290  00301A  6E18               	movwf	pad@buf^0,c
 10291  00301C  0E01               	movlw	high _dbuf
 10292  00301E  6E19               	movwf	(pad@buf+1)^0,c
 10293  003020  C024  F01A         	movff	ctoa@w,pad@p
 10294  003024  C025  F01B         	movff	ctoa@w+1,pad@p+1
 10295  003028  ECDC  F016         	call	_pad	;wreg free
 10296  00302C  C016  F021         	movff	?_pad,?_ctoa
 10297  003030  C017  F022         	movff	?_pad+1,?_ctoa+1
 10298  003034  0012               	return		;funcret
 10299  003036                     __end_of_ctoa:
 10300                           	opt callstack 0
 10301                           
 10302 ;; *************** function _pad *****************
 10303 ;; Defined at:
 10304 ;;		line 72 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
 10307 ;;		 -> sprintf@f(6), NULL(0), 
 10308 ;;  buf             2   23[COMRAM] PTR unsigned char 
 10309 ;;		 -> dbuf(32), 
 10310 ;;  p               2   25[COMRAM] int 
 10311 ;; Auto vars:     Size  Location     Type
 10312 ;;  w               2   30[COMRAM] int 
 10313 ;;  i               2   28[COMRAM] int 
 10314 ;; Return value:  Size  Location     Type
 10315 ;;                  2   21[COMRAM] int 
 10316 ;; Registers used:
 10317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10318 ;; Tracked objects:
 10319 ;;		On entry : 0/0
 10320 ;;		On exit  : 0/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10323 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;Total ram usage:       11 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; Hardware stack levels required when called:    4
 10330 ;; This function calls:
 10331 ;;		_fputc
 10332 ;;		_fputs
 10333 ;;		_strlen
 10334 ;; This function is called by:
 10335 ;;		_ctoa
 10336 ;;		_dtoa
 10337 ;; This function uses a non-reentrant model
 10338 ;;
 10339                           
 10340                           	psect	text22
 10341  002DB8                     __ptext22:
 10342                           	opt callstack 0
 10343  002DB8                     _pad:
 10344                           	opt callstack 22
 10345  002DB8                     
 10346                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 72: static int pad(FILE
      +                           *fp, char *buf, int p);T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 
      +                          73: {;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 74:     int i, w;;
      +                          T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 77:     if (flags & (1 <
      +                          < 0)) {
 10347  002DB8  A058               	btfss	_flags^0,0,c
 10348  002DBA  EFE1  F016         	goto	u2941
 10349  002DBE  EFE3  F016         	goto	u2940
 10350  002DC2                     u2941:
 10351  002DC2  EFED  F016         	goto	l4823
 10352  002DC6                     u2940:
 10353  002DC6                     
 10354                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 78:         fputs((cons
      +                          t char *)buf, fp);
 10355  002DC6  C018  F00F         	movff	pad@buf,fputs@s
 10356  002DCA  C019  F010         	movff	pad@buf+1,fputs@s+1
 10357  002DCE  C016  F011         	movff	pad@fp,fputs@fp
 10358  002DD2  C017  F012         	movff	pad@fp+1,fputs@fp+1
 10359  002DD6  EC44  F018         	call	_fputs	;wreg free
 10360  002DDA                     l4823:
 10361                           
 10362                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 0
      +                           : p;
 10363  002DDA  BE1B               	btfsc	(pad@p+1)^0,7,c
 10364  002DDC  EFF2  F016         	goto	u2951
 10365  002DE0  EFF4  F016         	goto	u2950
 10366  002DE4                     u2951:
 10367  002DE4  EFFA  F016         	goto	l4827
 10368  002DE8                     u2950:
 10369  002DE8  C01A  F01F         	movff	pad@p,pad@w
 10370  002DEC  C01B  F020         	movff	pad@p+1,pad@w+1
 10371  002DF0  EFFE  F016         	goto	l529
 10372  002DF4                     l4827:
 10373  002DF4  0E00               	movlw	0
 10374  002DF6  6E20               	movwf	(pad@w+1)^0,c
 10375  002DF8  0E00               	movlw	0
 10376  002DFA  6E1F               	movwf	pad@w^0,c
 10377  002DFC                     l529:
 10378                           
 10379                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 10380  002DFC  0E00               	movlw	0
 10381  002DFE  6E1E               	movwf	(pad@i+1)^0,c
 10382  002E00  0E00               	movlw	0
 10383  002E02  6E1D               	movwf	pad@i^0,c
 10384                           
 10385                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
 10386  002E04  EF10  F017         	goto	l4833
 10387  002E08                     l4829:
 10388                           
 10389                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 85:         fputc(' ', 
      +                          fp);
 10390  002E08  0E00               	movlw	0
 10391  002E0A  6E07               	movwf	(fputc@c+1)^0,c
 10392  002E0C  0E20               	movlw	32
 10393  002E0E  6E06               	movwf	fputc@c^0,c
 10394  002E10  C016  F008         	movff	pad@fp,fputc@fp
 10395  002E14  C017  F009         	movff	pad@fp+1,fputc@fp+1
 10396  002E18  EC77  F016         	call	_fputc	;wreg free
 10397  002E1C                     
 10398                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 86:         ++i;
 10399  002E1C  4A1D               	infsnz	pad@i^0,f,c
 10400  002E1E  2A1E               	incf	(pad@i+1)^0,f,c
 10401  002E20                     l4833:
 10402                           
 10403                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
 10404  002E20  501F               	movf	pad@w^0,w,c
 10405  002E22  5C1D               	subwf	pad@i^0,w,c
 10406  002E24  501E               	movf	(pad@i+1)^0,w,c
 10407  002E26  0A80               	xorlw	128
 10408  002E28  6E1C               	movwf	??_pad^0,c
 10409  002E2A  5020               	movf	(pad@w+1)^0,w,c
 10410  002E2C  0A80               	xorlw	128
 10411  002E2E  581C               	subwfb	??_pad^0,w,c
 10412  002E30  A0D8               	btfss	status,0,c
 10413  002E32  EF1D  F017         	goto	u2961
 10414  002E36  EF1F  F017         	goto	u2960
 10415  002E3A                     u2961:
 10416  002E3A  EF04  F017         	goto	l4829
 10417  002E3E                     u2960:
 10418  002E3E                     
 10419                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & (
      +                          1 << 0))) {
 10420  002E3E  B058               	btfsc	_flags^0,0,c
 10421  002E40  EF24  F017         	goto	u2971
 10422  002E44  EF26  F017         	goto	u2970
 10423  002E48                     u2971:
 10424  002E48  EF30  F017         	goto	l4837
 10425  002E4C                     u2970:
 10426  002E4C                     
 10427                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 91:         fputs((cons
      +                          t char *)buf, fp);
 10428  002E4C  C018  F00F         	movff	pad@buf,fputs@s
 10429  002E50  C019  F010         	movff	pad@buf+1,fputs@s+1
 10430  002E54  C016  F011         	movff	pad@fp,fputs@fp
 10431  002E58  C017  F012         	movff	pad@fp+1,fputs@fp+1
 10432  002E5C  EC44  F018         	call	_fputs	;wreg free
 10433  002E60                     l4837:
 10434                           
 10435                           ;T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\doprnt.c: 94:     return strlen(b
      +                          uf) + w;
 10436  002E60  C018  F005         	movff	pad@buf,strlen@s
 10437  002E64  C019  F006         	movff	pad@buf+1,strlen@s+1
 10438  002E68  EC86  F018         	call	_strlen	;wreg free
 10439  002E6C  501F               	movf	pad@w^0,w,c
 10440  002E6E  2405               	addwf	?_strlen^0,w,c
 10441  002E70  6E16               	movwf	?_pad^0,c
 10442  002E72  5020               	movf	(pad@w+1)^0,w,c
 10443  002E74  2006               	addwfc	(?_strlen+1)^0,w,c
 10444  002E76  6E17               	movwf	(?_pad+1)^0,c
 10445  002E78  0012               	return		;funcret
 10446  002E7A                     __end_of_pad:
 10447                           	opt callstack 0
 10448                           
 10449 ;; *************** function _strlen *****************
 10450 ;; Defined at:
 10451 ;;		line 5 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\strlen.c"
 10452 ;; Parameters:    Size  Location     Type
 10453 ;;  s               2    4[COMRAM] PTR const unsigned char 
 10454 ;;		 -> dbuf(32), 
 10455 ;; Auto vars:     Size  Location     Type
 10456 ;;  a               2    6[COMRAM] PTR const unsigned char 
 10457 ;;		 -> dbuf(32), 
 10458 ;; Return value:  Size  Location     Type
 10459 ;;                  2    4[COMRAM] unsigned int 
 10460 ;; Registers used:
 10461 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10462 ;; Tracked objects:
 10463 ;;		On entry : 0/0
 10464 ;;		On exit  : 0/0
 10465 ;;		Unchanged: 0/0
 10466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10471 ;;Total ram usage:        4 bytes
 10472 ;; Hardware stack levels used:    1
 10473 ;; Hardware stack levels required when called:    1
 10474 ;; This function calls:
 10475 ;;		Nothing
 10476 ;; This function is called by:
 10477 ;;		_pad
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           	psect	text23
 10482  00310C                     __ptext23:
 10483                           	opt callstack 0
 10484  00310C                     _strlen:
 10485                           	opt callstack 24
 10486  00310C  C005  F007         	movff	strlen@s,strlen@a
 10487  003110  C006  F008         	movff	strlen@s+1,strlen@a+1
 10488  003114  EF8E  F018         	goto	l4813
 10489  003118                     l4811:
 10490  003118  4A05               	infsnz	strlen@s^0,f,c
 10491  00311A  2A06               	incf	(strlen@s+1)^0,f,c
 10492  00311C                     l4813:
 10493  00311C  C005  FFD9         	movff	strlen@s,fsr2l
 10494  003120  C006  FFDA         	movff	strlen@s+1,fsr2h
 10495  003124  50DF               	movf	indf2,w,c
 10496  003126  A4D8               	btfss	status,2,c
 10497  003128  EF98  F018         	goto	u2931
 10498  00312C  EF9A  F018         	goto	u2930
 10499  003130                     u2931:
 10500  003130  EF8C  F018         	goto	l4811
 10501  003134                     u2930:
 10502  003134  5007               	movf	strlen@a^0,w,c
 10503  003136  5C05               	subwf	strlen@s^0,w,c
 10504  003138  6E05               	movwf	?_strlen^0,c
 10505  00313A  5008               	movf	(strlen@a+1)^0,w,c
 10506  00313C  5806               	subwfb	(strlen@s+1)^0,w,c
 10507  00313E  6E06               	movwf	(?_strlen+1)^0,c
 10508  003140  0012               	return		;funcret
 10509  003142                     __end_of_strlen:
 10510                           	opt callstack 0
 10511                           
 10512 ;; *************** function _fputs *****************
 10513 ;; Defined at:
 10514 ;;		line 8 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\nf_fputs.c"
 10515 ;; Parameters:    Size  Location     Type
 10516 ;;  s               2   14[COMRAM] PTR const unsigned char 
 10517 ;;		 -> dbuf(32), 
 10518 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 10519 ;;		 -> sprintf@f(6), NULL(0), 
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;  i               2   19[COMRAM] int 
 10522 ;;  c               1   18[COMRAM] unsigned char 
 10523 ;; Return value:  Size  Location     Type
 10524 ;;                  2   14[COMRAM] int 
 10525 ;; Registers used:
 10526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10527 ;; Tracked objects:
 10528 ;;		On entry : 0/0
 10529 ;;		On exit  : 0/0
 10530 ;;		Unchanged: 0/0
 10531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10532 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10535 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10536 ;;Total ram usage:        7 bytes
 10537 ;; Hardware stack levels used:    1
 10538 ;; Hardware stack levels required when called:    3
 10539 ;; This function calls:
 10540 ;;		_fputc
 10541 ;; This function is called by:
 10542 ;;		_pad
 10543 ;; This function uses a non-reentrant model
 10544 ;;
 10545                           
 10546                           	psect	text24
 10547  003088                     __ptext24:
 10548                           	opt callstack 0
 10549  003088                     _fputs:
 10550                           	opt callstack 22
 10551  003088  0E00               	movlw	0
 10552  00308A  6E15               	movwf	(fputs@i+1)^0,c
 10553  00308C  0E00               	movlw	0
 10554  00308E  6E14               	movwf	fputs@i^0,c
 10555  003090  EF55  F018         	goto	l4807
 10556  003094                     l4803:
 10557  003094  C013  F006         	movff	fputs@c,fputc@c
 10558  003098  6A07               	clrf	(fputc@c+1)^0,c
 10559  00309A  C011  F008         	movff	fputs@fp,fputc@fp
 10560  00309E  C012  F009         	movff	fputs@fp+1,fputc@fp+1
 10561  0030A2  EC77  F016         	call	_fputc	;wreg free
 10562  0030A6  4A14               	infsnz	fputs@i^0,f,c
 10563  0030A8  2A15               	incf	(fputs@i+1)^0,f,c
 10564  0030AA                     l4807:
 10565  0030AA  5014               	movf	fputs@i^0,w,c
 10566  0030AC  240F               	addwf	fputs@s^0,w,c
 10567  0030AE  6ED9               	movwf	fsr2l,c
 10568  0030B0  5015               	movf	(fputs@i+1)^0,w,c
 10569  0030B2  2010               	addwfc	(fputs@s+1)^0,w,c
 10570  0030B4  6EDA               	movwf	fsr2h,c
 10571  0030B6  50DF               	movf	indf2,w,c
 10572  0030B8  6E13               	movwf	fputs@c^0,c
 10573  0030BA  5013               	movf	fputs@c^0,w,c
 10574  0030BC  A4D8               	btfss	status,2,c
 10575  0030BE  EF63  F018         	goto	u2921
 10576  0030C2  EF65  F018         	goto	u2920
 10577  0030C6                     u2921:
 10578  0030C6  EF4A  F018         	goto	l4803
 10579  0030CA                     u2920:
 10580  0030CA  0012               	return		;funcret
 10581  0030CC                     __end_of_fputs:
 10582                           	opt callstack 0
 10583                           
 10584 ;; *************** function _fputc *****************
 10585 ;; Defined at:
 10586 ;;		line 8 in file "T:\Programy\MPLAB\XC  Compiler\pic\sources\c99\common\nf_fputc.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;  c               2    5[COMRAM] int 
 10589 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
 10590 ;;		 -> sprintf@f(6), NULL(0), 
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;		None
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  2    5[COMRAM] int 
 10595 ;; Registers used:
 10596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10604 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10605 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10606 ;;Total ram usage:        9 bytes
 10607 ;; Hardware stack levels used:    1
 10608 ;; Hardware stack levels required when called:    2
 10609 ;; This function calls:
 10610 ;;		_putch
 10611 ;; This function is called by:
 10612 ;;		_pad
 10613 ;;		_vfpfcnvrt
 10614 ;;		_fputs
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618                           	psect	text25
 10619  002CEE                     __ptext25:
 10620                           	opt callstack 0
 10621  002CEE                     _fputc:
 10622                           	opt callstack 25
 10623  002CEE  5008               	movf	fputc@fp^0,w,c
 10624  002CF0  1009               	iorwf	(fputc@fp+1)^0,w,c
 10625  002CF2  B4D8               	btfsc	status,2,c
 10626  002CF4  EF7E  F016         	goto	u2881
 10627  002CF8  EF80  F016         	goto	u2880
 10628  002CFC                     u2881:
 10629  002CFC  EF89  F016         	goto	l4791
 10630  002D00                     u2880:
 10631  002D00  5008               	movf	fputc@fp^0,w,c
 10632  002D02  1009               	iorwf	(fputc@fp+1)^0,w,c
 10633  002D04  A4D8               	btfss	status,2,c
 10634  002D06  EF87  F016         	goto	u2891
 10635  002D0A  EF89  F016         	goto	u2890
 10636  002D0E                     u2891:
 10637  002D0E  EF8E  F016         	goto	l4793
 10638  002D12                     u2890:
 10639  002D12                     l4791:
 10640  002D12  5006               	movf	fputc@c^0,w,c
 10641  002D14  EC20  F019         	call	_putch
 10642  002D18  EFDB  F016         	goto	l1275
 10643  002D1C                     l4793:
 10644  002D1C  EE20 F004          	lfsr	2,4
 10645  002D20  5008               	movf	fputc@fp^0,w,c
 10646  002D22  26D9               	addwf	fsr2l,f,c
 10647  002D24  5009               	movf	(fputc@fp+1)^0,w,c
 10648  002D26  22DA               	addwfc	fsr2h,f,c
 10649  002D28  50DE               	movf	postinc2,w,c
 10650  002D2A  10DE               	iorwf	postinc2,w,c
 10651  002D2C  B4D8               	btfsc	status,2,c
 10652  002D2E  EF9B  F016         	goto	u2901
 10653  002D32  EF9D  F016         	goto	u2900
 10654  002D36                     u2901:
 10655  002D36  EFB8  F016         	goto	l4797
 10656  002D3A                     u2900:
 10657  002D3A  EE20 F004          	lfsr	2,4
 10658  002D3E  5008               	movf	fputc@fp^0,w,c
 10659  002D40  26D9               	addwf	fsr2l,f,c
 10660  002D42  5009               	movf	(fputc@fp+1)^0,w,c
 10661  002D44  22DA               	addwfc	fsr2h,f,c
 10662  002D46  EE10 F002          	lfsr	1,2
 10663  002D4A  5008               	movf	fputc@fp^0,w,c
 10664  002D4C  26E1               	addwf	fsr1l,f,c
 10665  002D4E  5009               	movf	(fputc@fp+1)^0,w,c
 10666  002D50  22E2               	addwfc	fsr1h,f,c
 10667  002D52  50DE               	movf	postinc2,w,c
 10668  002D54  5CE6               	subwf	postinc1,w,c
 10669  002D56  50E6               	movf	postinc1,w,c
 10670  002D58  0A80               	xorlw	128
 10671  002D5A  6E0E               	movwf	(??_fputc+4)^0,c
 10672  002D5C  50DE               	movf	postinc2,w,c
 10673  002D5E  0A80               	xorlw	128
 10674  002D60  580E               	subwfb	(??_fputc+4)^0,w,c
 10675  002D62  B0D8               	btfsc	status,0,c
 10676  002D64  EFB6  F016         	goto	u2911
 10677  002D68  EFB8  F016         	goto	u2910
 10678  002D6C                     u2911:
 10679  002D6C  EFDB  F016         	goto	l1275
 10680  002D70                     u2910:
 10681  002D70                     l4797:
 10682  002D70  EE20 F002          	lfsr	2,2
 10683  002D74  5008               	movf	fputc@fp^0,w,c
 10684  002D76  26D9               	addwf	fsr2l,f,c
 10685  002D78  5009               	movf	(fputc@fp+1)^0,w,c
 10686  002D7A  22DA               	addwfc	fsr2h,f,c
 10687  002D7C  CFDE F00A          	movff	postinc2,??_fputc
 10688  002D80  CFDD F00B          	movff	postdec2,??_fputc+1
 10689  002D84  C008  FFD9         	movff	fputc@fp,fsr2l
 10690  002D88  C009  FFDA         	movff	fputc@fp+1,fsr2h
 10691  002D8C  CFDE F00C          	movff	postinc2,??_fputc+2
 10692  002D90  CFDD F00D          	movff	postdec2,??_fputc+3
 10693  002D94  500A               	movf	??_fputc^0,w,c
 10694  002D96  240C               	addwf	(??_fputc+2)^0,w,c
 10695  002D98  6ED9               	movwf	fsr2l,c
 10696  002D9A  500B               	movf	(??_fputc+1)^0,w,c
 10697  002D9C  200D               	addwfc	(??_fputc+3)^0,w,c
 10698  002D9E  6EDA               	movwf	fsr2h,c
 10699  002DA0  C006  FFDF         	movff	fputc@c,indf2
 10700  002DA4  EE20 F002          	lfsr	2,2
 10701  002DA8  5008               	movf	fputc@fp^0,w,c
 10702  002DAA  26D9               	addwf	fsr2l,f,c
 10703  002DAC  5009               	movf	(fputc@fp+1)^0,w,c
 10704  002DAE  22DA               	addwfc	fsr2h,f,c
 10705  002DB0  2ADE               	incf	postinc2,f,c
 10706  002DB2  0E00               	movlw	0
 10707  002DB4  22DD               	addwfc	postdec2,f,c
 10708  002DB6                     l1275:
 10709  002DB6  0012               	return		;funcret
 10710  002DB8                     __end_of_fputc:
 10711                           	opt callstack 0
 10712                           
 10713 ;; *************** function _putch *****************
 10714 ;; Defined at:
 10715 ;;		line 1131 in file "Projekt.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;  data            1    wreg     unsigned char 
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;  data            1    4[COMRAM] unsigned char 
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		wreg
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;Total ram usage:        1 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    1
 10736 ;; This function calls:
 10737 ;;		Nothing
 10738 ;; This function is called by:
 10739 ;;		_fputc
 10740 ;; This function uses a non-reentrant model
 10741 ;;
 10742                           
 10743                           	psect	text26
 10744  003240                     __ptext26:
 10745                           	opt callstack 0
 10746  003240                     _putch:
 10747                           	opt callstack 25
 10748                           
 10749                           ;incstack = 0
 10750                           ;putch@data stored from wreg
 10751  003240  6E05               	movwf	putch@data^0,c
 10752  003242                     l499:
 10753  003242  A89E               	btfss	3998,4,c	;volatile
 10754  003244  EF26  F019         	goto	u2871
 10755  003248  EF28  F019         	goto	u2870
 10756  00324C                     u2871:
 10757  00324C  EF21  F019         	goto	l499
 10758  003250                     u2870:
 10759  003250                     
 10760                           ;Projekt.c: 1133:     TXREG1 = data;
 10761  003250  C005  FFAD         	movff	putch@data,4013	;volatile
 10762  003254  0012               	return		;funcret
 10763  003256                     __end_of_putch:
 10764                           	opt callstack 0
 10765                           
 10766 ;; *************** function _LCD_ShowString *****************
 10767 ;; Defined at:
 10768 ;;		line 59 in file "lcd.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;  lineNum         1    wreg     unsigned char 
 10771 ;;  textData        2    5[COMRAM] PTR unsigned char 
 10772 ;;		 -> Pong@vitez(17), Pong@gameover(17), Pong@micek(17), Pong@zivoty(17), 
 10773 ;;		 -> Bargraph@graph(17), Bargraph@text(17), text(17), nadpis2(17), 
 10774 ;;		 -> nadpis1(17), main@pong(17), main@barg(17), main@pwm(17), 
 10775 ;;		 -> main@mor(17), main@k_r(17), kr_init@mor(17), kr_init@k_r(17), 
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;  lineNum         1    7[COMRAM] unsigned char 
 10778 ;;  i               1    8[COMRAM] unsigned char 
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  1    wreg      void 
 10781 ;; Registers used:
 10782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/0
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10791 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10792 ;;Total ram usage:        4 bytes
 10793 ;; Hardware stack levels used:    1
 10794 ;; Hardware stack levels required when called:    2
 10795 ;; This function calls:
 10796 ;;		_LCD_Send
 10797 ;; This function is called by:
 10798 ;;		_kr_init
 10799 ;;		_main
 10800 ;;		_Morseovka
 10801 ;;		_PWM_motor_led
 10802 ;;		_Knight_rider_3000
 10803 ;;		_Knight_rider_2000
 10804 ;;		_Bargraph
 10805 ;;		_Pong
 10806 ;; This function uses a non-reentrant model
 10807 ;;
 10808                           
 10809                           	psect	text27
 10810  002E7A                     __ptext27:
 10811                           	opt callstack 0
 10812  002E7A                     _LCD_ShowString:
 10813                           	opt callstack 27
 10814                           
 10815                           ;incstack = 0
 10816                           ;LCD_ShowString@lineNum stored from wreg
 10817  002E7A  6E08               	movwf	LCD_ShowString@lineNum^0,c
 10818  002E7C                     
 10819                           ;lcd.c: 64:     SSP2CON2bits.SEN = 1;
 10820  002E7C  806B               	bsf	107,0,c	;volatile
 10821  002E7E                     l36:
 10822  002E7E  B06B               	btfsc	107,0,c	;volatile
 10823  002E80  EF44  F017         	goto	u1931
 10824  002E84  EF46  F017         	goto	u1930
 10825  002E88                     u1931:
 10826  002E88  EF3F  F017         	goto	l36
 10827  002E8C                     u1930:
 10828  002E8C                     
 10829                           ;lcd.c: 66:     SSP2IF = 0;
 10830  002E8C  9EA4               	bcf	4004,7,c	;volatile
 10831  002E8E                     
 10832                           ;lcd.c: 68:     LCD_Send(0x7c);
 10833  002E8E  0E7C               	movlw	124
 10834  002E90  ECFE  F018         	call	_LCD_Send
 10835                           
 10836                           ;lcd.c: 70:     LCD_Send(0x80);
 10837  002E94  0E80               	movlw	128
 10838  002E96  ECFE  F018         	call	_LCD_Send
 10839  002E9A                     
 10840                           ;lcd.c: 72:     if(lineNum == 1){
 10841  002E9A  0408               	decf	LCD_ShowString@lineNum^0,w,c
 10842  002E9C  A4D8               	btfss	status,2,c
 10843  002E9E  EF53  F017         	goto	u1941
 10844  002EA2  EF55  F017         	goto	u1940
 10845  002EA6                     u1941:
 10846  002EA6  EF5A  F017         	goto	l3293
 10847  002EAA                     u1940:
 10848  002EAA                     
 10849                           ;lcd.c: 73:         LCD_Send(0x80);
 10850  002EAA  0E80               	movlw	128
 10851  002EAC  ECFE  F018         	call	_LCD_Send
 10852                           
 10853                           ;lcd.c: 74:     }
 10854  002EB0  EF66  F017         	goto	l40
 10855  002EB4                     l3293:
 10856  002EB4  0E02               	movlw	2
 10857  002EB6  1808               	xorwf	LCD_ShowString@lineNum^0,w,c
 10858  002EB8  A4D8               	btfss	status,2,c
 10859  002EBA  EF61  F017         	goto	u1951
 10860  002EBE  EF63  F017         	goto	u1950
 10861  002EC2                     u1951:
 10862  002EC2  EF66  F017         	goto	l40
 10863  002EC6                     u1950:
 10864  002EC6                     
 10865                           ;lcd.c: 76:         LCD_Send(0xC0);
 10866  002EC6  0EC0               	movlw	192
 10867  002EC8  ECFE  F018         	call	_LCD_Send
 10868  002ECC                     l40:
 10869                           
 10870                           ;lcd.c: 79:     LCD_Send(0x40);
 10871  002ECC  0E40               	movlw	64
 10872  002ECE  ECFE  F018         	call	_LCD_Send
 10873  002ED2                     
 10874                           ;lcd.c: 81:     for (i = 0; i<16; i++){
 10875  002ED2  0E00               	movlw	0
 10876  002ED4  6E09               	movwf	LCD_ShowString@i^0,c
 10877  002ED6                     l3303:
 10878                           
 10879                           ;lcd.c: 82:         LCD_Send(textData[i]);
 10880  002ED6  5009               	movf	LCD_ShowString@i^0,w,c
 10881  002ED8  2406               	addwf	LCD_ShowString@textData^0,w,c
 10882  002EDA  6ED9               	movwf	fsr2l,c
 10883  002EDC  0E00               	movlw	0
 10884  002EDE  2007               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 10885  002EE0  6EDA               	movwf	fsr2h,c
 10886  002EE2  50DF               	movf	indf2,w,c
 10887  002EE4  ECFE  F018         	call	_LCD_Send
 10888  002EE8                     
 10889                           ;lcd.c: 83:     }
 10890  002EE8  2A09               	incf	LCD_ShowString@i^0,f,c
 10891  002EEA  0E0F               	movlw	15
 10892  002EEC  6409               	cpfsgt	LCD_ShowString@i^0,c
 10893  002EEE  EF7B  F017         	goto	u1961
 10894  002EF2  EF7D  F017         	goto	u1960
 10895  002EF6                     u1961:
 10896  002EF6  EF6B  F017         	goto	l3303
 10897  002EFA                     u1960:
 10898  002EFA                     
 10899                           ;lcd.c: 85:     SSP2CON2bits.PEN = 1;
 10900  002EFA  846B               	bsf	107,2,c	;volatile
 10901  002EFC                     l44:
 10902  002EFC  B46B               	btfsc	107,2,c	;volatile
 10903  002EFE  EF83  F017         	goto	u1971
 10904  002F02  EF85  F017         	goto	u1970
 10905  002F06                     u1971:
 10906  002F06  EF7E  F017         	goto	l44
 10907  002F0A                     u1970:
 10908  002F0A  0012               	return		;funcret
 10909  002F0C                     __end_of_LCD_ShowString:
 10910                           	opt callstack 0
 10911                           
 10912 ;; *************** function _LCD_Clear *****************
 10913 ;; Defined at:
 10914 ;;		line 98 in file "lcd.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;		None
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;		None
 10919 ;; Return value:  Size  Location     Type
 10920 ;;                  1    wreg      void 
 10921 ;; Registers used:
 10922 ;;		wreg, cstack
 10923 ;; Tracked objects:
 10924 ;;		On entry : 0/0
 10925 ;;		On exit  : 0/0
 10926 ;;		Unchanged: 0/0
 10927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10932 ;;Total ram usage:        0 bytes
 10933 ;; Hardware stack levels used:    1
 10934 ;; Hardware stack levels required when called:    2
 10935 ;; This function calls:
 10936 ;;		_LCD_Send
 10937 ;; This function is called by:
 10938 ;;		_main
 10939 ;;		_Morseovka
 10940 ;;		_PWM_motor_led
 10941 ;;		_Knight_rider_2000
 10942 ;;		_Bargraph
 10943 ;;		_Pong
 10944 ;; This function uses a non-reentrant model
 10945 ;;
 10946                           
 10947                           	psect	text28
 10948  003142                     __ptext28:
 10949                           	opt callstack 0
 10950  003142                     _LCD_Clear:
 10951                           	opt callstack 26
 10952  003142                     
 10953                           ;lcd.c: 99:     SSP2CON2bits.SEN = 1;
 10954  003142  806B               	bsf	107,0,c	;volatile
 10955  003144                     l59:
 10956  003144  B06B               	btfsc	107,0,c	;volatile
 10957  003146  EFA7  F018         	goto	u1981
 10958  00314A  EFA9  F018         	goto	u1980
 10959  00314E                     u1981:
 10960  00314E  EFA2  F018         	goto	l59
 10961  003152                     u1980:
 10962  003152                     
 10963                           ;lcd.c: 101:     SSP2IF = 0;
 10964  003152  9EA4               	bcf	4004,7,c	;volatile
 10965  003154                     
 10966                           ;lcd.c: 103:     LCD_Send(0x7C);
 10967  003154  0E7C               	movlw	124
 10968  003156  ECFE  F018         	call	_LCD_Send
 10969                           
 10970                           ;lcd.c: 104:     LCD_Send(0x80);
 10971  00315A  0E80               	movlw	128
 10972  00315C  ECFE  F018         	call	_LCD_Send
 10973                           
 10974                           ;lcd.c: 105:     LCD_Send(0x01);
 10975  003160  0E01               	movlw	1
 10976  003162  ECFE  F018         	call	_LCD_Send
 10977  003166                     
 10978                           ;lcd.c: 107:     SSP2CON2bits.PEN = 1;
 10979  003166  846B               	bsf	107,2,c	;volatile
 10980  003168                     l62:
 10981  003168  B46B               	btfsc	107,2,c	;volatile
 10982  00316A  EFB9  F018         	goto	u1991
 10983  00316E  EFBB  F018         	goto	u1990
 10984  003172                     u1991:
 10985  003172  EFB4  F018         	goto	l62
 10986  003176                     u1990:
 10987  003176  0012               	return		;funcret
 10988  003178                     __end_of_LCD_Clear:
 10989                           	opt callstack 0
 10990                           
 10991 ;; *************** function _LCD_Send *****************
 10992 ;; Defined at:
 10993 ;;		line 89 in file "lcd.c"
 10994 ;; Parameters:    Size  Location     Type
 10995 ;;  data            1    wreg     unsigned char 
 10996 ;; Auto vars:     Size  Location     Type
 10997 ;;  data            1    4[COMRAM] unsigned char 
 10998 ;; Return value:  Size  Location     Type
 10999 ;;                  1    wreg      void 
 11000 ;; Registers used:
 11001 ;;		wreg
 11002 ;; Tracked objects:
 11003 ;;		On entry : 0/0
 11004 ;;		On exit  : 0/0
 11005 ;;		Unchanged: 0/0
 11006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11011 ;;Total ram usage:        1 bytes
 11012 ;; Hardware stack levels used:    1
 11013 ;; Hardware stack levels required when called:    1
 11014 ;; This function calls:
 11015 ;;		Nothing
 11016 ;; This function is called by:
 11017 ;;		_LCD_Init
 11018 ;;		_LCD_ShowString
 11019 ;;		_LCD_Clear
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           	psect	text29
 11024  0031FC                     __ptext29:
 11025                           	opt callstack 0
 11026  0031FC                     _LCD_Send:
 11027                           	opt callstack 27
 11028                           
 11029                           ;incstack = 0
 11030                           ;LCD_Send@data stored from wreg
 11031  0031FC  6E05               	movwf	LCD_Send@data^0,c
 11032  0031FE                     
 11033                           ;lcd.c: 91:     SSP2BUF = data;
 11034  0031FE  C005  FF6F         	movff	LCD_Send@data,3951	;volatile
 11035  003202                     l50:
 11036  003202  B06D               	btfsc	109,0,c	;volatile
 11037  003204  EF06  F019         	goto	u1901
 11038  003208  EF08  F019         	goto	u1900
 11039  00320C                     u1901:
 11040  00320C  EF01  F019         	goto	l50
 11041  003210                     u1900:
 11042  003210                     l53:
 11043  003210  AEA4               	btfss	4004,7,c	;volatile
 11044  003212  EF0D  F019         	goto	u1911
 11045  003216  EF0F  F019         	goto	u1910
 11046  00321A                     u1911:
 11047  00321A  EF08  F019         	goto	l53
 11048  00321E                     u1910:
 11049  00321E                     
 11050                           ;lcd.c: 94:     SSP2IF = 0;
 11051  00321E  9EA4               	bcf	4004,7,c	;volatile
 11052  003220  0012               	return		;funcret
 11053  003222                     __end_of_LCD_Send:
 11054                           	opt callstack 0
 11055                           
 11056 ;; *************** function _Bargraph_init *****************
 11057 ;; Defined at:
 11058 ;;		line 177 in file "Projekt.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;		None
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;		None
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  1    wreg      void 
 11065 ;; Registers used:
 11066 ;;		wreg, status,2, status,0
 11067 ;; Tracked objects:
 11068 ;;		On entry : 0/0
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;Total ram usage:        0 bytes
 11077 ;; Hardware stack levels used:    1
 11078 ;; Hardware stack levels required when called:    1
 11079 ;; This function calls:
 11080 ;;		Nothing
 11081 ;; This function is called by:
 11082 ;;		_Bargraph
 11083 ;; This function uses a non-reentrant model
 11084 ;;
 11085                           
 11086                           	psect	text30
 11087  0031A6                     __ptext30:
 11088                           	opt callstack 0
 11089  0031A6                     _Bargraph_init:
 11090                           	opt callstack 28
 11091  0031A6                     
 11092                           ;Projekt.c: 178:     ANSELA |= (1 << 5);
 11093  0031A6  010F               	movlb	15	; () banked
 11094  0031A8  8B38               	bsf	56,5,b	;volatile
 11095  0031AA                     
 11096                           ; BSR set to: 15
 11097                           ;Projekt.c: 179:     ANSELE = 0b1;
 11098  0031AA  0E01               	movlw	1
 11099  0031AC  6F3C               	movwf	60,b	;volatile
 11100  0031AE                     
 11101                           ; BSR set to: 15
 11102                           ;Projekt.c: 181:     ADCON2bits.ADFM = 1;
 11103  0031AE  8EC0               	bsf	192,7,c	;volatile
 11104  0031B0                     
 11105                           ; BSR set to: 15
 11106                           ;Projekt.c: 182:     ADCON2bits.ADCS = 0b110;
 11107  0031B0  50C0               	movf	192,w,c	;volatile
 11108  0031B2  0BF8               	andlw	-8
 11109  0031B4  0906               	iorlw	6
 11110  0031B6  6EC0               	movwf	192,c	;volatile
 11111  0031B8                     
 11112                           ; BSR set to: 15
 11113                           ;Projekt.c: 183:     ADCON2bits.ACQT = 0b110;
 11114  0031B8  50C0               	movf	192,w,c	;volatile
 11115  0031BA  0BC7               	andlw	-57
 11116  0031BC  0930               	iorlw	48
 11117  0031BE  6EC0               	movwf	192,c	;volatile
 11118  0031C0                     
 11119                           ; BSR set to: 15
 11120                           ;Projekt.c: 184:     ADCON0bits.ADON = 1;
 11121  0031C0  80C2               	bsf	194,0,c	;volatile
 11122  0031C2                     
 11123                           ; BSR set to: 15
 11124                           ;Projekt.c: 185:     ADCON0bits.CHS = 5;
 11125  0031C2  50C2               	movf	194,w,c	;volatile
 11126  0031C4  0B83               	andlw	-125
 11127  0031C6  0914               	iorlw	20
 11128  0031C8  6EC2               	movwf	194,c	;volatile
 11129  0031CA                     
 11130                           ; BSR set to: 15
 11131                           ;Projekt.c: 187:     ADIF = 0;
 11132  0031CA  9C9E               	bcf	3998,6,c	;volatile
 11133  0031CC                     
 11134                           ; BSR set to: 15
 11135                           ;Projekt.c: 188:     PEIE = 1;
 11136  0031CC  8CF2               	bsf	4082,6,c	;volatile
 11137  0031CE                     
 11138                           ; BSR set to: 15
 11139                           ;Projekt.c: 189:     ADIE = 1;
 11140  0031CE  8C9D               	bsf	3997,6,c	;volatile
 11141  0031D0                     
 11142                           ; BSR set to: 15
 11143                           ;Projekt.c: 190:     GIE = 1;
 11144  0031D0  8EF2               	bsf	4082,7,c	;volatile
 11145  0031D2                     
 11146                           ; BSR set to: 15
 11147  0031D2  0012               	return		;funcret
 11148  0031D4                     __end_of_Bargraph_init:
 11149                           	opt callstack 0
 11150                           
 11151 ;; *************** function _ISR *****************
 11152 ;; Defined at:
 11153 ;;		line 205 in file "Projekt.c"
 11154 ;; Parameters:    Size  Location     Type
 11155 ;;		None
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;		None
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  1    wreg      void 
 11160 ;; Registers used:
 11161 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/0
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11169 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11170 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11171 ;;Total ram usage:        4 bytes
 11172 ;; Hardware stack levels used:    1
 11173 ;; This function calls:
 11174 ;;		Nothing
 11175 ;; This function is called by:
 11176 ;;		Interrupt level 2
 11177 ;; This function uses a non-reentrant model
 11178 ;;
 11179                           
 11180                           	psect	intcode
 11181  000008                     __pintcode:
 11182                           	opt callstack 0
 11183  000008                     _ISR:
 11184                           	opt callstack 20
 11185                           
 11186                           ; BSR set to: 15
 11187                           ;incstack = 0
 11188  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11189  00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 11190  00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 11191  000012                     
 11192                           ;Projekt.c: 207:     if (ADIF & ADIE) {
 11193  000012  0E01               	movlw	1
 11194  000014  AC9E               	btfss	3998,6,c	;volatile
 11195  000016  0E00               	movlw	0
 11196  000018  AC9D               	btfss	3997,6,c	;volatile
 11197  00001A  0E00               	movlw	0
 11198  00001C  A0E8               	btfss	wreg,0,c
 11199  00001E  EF13  F000         	goto	i2u271_41
 11200  000022  EF15  F000         	goto	i2u271_40
 11201  000026                     i2u271_41:
 11202  000026  EF22  F000         	goto	i2l4359
 11203  00002A                     i2u271_40:
 11204  00002A                     
 11205                           ;Projekt.c: 208:         pot1 = (ADRESH << 8) | (ADRESL);
 11206  00002A  50C3               	movf	195,w,c	;volatile
 11207  00002C  CFC4 F001          	movff	4036,??_ISR	;volatile
 11208  000030  6A02               	clrf	(??_ISR+1)^0,c
 11209  000032  C001  F002         	movff	??_ISR,??_ISR+1
 11210  000036  6A01               	clrf	??_ISR^0,c
 11211  000038  1001               	iorwf	??_ISR^0,w,c
 11212  00003A  0100               	movlb	0	; () banked
 11213  00003C  6FD9               	movwf	_pot1& (0+255),b	;volatile
 11214  00003E  5002               	movf	(??_ISR+1)^0,w,c
 11215  000040  6FDA               	movwf	(_pot1+1)& (0+255),b	;volatile
 11216  000042                     
 11217                           ; BSR set to: 0
 11218                           ;Projekt.c: 209:               ADIF = 0;
 11219  000042  9C9E               	bcf	3998,6,c	;volatile
 11220  000044                     i2l4359:
 11221                           
 11222                           ;Projekt.c: 212:      if(RC1IE && RC1IF){
 11223  000044  AA9D               	btfss	3997,5,c	;volatile
 11224  000046  EF27  F000         	goto	i2u272_41
 11225  00004A  EF29  F000         	goto	i2u272_40
 11226  00004E                     i2u272_41:
 11227  00004E  EF3F  F000         	goto	i2l218
 11228  000052                     i2u272_40:
 11229  000052  AA9E               	btfss	3998,5,c	;volatile
 11230  000054  EF2E  F000         	goto	i2u273_41
 11231  000058  EF30  F000         	goto	i2u273_40
 11232  00005C                     i2u273_41:
 11233  00005C  EF3F  F000         	goto	i2l218
 11234  000060                     i2u273_40:
 11235  000060                     
 11236                           ;Projekt.c: 213:            zapis[n] = RCREG1;
 11237  000060  0E00               	movlw	low _zapis
 11238  000062  0100               	movlb	0	; () banked
 11239  000064  25D2               	addwf	_n& (0+255),w,b	;volatile
 11240  000066  6ED9               	movwf	fsr2l,c
 11241  000068  0E01               	movlw	high _zapis
 11242  00006A  21D3               	addwfc	(_n+1)& (0+255),w,b	;volatile
 11243  00006C  6EDA               	movwf	fsr2h,c
 11244  00006E  CFAE FFDF          	movff	4014,indf2	;volatile
 11245  000072                     
 11246                           ; BSR set to: 0
 11247                           ;Projekt.c: 214:            n++;
 11248  000072  0E01               	movlw	1
 11249  000074  27D2               	addwf	_n& (0+255),f,b	;volatile
 11250  000076  0E00               	movlw	0
 11251  000078  23D3               	addwfc	(_n+1)& (0+255),f,b	;volatile
 11252  00007A  0E00               	movlw	0
 11253  00007C  23D4               	addwfc	(_n+2)& (0+255),f,b	;volatile
 11254  00007E                     i2l218:
 11255  00007E  C004  FFDA         	movff	??_ISR+3,fsr2h
 11256  000082  C003  FFD9         	movff	??_ISR+2,fsr2l
 11257  000086  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11258  000088  0011               	retfie		f
 11259  00008A                     __end_of_ISR:
 11260                           	opt callstack 0
 11261                           
 11262                           	psect	rparam
 11263  0000                     
 11264                           	psect	temp
 11265  00005A                     btemp:
 11266                           	opt callstack 0
 11267  00005A                     	ds	1
 11268  0000                     int$flags	set	btemp
 11269  0000                     wtemp8	set	btemp+1
 11270  0000                     ttemp5	set	btemp+1
 11271  0000                     ttemp6	set	btemp+4
 11272  0000                     ttemp7	set	btemp+8
 11273                           tosu	equ	0xFFF
 11274                           tosh	equ	0xFFE
 11275                           tosl	equ	0xFFD
 11276                           stkptr	equ	0xFFC
 11277                           pclatu	equ	0xFFB
 11278                           pclath	equ	0xFFA
 11279                           pcl	equ	0xFF9
 11280                           tblptru	equ	0xFF8
 11281                           tblptrh	equ	0xFF7
 11282                           tblptrl	equ	0xFF6
 11283                           tablat	equ	0xFF5
 11284                           prodh	equ	0xFF4
 11285                           prodl	equ	0xFF3
 11286                           indf0	equ	0xFEF
 11287                           postinc0	equ	0xFEE
 11288                           postdec0	equ	0xFED
 11289                           preinc0	equ	0xFEC
 11290                           plusw0	equ	0xFEB
 11291                           fsr0h	equ	0xFEA
 11292                           fsr0l	equ	0xFE9
 11293                           wreg	equ	0xFE8
 11294                           indf1	equ	0xFE7
 11295                           postinc1	equ	0xFE6
 11296                           postdec1	equ	0xFE5
 11297                           preinc1	equ	0xFE4
 11298                           plusw1	equ	0xFE3
 11299                           fsr1h	equ	0xFE2
 11300                           fsr1l	equ	0xFE1
 11301                           bsr	equ	0xFE0
 11302                           indf2	equ	0xFDF
 11303                           postinc2	equ	0xFDE
 11304                           postdec2	equ	0xFDD
 11305                           preinc2	equ	0xFDC
 11306                           plusw2	equ	0xFDB
 11307                           fsr2h	equ	0xFDA
 11308                           fsr2l	equ	0xFD9
 11309                           status	equ	0xFD8


Data Sizes:
    Strings     1259
    Constant    0
    Data        0
    BSS         146
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      89
    BANK0           160    114     157
    BANK1           256     87     186
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_66(CODE[3]), STR_65(CODE[2]), STR_64(CODE[15]), STR_63(CODE[13]), 
		 -> STR_62(CODE[15]), STR_61(CODE[17]), STR_60(CODE[13]), STR_59(CODE[13]), 
		 -> STR_58(CODE[13]), STR_57(CODE[13]), STR_56(CODE[13]), STR_55(CODE[13]), 
		 -> STR_54(CODE[13]), STR_53(CODE[13]), STR_52(CODE[13]), STR_51(CODE[13]), 
		 -> STR_50(CODE[11]), STR_49(CODE[11]), STR_48(CODE[11]), STR_47(CODE[9]), 
		 -> STR_46(CODE[11]), STR_45(CODE[9]), STR_44(CODE[5]), STR_43(CODE[9]), 
		 -> STR_42(CODE[9]), STR_41(CODE[11]), STR_40(CODE[11]), STR_39(CODE[9]), 
		 -> STR_38(CODE[7]), STR_37(CODE[7]), STR_36(CODE[11]), STR_35(CODE[9]), 
		 -> STR_34(CODE[11]), STR_33(CODE[7]), STR_32(CODE[11]), STR_31(CODE[9]), 
		 -> STR_30(CODE[11]), STR_29(CODE[5]), STR_28(CODE[9]), STR_27(CODE[11]), 
		 -> STR_26(CODE[11]), STR_25(CODE[7]), STR_24(CODE[12]), STR_21(CODE[34]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_122(CODE[19]), STR_121(CODE[19]), STR_120(CODE[19]), STR_119(CODE[19]), 
		 -> STR_118(CODE[19]), STR_117(CODE[19]), STR_116(CODE[19]), STR_115(CODE[19]), 
		 -> STR_114(CODE[19]), STR_113(CODE[19]), STR_112(CODE[19]), STR_111(CODE[19]), 
		 -> STR_110(CODE[19]), STR_109(CODE[16]), STR_108(CODE[17]), STR_107(CODE[19]), 
		 -> STR_106(CODE[16]), STR_105(CODE[17]), STR_104(CODE[19]), STR_103(CODE[19]), 
		 -> STR_102(CODE[19]), STR_101(CODE[19]), STR_100(CODE[19]), STR_99(CODE[19]), 
		 -> STR_98(CODE[19]), STR_97(CODE[19]), STR_96(CODE[19]), STR_95(CODE[19]), 
		 -> STR_94(CODE[19]), STR_93(CODE[19]), STR_92(CODE[19]), STR_91(CODE[19]), 
		 -> STR_90(CODE[17]), STR_89(CODE[17]), STR_88(CODE[17]), STR_87(CODE[17]), 
		 -> STR_86(CODE[17]), STR_85(CODE[17]), STR_84(CODE[17]), STR_83(CODE[17]), 
		 -> STR_82(CODE[17]), STR_81(CODE[17]), STR_80(CODE[17]), STR_79(CODE[17]), 
		 -> STR_78(CODE[17]), STR_77(CODE[17]), STR_76(CODE[17]), STR_75(CODE[17]), 
		 -> STR_74(CODE[17]), STR_73(CODE[18]), STR_72(CODE[17]), STR_71(CODE[17]), 
		 -> STR_70(CODE[17]), STR_69(CODE[17]), STR_68(CODE[23]), STR_67(CODE[17]), 
		 -> STR_23(CODE[17]), STR_22(CODE[17]), STR_20(CODE[17]), STR_19(CODE[17]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> Pong@vitez(BANK0[17]), Pong@gameover(BANK0[17]), Pong@micek(BANK0[17]), Pong@zivoty(BANK0[17]), 
		 -> Bargraph@graph(BANK0[17]), Bargraph@text(BANK0[17]), text(BANK1[17]), nadpis2(BANK0[17]), 
		 -> nadpis1(BANK0[17]), main@pong(BANK1[17]), main@barg(BANK1[17]), main@pwm(BANK1[17]), 
		 -> main@mor(BANK1[17]), main@k_r(BANK1[17]), kr_init@mor(BANK0[17]), kr_init@k_r(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> Pong@vitez(BANK0[17]), Pong@gameover(BANK0[17]), Pong@micek(BANK0[17]), Pong@zivoty(BANK0[17]), 
		 -> Bargraph@graph(BANK0[17]), Bargraph@text(BANK0[17]), text(BANK1[17]), nadpis2(BANK0[17]), 
		 -> nadpis1(BANK0[17]), main@pong(BANK1[17]), main@barg(BANK1[17]), main@pwm(BANK1[17]), 
		 -> main@mor(BANK1[17]), main@k_r(BANK1[17]), kr_init@mor(BANK0[17]), kr_init@k_r(BANK0[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    S2242_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> Pong@vitez(BANK0[17]), Pong@gameover(BANK0[17]), Pong@micek(BANK0[17]), Pong@zivoty(BANK0[17]), 
		 -> Bargraph@graph(BANK0[17]), Bargraph@text(BANK0[17]), text(BANK1[17]), nadpis2(BANK0[17]), 
		 -> nadpis1(BANK0[17]), main@pong(BANK1[17]), main@barg(BANK1[17]), main@pwm(BANK1[17]), 
		 -> main@mor(BANK1[17]), main@k_r(BANK1[17]), kr_init@mor(BANK0[17]), kr_init@k_r(BANK0[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> Pong@vitez(BANK0[17]), Pong@gameover(BANK0[17]), Pong@micek(BANK0[17]), Pong@zivoty(BANK0[17]), 
		 -> Bargraph@graph(BANK0[17]), Bargraph@text(BANK0[17]), text(BANK1[17]), nadpis2(BANK0[17]), 
		 -> nadpis1(BANK0[17]), main@pong(BANK1[17]), main@barg(BANK1[17]), main@pwm(BANK1[17]), 
		 -> main@mor(BANK1[17]), main@k_r(BANK1[17]), kr_init@mor(BANK0[17]), kr_init@k_r(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_122(CODE[19]), STR_121(CODE[19]), STR_120(CODE[19]), STR_119(CODE[19]), 
		 -> STR_118(CODE[19]), STR_117(CODE[19]), STR_116(CODE[19]), STR_115(CODE[19]), 
		 -> STR_114(CODE[19]), STR_113(CODE[19]), STR_112(CODE[19]), STR_111(CODE[19]), 
		 -> STR_110(CODE[19]), STR_109(CODE[16]), STR_108(CODE[17]), STR_107(CODE[19]), 
		 -> STR_106(CODE[16]), STR_105(CODE[17]), STR_104(CODE[19]), STR_103(CODE[19]), 
		 -> STR_102(CODE[19]), STR_101(CODE[19]), STR_100(CODE[19]), STR_99(CODE[19]), 
		 -> STR_98(CODE[19]), STR_97(CODE[19]), STR_96(CODE[19]), STR_95(CODE[19]), 
		 -> STR_94(CODE[19]), STR_93(CODE[19]), STR_92(CODE[19]), STR_91(CODE[19]), 
		 -> STR_90(CODE[17]), STR_89(CODE[17]), STR_88(CODE[17]), STR_87(CODE[17]), 
		 -> STR_86(CODE[17]), STR_85(CODE[17]), STR_84(CODE[17]), STR_83(CODE[17]), 
		 -> STR_82(CODE[17]), STR_81(CODE[17]), STR_80(CODE[17]), STR_79(CODE[17]), 
		 -> STR_78(CODE[17]), STR_77(CODE[17]), STR_76(CODE[17]), STR_75(CODE[17]), 
		 -> STR_74(CODE[17]), STR_73(CODE[18]), STR_72(CODE[17]), STR_71(CODE[17]), 
		 -> STR_70(CODE[17]), STR_69(CODE[17]), STR_68(CODE[23]), STR_67(CODE[17]), 
		 -> STR_66(CODE[3]), STR_65(CODE[2]), STR_64(CODE[15]), STR_63(CODE[13]), 
		 -> STR_62(CODE[15]), STR_61(CODE[17]), STR_60(CODE[13]), STR_59(CODE[13]), 
		 -> STR_58(CODE[13]), STR_57(CODE[13]), STR_56(CODE[13]), STR_55(CODE[13]), 
		 -> STR_54(CODE[13]), STR_53(CODE[13]), STR_52(CODE[13]), STR_51(CODE[13]), 
		 -> STR_50(CODE[11]), STR_49(CODE[11]), STR_48(CODE[11]), STR_47(CODE[9]), 
		 -> STR_46(CODE[11]), STR_45(CODE[9]), STR_44(CODE[5]), STR_43(CODE[9]), 
		 -> STR_42(CODE[9]), STR_41(CODE[11]), STR_40(CODE[11]), STR_39(CODE[9]), 
		 -> STR_38(CODE[7]), STR_37(CODE[7]), STR_36(CODE[11]), STR_35(CODE[9]), 
		 -> STR_34(CODE[11]), STR_33(CODE[7]), STR_32(CODE[11]), STR_31(CODE[9]), 
		 -> STR_30(CODE[11]), STR_29(CODE[5]), STR_28(CODE[9]), STR_27(CODE[11]), 
		 -> STR_26(CODE[11]), STR_25(CODE[7]), STR_24(CODE[12]), STR_23(CODE[17]), 
		 -> STR_22(CODE[17]), STR_21(CODE[34]), STR_20(CODE[17]), STR_19(CODE[17]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_122(CODE[19]), STR_121(CODE[19]), STR_120(CODE[19]), STR_119(CODE[19]), 
		 -> STR_118(CODE[19]), STR_117(CODE[19]), STR_116(CODE[19]), STR_115(CODE[19]), 
		 -> STR_114(CODE[19]), STR_113(CODE[19]), STR_112(CODE[19]), STR_111(CODE[19]), 
		 -> STR_110(CODE[19]), STR_109(CODE[16]), STR_108(CODE[17]), STR_107(CODE[19]), 
		 -> STR_106(CODE[16]), STR_105(CODE[17]), STR_104(CODE[19]), STR_103(CODE[19]), 
		 -> STR_102(CODE[19]), STR_101(CODE[19]), STR_100(CODE[19]), STR_99(CODE[19]), 
		 -> STR_98(CODE[19]), STR_97(CODE[19]), STR_96(CODE[19]), STR_95(CODE[19]), 
		 -> STR_94(CODE[19]), STR_93(CODE[19]), STR_92(CODE[19]), STR_91(CODE[19]), 
		 -> STR_90(CODE[17]), STR_89(CODE[17]), STR_88(CODE[17]), STR_87(CODE[17]), 
		 -> STR_86(CODE[17]), STR_85(CODE[17]), STR_84(CODE[17]), STR_83(CODE[17]), 
		 -> STR_82(CODE[17]), STR_81(CODE[17]), STR_80(CODE[17]), STR_79(CODE[17]), 
		 -> STR_78(CODE[17]), STR_77(CODE[17]), STR_76(CODE[17]), STR_75(CODE[17]), 
		 -> STR_74(CODE[17]), STR_73(CODE[18]), STR_72(CODE[17]), STR_71(CODE[17]), 
		 -> STR_70(CODE[17]), STR_69(CODE[17]), STR_68(CODE[23]), STR_67(CODE[17]), 
		 -> STR_66(CODE[3]), STR_65(CODE[2]), STR_64(CODE[15]), STR_63(CODE[13]), 
		 -> STR_62(CODE[15]), STR_61(CODE[17]), STR_60(CODE[13]), STR_59(CODE[13]), 
		 -> STR_58(CODE[13]), STR_57(CODE[13]), STR_56(CODE[13]), STR_55(CODE[13]), 
		 -> STR_54(CODE[13]), STR_53(CODE[13]), STR_52(CODE[13]), STR_51(CODE[13]), 
		 -> STR_50(CODE[11]), STR_49(CODE[11]), STR_48(CODE[11]), STR_47(CODE[9]), 
		 -> STR_46(CODE[11]), STR_45(CODE[9]), STR_44(CODE[5]), STR_43(CODE[9]), 
		 -> STR_42(CODE[9]), STR_41(CODE[11]), STR_40(CODE[11]), STR_39(CODE[9]), 
		 -> STR_38(CODE[7]), STR_37(CODE[7]), STR_36(CODE[11]), STR_35(CODE[9]), 
		 -> STR_34(CODE[11]), STR_33(CODE[7]), STR_32(CODE[11]), STR_31(CODE[9]), 
		 -> STR_30(CODE[11]), STR_29(CODE[5]), STR_28(CODE[9]), STR_27(CODE[11]), 
		 -> STR_26(CODE[11]), STR_25(CODE[7]), STR_24(CODE[12]), STR_23(CODE[17]), 
		 -> STR_22(CODE[17]), STR_21(CODE[34]), STR_20(CODE[17]), STR_19(CODE[17]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> Pong@vitez(BANK0[17]), Pong@gameover(BANK0[17]), Pong@micek(BANK0[17]), Pong@zivoty(BANK0[17]), 
		 -> Bargraph@graph(BANK0[17]), Bargraph@text(BANK0[17]), text(BANK1[17]), nadpis2(BANK0[17]), 
		 -> nadpis1(BANK0[17]), main@pong(BANK1[17]), main@barg(BANK1[17]), main@pwm(BANK1[17]), 
		 -> main@mor(BANK1[17]), main@k_r(BANK1[17]), kr_init@mor(BANK0[17]), kr_init@k_r(BANK0[17]), 


Critical Paths under _main in COMRAM

    _init->_LCD_Init
    _LCD_Init->_LCD_Send
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Pong
    _kr_init->_Knight_rider_2000
    _Knight_rider_3000->_sprintf
    _Knight_rider_2000->_sprintf
    _Pong->_sprintf
    _PWM_motor_led->_sprintf
    _Morseovka->_sprintf
    _printf->_vfprintf
    _Bargraph->_sprintf
    _sprintf->_vfprintf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                89    89      0  296366
                                            112 BANK0      2     2      0
                                              0 BANK1     87    87      0
                           _Bargraph
                          _LCD_Clear
                     _LCD_ShowString
                          _Morseovka
                      _PWM_motor_led
                               _Pong
                               _init
                            _kr_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _kr_init                                             38    38      0  103149
                                             34 BANK0     38    38      0
                  _Knight_rider_2000
                  _Knight_rider_3000
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Knight_rider_3000                                    6     6      0   34312
                                             26 BANK0      6     6      0
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Knight_rider_2000                                    8     8      0   34411
                                             26 BANK0      8     8      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      22
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0      22
                                              5 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _Pong                                                86    86      0   37465
                                             26 BANK0     86    86      0
                          _LCD_Clear
                     _LCD_ShowString
                          _Pong_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Pong_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_motor_led                                        4     4      0   34195
                                             26 BANK0      4     4      0
                          _LCD_Clear
                     _LCD_ShowString
                           _PWM_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Morseovka                                            7     7      0   51013
                                             26 BANK0      7     7      0
                          _LCD_Clear
                     _LCD_ShowString
                     _Morseovka_init
                             _printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2   16806
                                              8 BANK0      6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _Morseovka_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Bargraph                                            40    40      0   35214
                                             26 BANK0     36    36      0
                      _Bargraph_init
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   27111
                                              8 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12759
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   12007
                                             68 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6015
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4028
                                             32 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3749
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1568
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1068
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       4     2      2    6997
                                              5 COMRAM     4     2      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0      22
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Bargraph_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bargraph
     _Bargraph_init
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
       _LCD_Send
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _LCD_Clear
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _Morseovka
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
       _LCD_Send
     _Morseovka_init
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _PWM_motor_led
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
       _LCD_Send
     _PWM_init
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _Pong
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
       _LCD_Send
     _Pong_init
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _init
     _LCD_Init
       _LCD_Send
   _kr_init
     _Knight_rider_2000
       _LCD_Clear
         _LCD_Send
       _LCD_ShowString
         _LCD_Send
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _Knight_rider_3000
       _LCD_ShowString
         _LCD_Send
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _LCD_ShowString
       _LCD_Send
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     57      BA       7       72.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     72      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      59       1       94.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B0      12        0.0%
DATA                 0      0     1B0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun May 10 14:33:14 2020

                         _n 00D2                          l30 2C02                          l40 2ECC  
                        l33 2C1E                          l50 3202                          l43 2EFA  
                        l27 2B72                          l44 2EFC                          l36 2E7E  
                        l53 3210                          l61 3152                          l29 2B80  
                        l62 3168                          l38 2E8C                          l55 321E  
                        l47 2F0A                          l56 3220                          l65 3176  
                        l59 3144                         l202 2F3C                         l211 3272  
                       l204 2F4A                         l205 2F78                         l231 1D00  
                       l208 31D2                         l333 2C5A                         l181 3268  
                       l502 3254                         l190 2996                         l431 192C  
                       l327 13A8                         l351 26E8                         l424 1904  
                       l337 2CEC                         l346 2582                         l194 29E0  
                       l371 212A                         l355 263A                         l347 25D0  
                       l532 2E3E                         l356 2686                         l348 258A  
                       l541 3034                         l357 2642                         l349 2592  
                       l534 2E78                         l358 264A                         l199 323E  
                       l712 2B44                         l464 0DDC                         l529 2DFC  
                       l466 0768                         l386 2254                         l378 22CC  
                       l547 1DDA                         l572 24F2                         l549 1DE2  
                       l581 2FD2                         l582 2FDA                         l494 0DB6  
                       l567 2018                         l499 3242                         l699 2870  
                       _GIE 007F97                         _PR2 000FBB                         _ISR 0008  
                       _abs 30CC                         _pad 2DB8                         wreg 000FE8  
                _TXSTA1bits 000FAC                        ?_ISR 0001                        ?_abs 0017  
                      l1303 3140                        l1260 3102                        l1263 310A  
                      l1290 3086                        l1275 2DB6                        l1283 30CA  
                      l3311 3154                        l3303 2ED6                        l3313 3166  
                      l3305 2EE8                        l5001 22CE                        l1297 31FA  
                      l3307 2EEA                        l5011 233A                        l5003 22F2  
                      l3331 2B60                        l3309 3142                        l5021 23D0  
                      l5013 236C                        l5005 2300                        l3341 2C10  
                      l3333 2B62                        l5101 2048                        l5031 2482  
                      l5023 2418                        l5007 2310                        l3335 2B70  
                      l3327 2B46                        l5111 209A                        l5103 2050  
                      l3601 31C2                        l3273 31FE                        l5033 2496  
                      l5017 2388                        l5009 2316                        l3337 2B82  
                      l3329 2B54                        l5121 20CC                        l5105 2064  
                      l5201 250C                        l6001 1954                        l3603 31CA  
                      l3291 2EAA                        l3283 2E7C                        l5027 2450  
                      l5019 23AC                        l5043 24BC                        l5051 2F7A  
                      l3611 326A                        l3339 2C00                        l5131 2138  
                      l5123 20D2                        l5115 20BA                        l5107 2072  
                      l5203 251E                        l6011 19A8                        l6003 1970  
                      l3605 31CC                        l3293 2EB4                        l3285 2E7C  
                      l5045 24E0                        l5029 2474                        l5037 24A2  
                      l5053 2F82                        l5061 3048                        l3621 325A  
                      l5133 2144                        l5125 20D8                        l5117 20C0  
                      l5141 219C                        l5109 2088                        l5221 25DE  
                      l5205 2532                        l5301 2968                        l6101 1D18  
                      l6021 1A08                        l6013 19B4                        l6005 1978  
                      l3607 31CE                        l3295 2EC6                        l3287 2E8E  
                      l5039 24B0                        l5055 2F90                        l5063 3050  
                      l3551 3236                        l3543 3222                        l3623 325C  
                      l5143 21A0                        l5119 20C6                        l5071 201A  
                      l5231 2628                        l5223 25EA                        l5215 2564  
                      l5207 2540                        l5303 29A4                        l6031 1A70  
                      l6023 1A22                        l6015 19C8                        l6007 1986  
                      l3609 31D0                        l3297 2ED2                        l3289 2E9A  
                      l5057 2FB6                        l5065 3058                        l3553 3238  
                      l3545 3228                        l5401 106C                        l5321 0DE6  
                      l5313 0DDE                        l3561 2F10                        l3625 325E  
                      l5161 21FC                        l5153 21E4                        l5137 2162  
                      l5129 20DE                        l5145 21A8                        l5081 2026  
                      l5073 201E                        l5209 2556                        l6041 1ACC  
                      l6033 1A7E                        l6025 1A2A                        l6017 19D6  
                      l6009 198E                        l5067 3074                        l5059 3036  
                      l3555 323A                        l3547 322E                        l5411 10BC  
                      l5403 107C                        l5331 0E3C                        l5323 0DF4  
                      l5315 0DE2                        l3571 2F38                        l3563 2F12  
                      l3627 3260                        l3619 3256                        l5163 2202  
                      l5155 21EA                        l5147 21C6                        l5139 217A  
                      l5091 2030                        l5083 2028                        l5075 2020  
                      l5227 2608                        l5219 259A                        l5307 29C2  
                      l6051 1B24                        l6035 1A86                        l6027 1A3E  
                      l6019 19FA                        l5501 1462                        l3557 323C  
                      l3549 3230                        l5421 10FC                        l5413 10CC  
                      l5405 108C                        l5341 0E8C                        l5333 0E52  
                      l5325 0E0A                        l5317 0DE6                        l3581 2F70  
                      l3573 2F3A                        l3565 2F14                        l3629 3262  
                      l5181 22A8                        l5157 21F0                        l5149 21D2  
                      l5093 2032                        l5085 202A                        l5077 2022  
                      l5245 26A4                        l5237 2652                        l5229 260C  
                      l6061 1B80                        l6053 1B32                        l6045 1ADE  
                      l6037 1A9A                        l6029 1A4C                        ?_pad 0016  
                      l3591 31AA                        l5511 14CA                        l5503 1478  
                      l5263 31D4                        l5415 10DC                        l5407 109C  
                      l5351 0EDC                        l5343 0E9C                        l5423 133A  
                      l5335 0E5E                        l5431 1380                        l5327 0E18  
                      l5319 0DE6                        l3583 2F72                        l3575 2F4E  
                      l3567 2F16                        l3559 2F0C                        l5175 2272  
                      l5159 21F6                        l5167 2208                        l5183 22AC  
                      l5095 2034                        l5087 202C                        l5079 2024  
                      l5247 26BE                        l5239 2694                        l5271 287C  
                      l6071 1BD8                        l6055 1B3A                        l6047 1AF2  
                      l6039 1AA8                        l3593 31AE                        l4801 3088  
                      l5601 1864                        l5521 1530                        l5513 14DE  
                      l5505 148C                        l5265 31DE                        l5433 138E  
                      l5417 10EC                        l5409 10AC                        l5361 0F2C  
                      l5353 0EEC                        l5345 0EAC                        l5337 0E6C  
                      l5425 1340                        l5329 0E2E                        l3585 2F74  
                      l3577 2F54                        l3569 2F18                        l5441 2C20  
                      l5177 228A                        l5169 2262                        l5097 2036  
                      l5089 202E                        l5249 26D4                        l5281 28C4  
                      l5273 288A                        l6081 1C34                        l6073 1BE6  
                      l6065 1B92                        l6057 1B4E                        l6049 1B00  
                      l3595 31B0                        l4803 3094                        l4811 3118  
                      l5611 18C8                        l5603 1876                        l5531 1594  
                      l5523 1542                        l5515 14F0                        l5507 149E  
                      l5427 1368                        l5371 0F7C                        l5363 0F3C  
                      l5355 0EFC                        l5347 0EBC                        l5339 0E7C  
                      l3587 2F76                        l3579 2F66                        l5451 2C2E  
                      l5443 2C24                        l5179 22A0                        l5099 2040  
                      l5291 2920                        l5283 28D2                        l5275 2894  
                      l6091 1C8C                        l6075 1BEE                        l6067 1BA6  
                      l6059 1B5C                        l3597 31B8                        l3589 31A6  
                      l4805 30A6                        l4813 311C                        l4821 2DC6  
                      l4901 2A46                        l5613 18DE                        l5605 188C  
                      l5541 15FC                        l5533 15AA                        l5525 1558  
                      l5517 1506                        l5509 14B4                        l5429 1374  
                      l5381 0FCC                        l5373 0F8C                        l5365 0F4C  
                      l5357 0F0C                        l5349 0ECC                        l5461 2C58  
                      l5453 2C30                        l5445 2C28                        l5701 0392  
                      l5293 292E                        l5285 28F6                        l5277 28A2  
                      l5269 2872                        l6093 1C9A                        l6085 1C46  
                      l6077 1C02                        l6069 1BB4                        l3599 31C0  
                      l4807 30AA                        l4815 3134                        l4831 2E1C  
                      l4823 2DDA                        l4911 2ABC                        l4903 2A64  
                      l5615 18F2                        l5607 18A2                        l5551 1664  
                      l5543 1612                        l5535 15C0                        l5527 156E  
                      l5519 151C                        l5391 101C                        l5383 0FDC  
                      l5375 0F9C                        l5367 0F5C                        l5359 0F1C  
                      l5471 2CB4                        l5463 2C68                        l5455 2C32  
                      l5447 2C2A                        l5711 040C                        l5703 03A4  
                      l5631 00A8                        l5623 008E                        l5199 24F4  
                      l5295 2952                        l5287 2904                        l5279 28B0  
                      l6087 1C5A                        l6079 1C10                        l4809 310C  
                      l4833 2E20                        l4825 2DE8                        l4921 2B24  
                      l4913 2ADC                        l4905 2A6C                        l4841 30CC  
                      l5609 18B6                        l5561 16CA                        l5553 1678  
                      l5545 1626                        l5537 15D4                        l5529 1582  
                      l5617 1904                        l5481 13AE                        l5393 102C  
                      l5385 0FEC                        l5377 0FAC                        l5369 0F6C  
                      l5473 2CC2                        l5465 2C86                        l5457 2C34  
                      l5449 2C2C                        l5721 045A                        l5713 041A  
                      l5705 03C8                        l5641 00D0                        l5633 00B0  
                      l5625 0092                        l5297 2960                        l5289 290C  
                      l6089 1C68                        l6097 1CA2                        l4835 2E4C  
                      l4827 2DF4                        l4819 2DB8                        l4931 3006  
                      l4851 271C                        l4915 2AEE                        l4907 2A80  
                      l4843 30E6                        l5619 1912                        l5571 172E  
                      l5563 16DC                        l5555 168A                        l5547 1638  
                      l5539 15E6                        l5491 13F8                        l5483 13B2  
                      l5395 103C                        l5387 0FFC                        l5379 0FBC  
                      l5475 2CD2                        l5467 2C8A                        l5459 2C4A  
                      l5803 0734                        l5731 0486                        l5723 0462  
                      l5715 0420                        l5707 03DA                        l5811 0778  
                      l5651 0120                        l5643 00D8                        l5635 00B8  
                      l5627 0096                        l6371 25B2                        l6099 1D0E  
                      l4837 2E60                        l4829 2E08                        l4933 300A  
                      l4925 2FDC                        l4861 275E                        l4853 2720  
                      l4845 26EA                        l4909 2A8E                        l4917 2AF4  
                      l4941 1D5A                        l5581 1796                        l5573 1744  
                      l5565 16F2                        l5557 16A0                        l5549 164E  
                      l5493 1410                        l5485 13B4                        l5397 104C  
                      l5389 100C                        l5469 2CA6                        l5901 0A20  
                      l5821 07D4                        l5813 078A                        l5805 0744  
                      l6381 069C                        l5741 04A8                        l5733 048E  
                      l5725 0470                        l5717 0444                        l5709 03FE  
                      l5661 017A                        l5653 0128                        l5645 00EA  
                      l5637 00C0                        l5629 00A0                        l6373 2668  
                      l4783 3242                        l4791 2D12                        l4935 3010  
                      l4927 2FEE                        l4871 27B8                        l4863 277C  
                      l4855 272E                        l4847 26EE                        l4919 2B04  
                      l4951 1DCE                        l4943 1D82                        l5591 17FE  
                      l5583 17AC                        l5575 175A                        l5567 1708  
                      l5559 16B6                        l5495 1426                        l5487 13CC  
                      l5479 13AA                        l5399 105C                        l5911 0A78  
                      l5903 0A2E                        l6383 09C0                        l5831 0808  
                      l5823 07E2                        l5815 0792                        l5807 0770  
                      l5751 04E2                        l5743 04BA                        l5735 0496  
                      l5727 0478                        l5719 0452                        l5671 01F4  
                      l5663 0188                        l5647 00FE                        l5639 00C8  
                      l6375 20F4                        l6367 1CBA                        _ADIE 007CEE  
                      _ADIF 007CF6                        l4785 3250                        l4793 2D1C  
                      l4929 2FFA                        l4873 27E6                        l4865 2784  
                      l4881 2820                        l4857 274E                        l4849 26FC  
                      l4961 1E18                        l4953 1DEA                        l4945 1DA2  
                      l5593 1812                        l5585 17C0                        l5577 176E  
                      l5569 171C                        l5497 143A                        l5489 13EA  
                      l6385 0CEA                        l5921 0B08                        l5913 0A9C  
                      l5905 0A3C                        l5841 082E                        l5833 080E  
                      l5825 07EA                        l5761 0542                        l5753 04FC  
                      l5745 04BE                        l5737 049E                        l5729 047E  
                      l5681 0284                        l5673 0218                        l5665 01AC  
                      l5657 0148                        l5649 010C                        l6377 221E  
                      l6369 2980                        l4795 2D3A                        l4787 2CEE  
                      l4883 2830                        l4875 2806                        l4867 2798  
                      l4859 2752                        l4891 29E6                        l4971 1EB6  
                      l4963 1E22                        l4955 1DFC                        l4947 1DB2  
                      l4939 1D3A                        l5595 1824                        l5587 17D2  
                      l5579 1780                        l5499 144C                        l6387 111C  
                      l5931 0B86                        l5923 0B1A                        l5915 0AAE  
                      l5907 0A42                        l5851 0860                        l5843 0834  
                      l5835 0816                        l5827 07F2                        l5819 07B0  
                      l6379 064A                        l5771 058C                        l5763 0546  
                      l5755 0500                        l5747 04D0                        l5739 04A4  
                      l5691 0302                        l5683 0296                        l5675 022A  
                      l5667 01BE                        l5659 016C                        l4797 2D70  
                      l4789 2D00                        l4885 2850                        l4877 2808  
                      l4869 27A6                        l4893 29F4                        l4981 1F86  
                      l4965 1E28                        l4973 1F1A                        l4957 1E0A  
                      l4949 1DB4                        l5597 183A                        l5589 17E8  
                      l5941 0C16                        l5933 0BAA                        l5925 0B3E  
                      l5917 0AD2                        l5909 0A66                        l5861 08AA  
                      l5853 0864                        l5845 0838                        l5837 081E  
                      l5829 0800                        l5781 05FA                        l5773 05A6  
                      l5765 0560                        l5757 051A                        l5749 04D4  
                      l5693 0326                        l5685 02BA                        l5677 024E  
                      l5669 01E2                        l4879 281A                        l4895 2A14  
                      l4991 1FCC                        l4975 1F34                        l4983 1F94  
                      l4967 1EAA                        l4959 1E10                        l5599 1850  
                      l5951 0C94                        l5943 0C28                        l5935 0BBC  
                      l5927 0B50                        l5919 0AE4                        l5871 08FE  
                      l5863 08B8                        l5855 0872                        l5847 084A  
                      l5839 0826                        l5783 0608                        l5775 05B4  
                      l5767 056E                        l5759 0528                        l5791 0634  
                      l5695 0338                        l5687 02CC                        l5679 0260  
                      l4897 2A18                        l4889 29E2                        l4993 1FD8  
                      l4985 1FA6                        l4977 1F52                        l4969 1EB0  
                      l5953 0CB8                        l5945 0C4C                        l5937 0BE0  
                      l5929 0B74                        l5881 095E                        l5873 0918  
                      l5865 08D2                        l5857 088C                        l5849 084E  
                      l5961 0D60                        l5785 0616                        l5777 05CE  
                      l5769 0588                        l5793 0668                        l5697 035C  
                      l5689 02F0                        l4899 2A26                        l4995 1FE0  
                      l4987 1FB4                        l4979 1F6C                        l5955 0CC6  
                      l5947 0C5E                        l5939 0BF2                        l5883 0974  
                      l5875 091C                        l5867 08D6                        l5859 0890  
                      l5779 05E4                        l5699 036E                        l4989 1FBA  
                      l4997 1FF0                        l5965 0D82                        l5949 0C82  
                      l5885 098A                        l5877 0936                        l5869 08F0  
                      l5973 0DC8                        l5797 0686                        l5967 0D92  
                      l5887 0998                        l5879 0944                        l5895 09AA  
                      l5959 0CD4                        l5799 0712                        l5991 192E  
                      l5969 0DBE                        l5897 09DE                        l5993 1932  
                      l5899 09FC                        l5995 193C                        l5997 1940  
                      l5999 194E                        STR_1 FDAB                        STR_2 FDBC  
                      STR_3 FD9A                        STR_4 FDCD                        STR_5 FE66  
                      STR_6 FD45                        STR_7 FE55                        STR_8 FD56  
                      STR_9 FD56                        u2000 2B80                        u2001 2B7C  
                      u2010 2C10                        u2011 2C0C                        u3000 272E  
                      u3001 272A                        u3011 2758                        u3020 277C  
                      u3100 2ABC                        u3021 2778                        u3101 2AB8  
                      u3030 27A6                        u3110 2B04                        u2150 2F4A  
                      u3031 27A2                        u3111 2B00                        u2151 2F46  
                      u3120 2FEE                        u3040 27E6                        u3200 1F34  
                      u4000 0D7E                        u3121 2FEA                        u3041 27E2  
                      u3201 1F30                        u4001 0D7A                        u3050 2830  
                      u3210 1F52                        u3130 1D6A                        u4010 0DB6  
                      u3051 282C                        u3211 1F4E                        u3131 1D64  
                      u4011 0DB2                        u3060 29F4                        u3220 1F6C  
                      u3140 1D6C                        u3300 23AC                        u4100 1B8E  
                      u4020 194E                        u3061 29F0                        u3221 1F68  
                      u3301 23A8                        u4101 1B8A                        u4021 194A  
                      u3070 2A26                        u3230 1F86                        u3150 1D82  
                      u3310 23D0                        u4110 1BE6                        u4030 1970  
                      u3071 2A22                        u3231 1F82                        u3151 1D7E  
                      u3311 23CC                        u4111 1BE2                        u4031 196C  
                      u3080 2A64                        u3240 1F94                        u3160 1DB2  
                      u3320 2474                        u3400 22A0                        u4120 1C42  
                      u4040 1986                        u3081 2A60                        u3241 1F90  
                      u3161 1DAE                        u3321 2470                        u3401 229C  
                      u4121 1C3E                        u4041 1982                        u3090 2A8E  
                      u3250 1FA6                        u3170 1DCE                        u3330 2FD2  
                      u3410 22C8                        u4130 1C9A                        u4050 19A8  
                      u3091 2A8A                        u3251 1FA2                        u3171 1DCA  
                      u3331 2FCE                        u3411 22C4                        u4131 1C96  
                      u4051 19A4                        u1900 3210                        u3260 1FB4  
                      u3180 1DFC                        u3340 20B6                        u3420 25DE  
                      u3500 2960                        u4140 1D0E                        u4060 1A08  
                      u1901 320C                        u3261 1FB0                        u3181 1DF8  
                      u3341 20B2                        u3421 25DA                        u3501 295C  
                      u4141 1D0A                        u4061 1A04                        u1910 321E  
                      u3270 1FCC                        u3190 1E0A                        u3350 2138  
                      u3430 2628                        u3510 29A4                        u4070 1A7E  
                      u1911 321A                        u3271 1FC8                        u3191 1E06  
                      u3351 2134                        u3431 2624                        u4207 25F6  
                      u3511 29A0                        u4071 1A7A                        u3280 22F2  
                      u3600 1478                        u3520 0E52                        u3360 219C  
                      u3440 2636                        u4080 1ADA                        u3281 22EE  
                      u3601 1474                        u3521 0E4E                        u3361 2198  
                      u4217 26B0                        u3441 2632                        u4081 1AD6  
                      u1930 2E8C                        u3290 233A                        u3610 14B4  
                      u3530 1368                        u3370 21C6                        u3450 2694  
                      u4090 1B32                        u1931 2E88                        u3291 2336  
                      u3611 14B0                        u3531 1364                        u4307 0552  
                      u3371 21C2                        u4227 2150                        u3451 2690  
                      u4091 1B2E                        u1940 2EAA                        u2900 2D3A  
                      u3700 1612                        u3620 14CA                        u3540 138E  
                      u3380 21E0                        u3460 26D4                        u1941 2EA6  
                      u2901 2D36                        u3701 160E                        u3621 14C6  
                      u3541 138A                        u4317 057A                        u3381 21DC  
                      u4237 216E                        u3461 26D0                        u4157 1A14  
                      u1950 2EC6                        u2910 2D70                        u3710 164E  
                      u3630 1506                        u3550 2C68                        u3390 2262  
                      u3470 288A                        u1951 2EC2                        u2911 2D6C  
                      u3711 164A                        u3631 1502                        u3551 2C64  
                      u4407 08E2                        u4327 0598                        u4247 227E  
                      u3391 225E                        u3471 2886                        u4167 1D24  
                      u1960 2EFA                        u2920 30CA                        u3800 17AC  
                      u3720 1664                        u3640 151C                        u3560 2CC2  
                      u3480 28A2                        u1961 2EF6                        u2921 30C6  
                      u3801 17A8                        u3721 1660                        u3641 1518  
                      u3561 2CBE                        u4417 090A                        u4337 05C0  
                      u4257 2B68                        u4177 29B0                        u3481 289E  
                      u1970 2F0A                        u2930 3134                        u3810 17E8  
                      u3730 16A0                        u3650 1558                        u3570 1410  
                      u3490 2904                        u1971 2F06                        u2931 3130  
                      u3811 17E4                        u3731 169C                        u3651 1554  
                      u3571 140C                        u4427 0928                        u4347 0622  
                      u4267 2C16                        u4187 29CE                        u3491 2900  
                      _PEIE 007F96                        u1980 3152                        u2940 2DC6  
                      u3820 17FE                        u3740 16B6                        u3660 156E  
                      u3580 1426                        u3900 0120                        u1981 314E  
                      u2941 2DC2                        u3821 17FA                        u3741 16B2  
                      u3661 156A                        u3581 1422                        u4437 0950  
                      u4357 0674                        u4277 04EE                        u3901 011C  
                      u4197 2570                        u1990 3176                        u2870 3250  
                      u2950 2DE8                        u3830 183A                        u3750 16F2  
                      u3670 15AA                        u3590 1462                        u3910 0144  
                      u1991 3172                        u2871 324C                        u2951 2DE4  
                      u3831 1836                        u3751 16EE                        u3671 15A6  
                      u3591 145E                        u4447 09EA                        u4367 073C  
                      u4287 050C                        u3911 0140                        u2880 2D00  
                      u2960 2E3E                        u3840 1850                        u3760 1708  
                      u3680 15C0                        u3920 041A                        u2881 2CFC  
                      u2961 2E3A                        u3841 184C                        u3761 1704  
                      u3681 15BC                        u4457 0D8A                        u4377 087E  
                      u4297 0534                        u3921 0416                        u2890 2D12  
                      u2970 2E4C                        u3850 188C                        u3770 1744  
                      u3690 15FC                        u3930 0470                        u2891 2D0E  
                      u2971 2E48                        u3851 1888                        u3771 1740  
                      u3691 15F8                        u4467 2CDE                        u4387 089C  
                      u3931 046C                        u2980 30E6                        u3860 18A2  
                      u3780 175A                        u3940 0730                        u2981 30E2  
                      u3861 189E                        u3781 1756                        u4477 139A  
                      u4397 08C4                        u3941 072C                        u2990 26FC  
                      u3870 18DE                        u3790 1796                        u3950 0768  
                      u2991 26F8                        u3871 18DA                        u3791 1792  
                      u4487 13C0                        u3951 0764                        u3880 1912  
                      u3960 078A                        u4497 191E                        u3881 190E  
                      u3961 0786                        u3970 07AC                        u3890 00EA  
                      u3971 07A8                        u3891 00E6                        u3980 0800  
                      u3981 07FC                        u3990 0A3C                        u3991 0A38  
                      _Pong 008E                        abs@a 0017                        _dbuf 0132  
                      _ctoa 2FDC                        _main 192E                        _dtoa 1D3A  
                      _init 3256                        _pot1 00D9          __size_of_LCD_Clear 0036  
                      _prec 00D7                        _nout 00D5                        pad@i 001D  
                      pad@p 001A                        _text 0152                        fsr1h 000FE2  
                      fsr2h 000FDA                        indf2 000FDF                        fsr1l 000FE1  
                      pad@w 001F                        fsr2l 000FD9                        btemp 005A  
                      start 008A                ___param_bank 000000                       ??_ISR 0001  
   __size_of_Morseovka_init 001E              _LCD_ShowString 2E7A                       ??_abs 0019  
                     ??_pad 001C            __end_of_LCD_Init 2C20            __end_of_LCD_Send 3222  
                     ?_Pong 0001             __end_of___aodiv 2872                       ?_ctoa 0021  
                     ?_main 0001                       ?_dtoa 0021             __end_of___aomod 2B46  
                     ?_init 0001                       STR_10 FD78                       STR_11 FD45  
                     STR_20 FEBB                       STR_12 FD89                       STR_13 FD89  
                     STR_21 FB13                       STR_30 FFE8                       STR_22 FECC  
                     STR_14 FD12                       STR_15 FD78                       STR_31 FF7E  
                     STR_23 FE33                       STR_32 FFA3                       STR_40 FFDD  
                     STR_24 FFBB                       STR_16 FD23                       STR_17 FD23  
                     STR_25 FFD6                       STR_33 FF8D                       STR_41 FFD2  
                     STR_34 FF48                       STR_42 FEE5                       STR_50 FF89  
                     STR_26 FF96                       STR_18 FEAA                       STR_19 FD12  
                     STR_35 FFD4                       STR_27 FEE3                       STR_43 FF98  
                     STR_51 FF2C                       STR_44 FF34                       STR_28 FF8B  
                     STR_36 FFF3                       STR_60 FF7A                       STR_52 FF39  
                     STR_37 FF32                       STR_45 FF64                       STR_29 FF82  
                     STR_53 FF46                       STR_61 FEDD                       STR_46 FF6F  
                     STR_38 FF80                       STR_54 FF53                       STR_62 FF0E  
                     STR_70 FE11                       STR_71 FDEF                       STR_39 FF30  
                     STR_47 FFC9                       STR_55 FF6D                       STR_63 FF60  
                     STR_72 FE11                       STR_48 FF62                       STR_56 FFAE  
                     STR_64 FF1D                       STR_80 FCCE                       STR_65 FF37  
                     STR_49 FFC7                       STR_57 FFA1                       STR_81 FCDF  
                     STR_73 FC56                       STR_66 FB32                       STR_58 FF94  
                     STR_90 FE88                       STR_82 FCF0                       STR_74 FC68  
                     STR_59 FF87                       STR_67 FD67                       STR_83 FD01  
                     STR_75 FC79                       STR_91 FB4C                       STR_84 FD34  
                     STR_76 FC8A                       STR_92 FB5F                       STR_68 FB35  
                     STR_69 FDEF                       STR_85 FDDE                       STR_77 FC9B  
                     STR_93 FB72                       STR_86 FE22                       STR_78 FCAC  
                     STR_94 FB85                       STR_87 FE44                       STR_79 FCBD  
                     STR_95 FB98                       STR_88 FE77                       STR_96 FBAB  
                     STR_89 FE99                       STR_97 FBBE                       STR_98 FBD1  
                     STR_99 FBE4                       _RC1IE 007CED                       _RC1IF 007CF5  
                     i2l218 007E                vfpfcnvrt@fmt 0047                       _TX1IF 007CF4  
                     _TRISD 000F95                       Pong@i 00CA                       Pong@j 00CC  
                     Pong@n 00B3                       Pong@r 00C8                       Pong@t 00C6  
                     Pong@z 00CE                       _flags 0058                       _fputc 2CEE  
                     _fputs 3088             __end_of_kr_init 29E2                       pad@fp 0016  
                     _width 0056                       ctoa@c 0023                       _putch 3240  
                     _zapis 0100                       ctoa@w 0024                       main@m 01B8  
                     dtoa@d 0023                       dtoa@i 0043                       dtoa@n 003B  
                     dtoa@p 0035                       dtoa@s 0039                       dtoa@w 0037  
                     tablat 000FF5            __end_of_PWM_init 2F7A                       ttemp5 005B  
                     ttemp6 005E                       ttemp7 0062                       status 000FD8  
                     wtemp8 005B             __end_of_sprintf 3088            __end_of_Bargraph 192E  
            __CFG_FOSC$HSMP 000000             __initialization 3178      __end_of_LCD_ShowString 2F0C  
              __end_of_Pong 0DDE                __end_of_ctoa 3036                __end_of_main 1D3A  
              __end_of_dtoa 201A                __end_of_init 326A                LCD_Send@data 0005  
                    ??_Pong 007A                      ??_ctoa 0024                      ??_main 00D0  
                    ??_dtoa 002B                      ??_init 0007           __end_of_LCD_Clear 3178  
             __activetblptr 000002              __CFG_PLLCFG$ON 000000                  Pong@zivoty 009E  
    __size_of_PWM_motor_led 00CE                      ?_fputc 0006                      STR_100 FBF7  
                    STR_101 FC0A                      STR_110 FB5F                      STR_102 FC1D  
                    ?_fputs 000F                      STR_111 FB72                      STR_103 FC30  
                    STR_112 FB85                      STR_120 FC1D                      STR_104 FC43  
                    STR_113 FB98                      STR_121 FC30                      STR_105 FE00  
                    STR_114 FBAB                      STR_122 FC43                      STR_106 FEEE  
                    _ADRESH 000FC4                      STR_107 FB4C                      STR_115 FBBE  
                    STR_108 FE00                      STR_116 FBD1                      STR_117 FBE4  
                    STR_109 FEFE                      STR_118 FBF7                      _ADRESL 000FC3  
                    STR_119 FC0A                      _CCPR1L 000FBE                      _ANSELA 000F38  
                    ?_putch 0001                      _ANSELC 000F3A                      _ANSELE 000F3C  
                    _GODONE 007E11              __CFG_WDTEN$OFF 000000                      i2l4361 0052  
                    i2l4353 0012                      i2l4363 0060                      i2l4355 002A  
                    i2l4365 0072                      i2l4357 0042                      i2l4359 0044  
                    _RCREG1 000FAE                      _SPBRG1 000FAF                      _TMR2IF 007CF1  
                    _TMR2ON 007DD2                      _SSP2IF 007D27                      _TXREG1 000FAD  
                Morseovka@i 007F                      Pong@P1 00AF                      Pong@P2 00B1  
              _CCPTMRS0bits 000F49                vfprintf@cfmt 0066             ?_LCD_ShowString 0006  
                 ??___aodiv 0015                   ??___aomod 0015                      clear_0 317E  
                    clear_1 318A                      _printf 31D4                      pad@buf 0018  
                    ctoa@fp 0021                      dtoa@fp 0021          __size_of_Pong_init 000A  
        __size_of_Morseovka 05CC                      _strlen 310C                      fputc@c 0006  
                    fputs@c 0013                      fputs@i 0014                      fputs@s 000F  
                 ??_kr_init 0082                __mediumconst FB12                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8      __size_of_Bargraph_init 002E  
          __end_of_vfprintf 2FDC                   ??_sprintf 0056                  __accesstop 0060  
   __end_of__initialization 3198                   ?_LCD_Init 0001                   ?_LCD_Send 0001  
             ___rparam_used 000001              __pcstackCOMRAM 0001               _PWM_motor_led 2C20  
            _Morseovka_init 3222               __end_of_fputc 2DB8               __end_of_fputs 30CC  
             __end_of_putch 3256                   ?_PWM_init 0001                   ?_Bargraph 0001  
                   ??_fputc 000A                     ??_fputs 0013                     ??_putch 0005  
                __pbssBANK0 00D2                  __pbssBANK1 0100                  ??_LCD_Init 0006  
                ??_LCD_Send 0005           __end_of_Pong_init 3274           __end_of_Morseovka 13AA  
    __end_of_Morseovka_init 3240              ?_PWM_motor_led 0001               _Bargraph_init 31A6  
                   ?_printf 0068                     ?_strlen 0005                  ??_PWM_init 0005  
                ??_Bargraph 007A          __size_of_vfpfcnvrt 0226                     _SSP2ADD 000F6E  
                   _SSP2BUF 000F6F             LCD_ShowString@i 0009                     __Hparam 0000  
            ?_Bargraph_init 0001             ?_Morseovka_init 0001                     __Lparam 0000  
                   ___aodiv 26EA                     ___aomod 29E2                   ?_vfprintf 0060  
                   __pcinit 3178                     __ramtop 1000                     __ptext0 192E  
                   __ptext1 2872                     __ptext2 24F4                     __ptext3 201A  
                   __ptext4 3256                     __ptext5 2B46                     __ptext6 008E  
                   __ptext7 326A                     __ptext8 2C20                     __ptext9 2F0C  
           __size_of_printf 0028                     _nadpis1 00EC                     _nadpis2 00DB  
           __size_of_strlen 0036                __size_of_ISR 0082                   _T2CONbits 000FBA  
              __size_of_abs 0040                __size_of_pad 00C2                     _kr_init 2872  
                 _LCD_Clear 3142                     main@k_r 0163                     _sprintf 3036  
                   main@mor 0185                     main@pwm 0196        end_of_initialization 3198  
                   fputc@fp 0008               __Lmediumconst FB12                     fputs@fp 0011  
          ??_LCD_ShowString 0008             ??_PWM_motor_led 007A                Bargraph@text 007C  
     LCD_ShowString@lineNum 0008           _Knight_rider_2000 201A           _Knight_rider_3000 24F4  
         __end_of_vfpfcnvrt 24F4                     postdec2 000FDD                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE          ?_Knight_rider_2000 0001  
        ?_Knight_rider_3000 0001                  ??_vfprintf 0056                     strlen@a 0007  
                   strlen@s 0005                   _PORTAbits 000F80                   _PORTCbits 000F82  
       ??_Knight_rider_2000 007A         ??_Knight_rider_3000 007A                   _TRISAbits 000F92  
                 _TRISCbits 000F94                   _TRISDbits 000F95                  ?_LCD_Clear 0001  
        Knight_rider_2000@i 007E          Knight_rider_2000@j 0080          Knight_rider_2000@r 007C  
        Knight_rider_3000@i 007C          Knight_rider_3000@j 007E                 _CCP1CONbits 000FBD  
           ??_Bargraph_init 0005   __end_of_Knight_rider_2000 22CE   __end_of_Knight_rider_3000 26EA  
         __size_of_LCD_Init 00DA           __size_of_LCD_Send 0026                 vfpfcnvrt@ap 0049  
               vfpfcnvrt@fp 0045                 vfpfcnvrt@ll 004D              __end_of_printf 31FC  
            __end_of_strlen 3142         start_initialization 3178                 __end_of_ISR 008A  
         __size_of_PWM_init 006E                 __end_of_abs 310C                 __end_of_pad 2E7A  
         __size_of_Bargraph 0584                   Pong@micek 00B5                   Pong@vitez 008D  
               vfprintf@fmt 0062                   _Pong_init 326A                   _Morseovka 0DDE  
              Pong@gameover 007C                    ??_printf 0056                    ??_strlen 0007  
                kr_init@k_r 0084                  kr_init@mor 0095                 __pbssCOMRAM 0056  
             __pcstackBANK0 0060               __pcstackBANK1 0163            ___aodiv@dividend 0005  
               ??_LCD_Clear 0006            ??_Morseovka_init 0005  __size_of_Knight_rider_2000 02B4  
__size_of_Knight_rider_3000 01F6         PWM_motor_led@strida 007C                   _dtoa$1781 0033  
                ?_Pong_init 0001                  ?_Morseovka 0001                   __pintcode 0008  
             __pmediumconst FB12                    ?___aodiv 0005                    ?___aomod 0005  
          ___aodiv@quotient 0017            __CFG_PRICLKEN$ON 000000           __size_of_vfprintf 0062  
                  ?_kr_init 0001                    ?_sprintf 0068              __size_of_fputc 00CA  
            __size_of_fputs 0044              __size_of_putch 0016                    _LCD_Init 2B46  
                  _LCD_Send 31FC                    _LATAbits 000F89                    _LATCbits 000F8B  
                  _LATDbits 000F8C                    i2u271_40 002A                    i2u271_41 0026  
                  i2u272_40 0052                    i2u272_41 004E                    i2u273_40 0060  
                  i2u273_41 005C                   _vfpfcnvrt 22CE                  _ADCON0bits 000FC2  
                _ADCON2bits 000FC0                    _PWM_init 2F0C                    _Bargraph 13AA  
                vfpfcnvrt@c 0055                    __Hrparam 0000       __end_of_PWM_motor_led 2CEE  
                vfprintf@ap 0064                    __Lrparam 0000                  vfprintf@fp 0060  
               ??_Pong_init 0005                 ??_Morseovka 007A            __size_of___aodiv 0188  
          __size_of___aomod 0164                   kr_init@kr 00A6                  ?_vfpfcnvrt 0045  
           ___aodiv@divisor 000D             ___aodiv@counter 0015                  _ANSELAbits 000F38  
                _ANSELDbits 000F3B                  sprintf@fmt 006A            __size_of_kr_init 0170  
                  __ptext10 0DDE                    __ptext11 31D4                    __ptext20 26EA  
                  __ptext12 3222                    __ptext21 2FDC                    __ptext13 13AA  
                  __ptext30 31A6                    __ptext22 2DB8                    __ptext14 3036  
                  __ptext23 310C                    __ptext15 2F7A                    __ptext24 3088  
                  __ptext16 22CE                    __ptext25 2CEE                    __ptext17 1D3A  
                  __ptext26 3240                    __ptext18 30CC                    __ptext27 2E7A  
                  __ptext19 29E2                    __ptext28 3142                    __ptext29 31FC  
              _SSP2CON1bits 000F6C                _SSP2CON2bits 000F6B            __size_of_sprintf 0052  
             __size_of_Pong 0D50               __size_of_ctoa 005A               __size_of_main 040C  
             __size_of_dtoa 02E0               __size_of_init 0014       __end_of_Bargraph_init 31D4  
              _PSTR1CONbits 000FB9                    int$flags 005A                    _vfprintf 2F7A  
   __size_of_LCD_ShowString 0092                    main@barg 01A7                   printf@fmt 0068  
                  main@pong 0174                _SSP2STATbits 000F6D            ___aomod@dividend 0005  
                 putch@data 0005                    intlevel2 0000                   sprintf@ap 0072  
             Bargraph@graph 008D                  _RCSTA1bits 000FAB                    printf@ap 006C  
           ___aomod@divisor 000D                 ??_vfpfcnvrt 004B             ___aomod@counter 0015  
    LCD_ShowString@textData 0006                    sprintf@f 0074                    sprintf@s 0068  
              ___aodiv@sign 0016                ___aomod@sign 0016  
